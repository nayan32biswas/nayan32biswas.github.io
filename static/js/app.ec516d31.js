(function(e){function t(t){for(var n,a,i=t[0],l=t[1],d=t[2],c=0,u=[];c<i.length;c++)a=i[c],Object.prototype.hasOwnProperty.call(s,a)&&s[a]&&u.push(s[a][0]),s[a]=0;for(n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n]);p&&p(t);while(u.length)u.shift()();return r.push.apply(r,d||[]),o()}function o(){for(var e,t=0;t<r.length;t++){for(var o=r[t],n=!0,a=1;a<o.length;a++){var i=o[a];0!==s[i]&&(n=!1)}n&&(r.splice(t--,1),e=l(l.s=o[0]))}return e}var n={},a={app:0},s={app:0},r=[];function i(e){return l.p+"static/js/"+({}[e]||e)+"."+{"chunk-040ab9fc":"ce90a37b","chunk-05d1f99a":"bafef61c","chunk-2d0c49f8":"11efd52d","chunk-2d210c47":"9f79205e","chunk-2d22bd05":"498db96c","chunk-2d22d746":"fee694a7","chunk-755acf94":"64ef11e4","chunk-b2179e46":"147eada7"}[e]+".js"}function l(t){if(n[t])return n[t].exports;var o=n[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,l),o.l=!0,o.exports}l.e=function(e){var t=[],o={"chunk-040ab9fc":1,"chunk-05d1f99a":1,"chunk-755acf94":1,"chunk-b2179e46":1};a[e]?t.push(a[e]):0!==a[e]&&o[e]&&t.push(a[e]=new Promise((function(t,o){for(var n="static/css/"+({}[e]||e)+"."+{"chunk-040ab9fc":"95957f58","chunk-05d1f99a":"2c58b009","chunk-2d0c49f8":"31d6cfe0","chunk-2d210c47":"31d6cfe0","chunk-2d22bd05":"31d6cfe0","chunk-2d22d746":"31d6cfe0","chunk-755acf94":"8fd9307e","chunk-b2179e46":"19e82264"}[e]+".css",s=l.p+n,r=document.getElementsByTagName("link"),i=0;i<r.length;i++){var d=r[i],c=d.getAttribute("data-href")||d.getAttribute("href");if("stylesheet"===d.rel&&(c===n||c===s))return t()}var u=document.getElementsByTagName("style");for(i=0;i<u.length;i++){d=u[i],c=d.getAttribute("data-href");if(c===n||c===s)return t()}var p=document.createElement("link");p.rel="stylesheet",p.type="text/css",p.onload=t,p.onerror=function(t){var n=t&&t.target&&t.target.src||s,r=new Error("Loading CSS chunk "+e+" failed.\n("+n+")");r.code="CSS_CHUNK_LOAD_FAILED",r.request=n,delete a[e],p.parentNode.removeChild(p),o(r)},p.href=s;var g=document.getElementsByTagName("head")[0];g.appendChild(p)})).then((function(){a[e]=0})));var n=s[e];if(0!==n)if(n)t.push(n[2]);else{var r=new Promise((function(t,o){n=s[e]=[t,o]}));t.push(n[2]=r);var d,c=document.createElement("script");c.charset="utf-8",c.timeout=120,l.nc&&c.setAttribute("nonce",l.nc),c.src=i(e);var u=new Error;d=function(t){c.onerror=c.onload=null,clearTimeout(p);var o=s[e];if(0!==o){if(o){var n=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;u.message="Loading chunk "+e+" failed.\n("+n+": "+a+")",u.name="ChunkLoadError",u.type=n,u.request=a,o[1](u)}s[e]=void 0}};var p=setTimeout((function(){d({type:"timeout",target:c})}),12e4);c.onerror=c.onload=d,document.head.appendChild(c)}return Promise.all(t)},l.m=e,l.c=n,l.d=function(e,t,o){l.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},l.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,t){if(1&t&&(e=l(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(l.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)l.d(o,n,function(t){return e[t]}.bind(null,n));return o},l.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return l.d(t,"a",t),t},l.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},l.p="/",l.oe=function(e){throw console.error(e),e};var d=window["webpackJsonp"]=window["webpackJsonp"]||[],c=d.push.bind(d);d.push=t,d=d.slice();for(var u=0;u<d.length;u++)t(d[u]);var p=c;r.push([0,"chunk-vendors"]),o()})({0:function(e,t,o){e.exports=o("cd49")},"0305":function(e,t){var o="<h1 id=supervisor>Supervisor</h1> <p>Supervisor to run something internally in a server. Like <strong>gunicorn</strong> or others.</p> <p><strong>Install</strong></p> <ul> <li><code>sudo apt install supervisor</code></li> </ul> <h2 id=setup>Setup</h2> <ul> <li><code>sudo nano /etc/supervisor/conf.d/&lt;program_name&gt;.conf</code><pre><code class=language-conf>[program:&lt;program_name&gt;]\ndirectory=/home/&lt;directory&gt;/\ncommand=/home/&lt;username&gt;/&lt;project&gt;/&lt;venv&gt;/bin/gunicorn -w 3 run:app\nuser=&lt;username&gt;\nautostart=true\nautorestart=true\nstopasgroup=true\nkillasgroup=true\nstderr_logfile=/var/log/supervisor/&lt;filename&gt;.err.log\nstdout_logfile=/var/log/supervisor/&lt;filename&gt;.out.log</code></pre> </li> </ul> <p><strong>Explenation</strong></p> <ol> <li>&lt;[]&gt; This is name of your programm.</li> <li><directory> Derectory where </directory></li> <li><command> This is for flask, you can use multiple command.</command></li> <li><user> username of os.</user></li> <li><autostart> Auto start when pc activate.</autostart></li> <li><autorestart> Auto restart when pc problem arise or down it.</autorestart></li> <li><stopasgroup> Stop as group</stopasgroup></li> <li><killasgroup> Kill as group</killasgroup></li> <li><stderr_logfile> Standard error logfile</stderr_logfile></li> <li><stdout_logfile> Standard output logfile</stdout_logfile></li> </ol> <ul> <li>Create Log files <code>&lt;filename&gt;.err.log</code> and <code>&lt;filename&gt;.out.log</code></li> <li><code>sudo supervisorctl reload</code> Restart supervisor.</li> <li><code>sudo supervisorctl start &lt;program_name&gt;</code> Start program.</li> <li><code>sudo supervisorctl stop &lt;program_name&gt;</code> Stop program.</li> </ul> ";e.exports=o},"05b9":function(e,t){var o="<h1 id=setup-nginx>Setup nginx</h1> <p><strong>Install</strong>.</p> <ul> <li><p><code>sudo apt update; sudo apt install nginx</code></p> </li> <li><p><code>sudo unlink /etc/nginx/sites-enabled/default</code> first time in a server.</p> </li> <li><p><code>sudo vi /etc/nginx/conf.d/&lt;project&gt;.conf</code></p> </li> <li><p><strong>Add file</strong></p> </li> <li><p><code>sudo nginx -t</code> check status.</p> </li> <li><p><code>sudo systemctl restart nginx</code> Reload nginx file.</p> </li> </ul> <pre><code class=language-conf>log_format upstreamlog &#39;$server_name: [$status] [$time_local] [rt=$request_time] [bbs=$body_bytes_sent] [uct=&quot;$upstream_connect_time&quot;] [urt=&quot;$upstream_response_time&quot;] [ru=$remote_user] [&quot;$request&quot;]&#39;;\n\n; ; sock file version\n; upstream backend_server {\n;     server unix:/www/&lt;project_name&gt;/app/staticfiles/&lt;project_name&gt;.sock fail_timeout=0;\n; }\n\n; ip version\nupstream backend_server {\n    ; ip_hash; If multiple instance running, this will send single user to a single targeted server over and over.\n\n    ; server localhost:8001; if have multiple server or instance\n    ; server localhost:8002; if have multiple server or instance\n    server localhost:8000;\n}\nserver {\n    listen          80 default_server;\n    server_name     localhost 127.0.0.1;\n    access_log      /var/log/nginx/&lt;project_name&gt;.access.log upstreamlog;\n    error_log       /var/log/nginx/&lt;project_name&gt;.error.log warn;\n    server_tokens   off;\n\n    location /static/ {\n        autoindex   off;\n        alias       /www/&lt;project_name&gt;/app/staticfiles/static/;\n    }\n    location /media/ {\n        autoindex off;\n        alias       /www/&lt;project_name&gt;/app/staticfiles/media/;\n    }\n\n    location / {\n        proxy_pass                  http://backend_server;\n        proxy_pass_request_headers  on;\n        proxy_set_header            X-Forwarded-For         $proxy_add_x_forwarded_for;\n        proxy_set_header            Host                    $http_host;\n        proxy_set_header            X-Forwarded-Proto       $scheme;\n        proxy_redirect              off;\n    }\n}</code></pre> <h1 id=problem-solution>Problem solution</h1> <h2 id=problem-1>Problem 1</h2> <p><strong>413 Request Entity Too Large - File Upload Issue</strong>.</p> <p><strong>Solution</strong>:</p> <p><code>sudo vi /etc/nginx/nginx.conf</code></p> <pre><code class=language-nginx>http {\n    client_max_body_size 100M;\n}</code></pre> <p><code>sudo systemctl restart nginx</code></p> <h2 id=problem-2>Problem 2</h2> <p><strong>Skipping adding rules</strong>.</p> <p><strong>Solution</strong>:</p> <pre><code class=language-bash>sudo ufw disable\nsudo ufw reset\nsudo ufw enable</code></pre> <h2 id=problem-3>Problem 3</h2> <p><strong>DevTools failed to parse SourceMap</strong>. actually problem on <strong>nginx</strong>.</p> <p><strong>Solution</strong>.</p> <h2 id=example>Example</h2> <pre><code class=language-conf>server {\n    server_name admin.project.com;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n\n    location /dashboard {\n        root /www/project;\n        index index.html;\n        try_files $uri $uri/ /dashboard/index.html;\n    }\n\n    location / {\n        include proxy_params;\n        proxy_pass http://unix:/www/project/socket/project-api.sock;\n    }\n\n    location /static/ {\n        root /www/project/saleor;\n    }\n\n    location /media/ {\n        root /www/project/saleor;\n    }\n\n    client_max_body_size 50M;\n\n}\nmap $sent_http_content_type $expires {\n    &quot;text/html&quot;                 epoch;\n    &quot;text/html; charset=utf-8&quot;  epoch;\n    default                     off;\n}\n\nserver {             # the port nginx is listening on\n    server_name     project.com;    # setup your domain here\n\n    gzip            on;\n    gzip_types      text/plain application/xml text/css application/javascript;\n    gzip_min_length 1000;\n\n    location / {\n        expires $expires;\n\n        proxy_redirect                      off;\n        proxy_set_header Host               $host;\n        proxy_set_header X-Real-IP          $remote_addr;\n        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto  $scheme;\n        proxy_read_timeout          1m;\n        proxy_connect_timeout       1m;\n        proxy_pass                          http://unix:/www/project/socket/project-frontend.sock;\n    }\n\n    location /_nuxt/ {\n        root /www/project/fortend;\n    }\n}\n</code></pre> ";e.exports=o},"114c":function(e,t){var o="<h1 id=gitlab-ci-cd>GITLAB CI-CD</h1> <h2 id=gitlab-runner>Gitlab-runner</h2> <h3 id=setup><a href=https://docs.gitlab.com/runner/install/linux-manually.html>Setup</a></h3> <ul> <li><code>sudo apt-get update</code></li> <li><code>sudo curl -L --output /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64</code></li> <li><code>sudo chmod +x /usr/local/bin/gitlab-runner</code></li> <li><code>sudo useradd --comment &#39;GitLab Runner&#39; --create-home gitlab-runner --shell /bin/bash</code></li> <li><code>sudo gitlab-runner install --user=gitlab-runner --working-directory=/home/gitlab-runner</code></li> <li><code>sudo gitlab-runner start</code></li> </ul> <h3 id=registering-runners><a href=https://docs.gitlab.com/runner/register/index.html>Registering Runners</a></h3> <pre><code class=language-sh>sudo gitlab-runner register --non-interactive --url &quot;https://gitlab.com/&quot; --registration-token &quot;&lt;PROTECTED_TOKEN&gt;&quot; \\\n  --executor &quot;docker&quot; --docker-image alpine:latest --description &quot;docker-runner&quot; --tag-list &quot;docker,build&quot; \\\n  --run-untagged=&quot;false&quot; --locked=&quot;false&quot; --access-level=&quot;not_protected&quot; </code></pre> <ul> <li><p><code>docker login registry.gitlab.com</code></p> <h3 id=command>Command</h3> </li> <li><p><code>sudo gitlab-runner start</code></p> </li> <li><p><code>sudo gitlab-runner stop</code></p> </li> <li><p><code>gitlab-runner --version</code></p> </li> </ul> <h2 id=ci-cd>CI-CD</h2> <ul> <li><code>docker login registry.gitlab.com</code> First login.</li> </ul> <pre><code class=language-yaml>image: docker:latest\nservices:\n  - docker:dind\n\nvariables:\n  DOCKER_HOST: tcp://docker:2375\n  # DOCKER_DRIVER: overlay2\n  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_BUILD_REF_SLUG\n  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest\n\nstages:\n  - build\n  - test\n\nbuild:\n  stage: build\n  script:\n    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY\n    - docker build -t $CONTAINER_TEST_IMAGE ./app\n    - docker push $CONTAINER_TEST_IMAGE\n  only:\n    refs:\n      - master\n    variables:\n      - $CI_COMMIT_MESSAGE =~ / build /\n\ntest:\n  stage: test\n  image: docker/compose\n  script:\n    - docker-compose build\n    - docker-compose run --rm ./manage.py migrate\n    # - docker-compose run --rm django pydocstyle\n    # - docker-compose run --rm django flake8\n    # - docker-compose run django coverage run -m pytest\n  only:\n    refs:\n      - master\n    variables:\n      - $CI_COMMIT_MESSAGE =~ / build test /</code></pre> <h2 id=error--solution>Error &amp; Solution</h2> <h3 id=job-failed-system-failure-prepare-environment>Job failed (system failure): prepare environment:</h3> <ul> <li>Error for on of the <code>.bash*</code> file, I get this error for <code>.bash_logout</code> file</li> <li><code>sudo nano /home/gitlab-runner/.bash_logout</code> Comment all the content in this file</li> </ul> <pre><code class=language-bash># if [ &quot;$SHLVL&quot; = 1 ]; then\n#     [ -x /usr/bin/clear_console ] &amp;&amp; /usr/bin/clear_console -q\n# fi</code></pre> <h3 id=cannot-create-directory-homegitlab-runnerbuilds-permission-denied>cannot create directory ‘/home/gitlab-runner/builds’: Permission denied</h3> <ul> <li><code>sudo chown -R gitlab-runner:gitlab-runner /home/gitlab-runner/</code> Solution</li> </ul> <h3 id=file-upload-permission-denied>File upload Permission denied</h3> <ul> <li><code>sudo cat &quot;gitlab-runner ALL=(ALL) NOPASSWD:ALL&quot; &gt;&gt; /etc/sudoers</code> set sudo user without password</li> </ul> ";e.exports=o},"1e14":function(e,t){var o="<h1 id=react>React</h1> <h2 id=simple-command>Simple Command</h2> <ul> <li><code>npx create-react-app my-app</code> create project by</li> <li>or</li> <li><code>sudo npm install -g create-react-app &lt;app_name&gt;</code></li> <li><code>npm start</code> start project by</li> <li><code>npm install &lt;module name&gt; --save</code> install module</li> <li><code>npm run build</code> first build you project</li> </ul> <h2 id=note>Note</h2> <p>props: passing data from parent to child and child to parent we use props. send data to child assing value into self variable into compontnt calling time, get data from child use handelar function. context: passing data from parent to nested chill and nested child to parent we use context. axios: We use axios to use API. react-redux: passing data from one component to other componet is complex and very annoying. To handel data gobaly over component we user redux. In redux we have to use <action> and <reducer>. redux-thunk: In redux we have to assign an object. but API colling take time to return object. Instated of object axios return a function. But redux does not support function assinign. This type of problem we solved by redux-thunk. by dispatch an function. Link: in html we use anchor tag to navigate a specific page. but anchor tag fully reload current page. This anchor tag make non single page application. To make non reload page we use <link> tag to navigat a page. History: <browserrouter> use history object by default. we can navigate othre page by change history object value. but BrowserRouter History object some proble, Like every time sand into <action>. Thats why Insted of <browserrouter> we use <router> and use user define <history>.</history></router></browserrouter></action></browserrouter></reducer></action></p> <h2 id=problem--solution>Problem &amp; Solution</h2> <ol> <li>Problem npm ERR! Linux 5.0.0-37-generic:</li> </ol> <p><strong>Solution</strong> Install letest or expected nodejs version</p> <ol start=2> <li>Problem Error: Cannot find module &#39;../scripts/start&#39;:</li> </ol> <p><strong>Solution</strong> delete node_module and run &quot;npm install&quot;</p> ";e.exports=o},"1e3a":function(e,t){var o="<h1 id=python-cheat-sheet>PYTHON CHEAT SHEET</h1> <h2 id=loop>Loop</h2> <pre><code class=language-py>dict_obj = {&quot;one&quot;: 1, &quot;two&quot;: 2}\nlist_obj = [1, 2, 3]\ntuple_obj = (1, 2, 3)\n\n[data for data in range(5)] # [0, 1, 2, 3, 4]\n[data for data in range(3, 5)] # [3, 4]\n\n[data for data in dict_obj] # [&#39;one&#39;, &#39;two&#39;]\n[(key, value) for key, value in dict_obj.items()] # [(&#39;one&#39;, 1), (&#39;two&#39;, 2)]\n\n[(index, value) for index, value in enumerate(list_obj)] # [(0, 1), (1, 2), (2, 3)]</code></pre> <h2 id=list>LIST</h2> <pre><code class=language-py>data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nnew_int = data_list[-1] # last position\n\n# Slicing\nnew_list = data_list[2:5] # [3, 4, 5] Here 2 is lower range 5 is upper range.\nnew_list = data_list[5:] # [6, 7, 8, 9, 10]\nnew_list = data_list[:5] # [1, 2, 3, 4, 5]\nnew_list = data_list[-5:-1] # [6, 7, 8, 9]\nnew_list = data_list[0:5:2] # [1, 3, 5] here 0 is lower range 5 is upper range and 2 is repeater.\nnew_list = data_list[::3] # [1, 4, 7, 10]\nnew_list = data_list[2::3] # [3, 6, 9]\nnew_list = data_list[:5:3] # [1, 4]\n\nnew_int = len(data_list) # list size\ndata_list.append(10) # add new item end of the list.\nnew_list.extend(data_list.copy()) # saturated list into list. if a = [1, 2], b=[3,4] then c will be [1, 2, 3, 4]\ndata_list.pop() # remove last item from list.\ndata_list.insert(5, 0) # insert data in index 5\ndata_list.remove(6) # remove 6 if exist other wise rise error.\ndel data_list[0] # delete by index\ndel data_list # delete full list\ndata_list.clear() # clear full list\nnew_list = data_list+data_list # join the list\nnew_list = data_list.copy() # return new list\n\nnew_int = data_list.index(5) # find 5 and return index number.\nnew_int = data_list.count(4) # return occurrence of 4.\ndata_list.reverse() # reverse all element\nnew_list = reversed(data_list) # reverse all element and return new list without changing data_list.\ndata_list.sort() # sort all element by acending order\ndata_list.sort(reverse=True) # sort all element by descending order\nnew_list = reversed(data_list) # reverse all element and return new list without changing data_list.\nnew_boolean = 5 in data_list # return 5 is exist or not.</code></pre> <h2 id=string>STRING</h2> <pre><code class=language-py>data_str = &quot;hello wordl!&quot;\ndata_format = &quot;Hi I am {0}. Do yo see {} and {}.&quot;\ndata_format1 = &quot;Hi I am {2}. Do yo see {0} and {1}.&quot; # add ordering\ndata_str_list = [&#39;one&#39;, &#39;two&#39;, &#39;three&#39;, &#39;four&#39;, &#39;five&#39;, &#39;six&#39;, &#39;seven&#39;, &#39;eight&#39;, &#39;nine&#39;, &#39;ten&#39;]\nlong_wtr = &quot;&quot;&quot;\nThis is long string\nits {} put anything by format\n    support everything.\n    {} put anything by format\n&quot;&quot;&quot;\n# String Support Slicing operation.\nnew_str = data_str[1:5:1] # like list.\nnew_int = len(data_str) # string size.\nnew_str = data_str.strip() # remove whitespace from left and right side.\nnew_str = data_str.upper() # to upper.\nnew_str = data_str.replace(&quot;wordl&quot;, &quot;Python&quot;) # to replace World to Python.\nnew_boolean = &quot;llo&quot; in data_str # check llo exist or not.\nnew_str = data_str + &quot;new string&quot; + &quot; &quot; + 100 # String Concatenation.\nnew_str = data_format.format(&quot;Hemel&quot;, &quot;Utshaw&quot;) # if number of empty formate does not match then this will rise execption.\nnew_str = data_format1.format(&quot;Hamza&quot;,&quot;Hemel&quot;, &quot;Utshaw&quot;) # add ordering third, first, second.\nnew_str = data_str.capitalize() # Converts the first character to upper case.\nnew_str = data_str.center() # Returns a centered string.\nnew_str = data_str.encode() # Returns an encoded version of the string.\nnew_boolean = data_str.endswith(&quot;wordl!&quot;) # Returns true if the string ends with the specified value.\nnew_str = data_str.expandtabs(5) # replace \\t to 5 space.\nnew_boolean = data_str.find(&quot;wordl!&quot;) # Searches the string for a specified value and returns the position of where it was found.\nnew_int = data_str.index(&quot;o&quot;, 5, 10) # search from 5 to 10. return 7.\nnew_boolean = data_str.isalnum() # if any number exist then return True.\nnew_boolean = data_str.isalpha() # Returns True if all characters in the string are in the alphabet.\nnew_boolean = data_str.isdecimal() # Returns True if all characters in the string are decimals.\nnew_boolean = data_str.isdigit() # Returns True if all characters in the string are digits.\nnew_boolean = data_str.islower() # Returns True if all characters in the string are lower case.\nnew_boolean = data_str.isnumeric() # Returns True if all characters in the string are numeric.\nnew_boolean = data_str.isprintable() # Returns True if all characters in the string are printable.\nnew_boolean = data_str.isspace() # Returns True if all characters in the string are whitespaces.\nnew_boolean = data_str.istitle() # Returns True if the string follows the rules of a title.\nnew_boolean = data_str.isupper() # Returns True if all characters in the string are upper case.\nnew_str = &quot;, &quot;.join(data_str_list) # Joins the elements of an iterable to the end of the string.\nnew_boolean = data_str.ljust(20) # Returns a left justified version of the string.\nnew_boolean = data_str.lower() # Converts a string into lower case.\nnew_list = data_str.partition(&quot;o wo&quot;) # Returns a tuple where the string is parted into three parts.\nnew_list = data_str.rfind(&quot;lo wo&quot;) # Searches the string for a specified value and returns the last position of where it was found.\nnew_list = data_str.rindex(&quot;lo wo&quot;) # Returns a right justified version of the string.\nnew_list = data_str.rpartition(&quot;o wo&quot;) # Returns a tuple where the string is parted into three parts.\nnew_list = data_str.rsplit(&quot;w&quot;) # Splits the string at the specified separator, and returns a list.\nnew_str = data_str.rstrip() # Returns a right trim version of the string.\nnew_list = data_str.split() # Splits the string at the specified separator, and returns a list.\nnew_list = data_str.split(&quot;o&quot;) # Splits the string at the specified separator, and returns a list.\nnew_boolean = data_str.startswith(&quot;hello&quot;) # Returns true if the string starts with the specified value.\nnew_str = data_str.strip() # Returns a trimmed version of the string.\nnew_str = data_str.swapcase() # Swaps cases, lower case becomes upper case and vice versa.\nnew_str = data_str.title() # Converts the first character of each word to upper case.\nnew_list = data_str.translate() # Returns a translated string.\nnew_list = data_str.zfill(10) # Fills the string with a specified number of 0 values at the beginning.</code></pre> <h2 id=set>SET</h2> <pre><code class=language-py>data_sets = {&#39;one&#39;, &#39;two&#39;, &#39;three&#39;, &#39;four&#39;, &#39;five&#39;, &#39;six&#39;, &#39;seven&#39;, &#39;eight&#39;, &#39;nine&#39;, &#39;ten&#39;}\ndata_sets_two = set((&quot;eleven&quot;, &quot;twelve&quot;, &quot;thirteen&quot;, &quot;fourteen&quot;, &quot;fifteen&quot;))\nnew_boolean = &quot;one&quot; in data_sets\ndata_sets.add(&quot;eleven.&quot;) # add new item into set.\ndata_sets.update([&quot;eleven.&quot;]) # update list of item into set.\nnew_int = len(data_sets)\ndata_sets.remove(&quot;three.&quot;) # remove item from set. rise error if not exists.\ndata_sets.discard(&quot;three.&quot;) # remove item from set is exists.\ndata_sets.clear() # clear set.\ndel data_sets # delete all set.\nnew_set = data_sets.union(data_sets_two) # new set.\nnew_set = data_sets.update(data_sets_two) # new set.\n\nnew_item = data_sets.pop() # remove last element.\n</code></pre> <h2 id=dict>DICT</h2> <pre><code class=language-py>import json\ndata_dict = {&#39;eggs&#39;: 2, &#39;sausage&#39;: 1, &#39;bacon&#39;: 1, &#39;spam&#39;: 500}\nnew_string = json.dumps(data_dict, indent=4)\nnew_keys = data_dict.keys()\nnew_keys = list(new_keys)  # [&#39;eggs&#39;, &#39;sausage&#39;, &#39;bacon&#39;, &#39;spam&#39;]\nvalues = data_dict.values()\nnew_keys = list(values)  # [2, 1, 1, 500]\n# view objects are dynamic and reflect dict changes\ndel data_dict[&#39;eggs&#39;]\ndel data_dict[&#39;sausage&#39;]\nnew_keys = list(new_keys)  # [&#39;bacon&#39;, &#39;spam&#39;]\n# set operations\nnew_keys = new_keys &amp; {&#39;eggs&#39;, &#39;bacon&#39;, &#39;salad&#39;}  # {&#39;bacon&#39;}\nnew_keys = new_keys ^ {&#39;sausage&#39;, &#39;juice&#39;}  # {&#39;juice&#39;, &#39;sausage&#39;, &#39;bacon&#39;, &#39;spam&#39;}\nkeys = data_dict.keys() # find all keys from dict\n\n# list from dict.\nnums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nnum_names = [&#39;one&#39;, &#39;two&#39;, &#39;three&#39;, &#39;four&#39;, &#39;five&#39;, &#39;six&#39;, &#39;seven&#39;, &#39;eight&#39;, &#39;nine&#39;, &#39;ten&#39;]\nnew_dict = { i : 5 for i in num_names } # {&quot;hello&quot;: 5, &quot;at&quot;: 5, .....}\nnew_dict = dict.fromkeys(num_names, 5) # {&quot;hello&quot;: 5, &quot;at&quot;: 5, .....}\nlistofTuples = [(&quot;Riti&quot; , 11), (&quot;Aadi&quot; , 12), (&quot;Sam&quot; , 13),(&quot;John&quot; , 22),(&quot;Lucy&quot; , 90)]\nlistofTuples = dict(listofTuples)\nnew_dict = dict(zip(num_names, nums)) # Single liner, two list to single list of tupel then list of tuple to dict\ndata_dict.update(new_dict) # Updata or marge new_dict into data_dict.</code></pre> <h2 id=map>MAP</h2> <pre><code class=language-py>data_list = [&#39;one&#39;, &#39;two&#39;, &#39;three&#39;, &#39;four&#39;, &#39;five&#39;, &#39;six&#39;, &#39;seven&#39;, &#39;eight&#39;, &#39;nine&#39;, &#39;ten&#39;]\ndata_list_two = [&quot;eleven&quot;, &quot;twelve&quot;, &quot;thirteen&quot;, &quot;fourteen&quot;, &quot;fifteen&quot;]\ndef myfunc(n): return len(n)\nnew_generator = map(myfunc, data_list) # you can convert to list by list(map(....))\nnew_generator = map(lambda n: len(n), data_list)\n&quot;&quot;&quot;************************************************************************&quot;&quot;&quot;\ndef myfunc(a, b): return a+&quot;--&quot;+b\nnew_generator = map(myfunc, data_list, data_list_two)\nnew_generator = map(lambda a, b: a+&quot;--&quot;+b, data_list, data_list_two) # you can put n number of list though maximum retrive upto minimum length.</code></pre> <h2 id=filter>FILTER</h2> <pre><code class=language-py>data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\ndef myFunc(x): return False if x&lt;5 else True\nnew_generator = filter(myFunc, data_list) # you can convert to list by list(map(....))\nnew_generator = filter(lambda x: False if x&lt;5 else True, data_list)</code></pre> <h2 id=list-comprehensions>List Comprehensions</h2> <pre><code class=language-PY>data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nnum_names = [&#39;one&#39;, &#39;two&#39;, &#39;three&#39;, &#39;four&#39;, &#39;five&#39;, &#39;six&#39;, &#39;seven&#39;, &#39;eight&#39;, &#39;nine&#39;, &#39;ten&#39;]\ndup_nums = data_list+data_list\n\nnew_list = [n for n in data_list] # just simple\nnew_list = [n*n for n in data_list] # create squre\nnew_list = [n for n in data_list if n%2==0] # find even\nnew_list = [(name, n) for name in num_names for n in data_list] # create list of tuple\nnew_list = zip(num_names, data_list) # same as upper one create list of tupple\nnew_dict = {name: n for name, n in zip(num_names, data_list)} # two list to dict\nnew_dict = {name: n for name, n in zip(num_names, data_list) if n%2==0} # same as upper with even condition\nnew_set = {n for n in dup_nums} # to set</code></pre> <h2 id=math>MATH</h2> <pre><code class=language-py>import math\nnew_float = pow(103, 100000007, 203) # Big power (base, mod, power)</code></pre> <h2 id=conversion>CONVERSION</h2> <pre><code class=language-py>new_string = bin(n)[2:] # removing &quot;0b&quot; prefix</code></pre> <h2 id=utils>UTILS</h2> <pre><code class=language-py>import secrets\nkey = secrets.token_hex()\nkey = secrets.token_hex(24)</code></pre> <h2 id=custom-sort>CUSTOM SORT</h2> <pre><code class=language-py>import datetime\nfrom operator import itemgetter, attrgetter\nnew_list = sorted(&quot;This is a test string from Andrew&quot;.split(), key=str.lower) # [&#39;a&#39;, &#39;Andrew&#39;, &#39;from&#39;, &#39;is&#39;, &#39;string&#39;, &#39;test&#39;, &#39;This&#39;]\n&quot;&quot;&quot;************************************************************************&quot;&quot;&quot;\nstudent_tuples = [(&#39;john&#39;, &#39;A&#39;, 15),(&#39;jane&#39;, &#39;B&#39;, 12),(&#39;dave&#39;, &#39;B&#39;, 10),]\nnew_list = sorted(student_tuples, key=lambda student: student[2])   # sort by age [(&#39;dave&#39;, &#39;B&#39;, 10), (&#39;jane&#39;, &#39;B&#39;, 12), (&#39;john&#39;, &#39;A&#39;, 15)]\n&quot;&quot;&quot;************************************************************************&quot;&quot;&quot;\nclass Student:\n    def __init__(self, name, grade, age):\n        self.name = name\n        self.grade = grade\n        self.age = age\n    def __repr__(self):\n        return repr((self.name, self.grade, self.age))\nstudent_objects = [Student(&#39;john&#39;, &#39;A&#39;, 15), Student(&#39;jane&#39;, &#39;B&#39;, 12), Student(&#39;dave&#39;, &#39;B&#39;, 10),]\nnew_list = sorted(student_objects, key=lambda student: student.age) # sort by age [(&#39;dave&#39;, &#39;B&#39;, 10), (&#39;jane&#39;, &#39;B&#39;, 12), (&#39;john&#39;, &#39;A&#39;, 15)]\n&quot;&quot;&quot;************************************************************************&quot;&quot;&quot;\nnew_list = sorted(student_tuples, key=itemgetter(2)) # [(&#39;dave&#39;, &#39;B&#39;, 10), (&#39;jane&#39;, &#39;B&#39;, 12), (&#39;john&#39;, &#39;A&#39;, 15)]\nnew_list = sorted(student_objects, key=attrgetter(&#39;age&#39;)) # [(&#39;dave&#39;, &#39;B&#39;, 10), (&#39;jane&#39;, &#39;B&#39;, 12), (&#39;john&#39;, &#39;A&#39;, 15)]\nnew_list = sorted(student_tuples, key=itemgetter(1, 2)) # [(&#39;john&#39;, &#39;A&#39;, 15), (&#39;dave&#39;, &#39;B&#39;, 10), (&#39;jane&#39;, &#39;B&#39;, 12)]\nnew_list = sorted(student_objects, key=attrgetter(&#39;grade&#39;, &#39;age&#39;)) # [(&#39;john&#39;, &#39;A&#39;, 15), (&#39;dave&#39;, &#39;B&#39;, 10), (&#39;jane&#39;, &#39;B&#39;, 12)]\n&quot;&quot;&quot;************************************************************************&quot;&quot;&quot;\ndef numeric_compare(x, y):\n    return x - y\ndef myFunc(e):\n  return len(e[0]) # if string\nnew_list.sort(reverse=True, key=myFunc)\nnew_list = sorted([5, 2, 4, 1, 3], cmp=numeric_compare)  # doctest: +SKIP\n&quot;&quot;&quot;************************************************************************&quot;&quot;&quot;\nsummary = [\n    {&#39;date&#39;: datetime.datetime(2019, 11, 1, 0, 0), &#39;data&#39;: 156167, &#39;target_data&#39;: 209263, &#39;bi_data&#39;: 159290},\n    {&#39;date&#39;: datetime.datetime(2019, 10, 31, 0, 0), &#39;data&#39;: 209879, &#39;target_data&#39;: 249756, &#39;bi_data&#39;: 220372}\n]\nsummary.sort(key=date)\nsummary.sort(key=lambda data: data.get(&quot;date&quot;), reverse=True)</code></pre> <h2 id=regular-expression>Regular Expression</h2> <pre><code class=language-py>import re\nsentance = &quot;hello my number is +8801746352810 you&quot;\nphone_number = re.compile(r&quot;(\\+880)(1\\d)(\\d\\d\\d\\d\\d\\d\\d\\d)&quot;).search(sentance).group()\ncountry_code = re.compile(r&quot;(\\+880)(1\\d)(\\d\\d\\d\\d\\d\\d\\d\\d)&quot;).search(sentance).group(1)\noperator_code = re.compile(r&quot;(\\+880)(1\\d)(\\d\\d\\d\\d\\d\\d\\d\\d)&quot;).search(sentance).group(2)\nother_numbers = re.compile(r&quot;(\\+880)(1\\d)(\\d\\d\\d\\d\\d\\d\\d\\d)&quot;).search(sentance).group(3)\n\nphone_number = re.compile(r&quot;(\\+880)(1\\d)(\\d{8})&quot;).search(sentance).group()\n\nall_phone_number = re.compile(r&quot;(\\+880)(1\\d)(\\d{8})&quot;).findall(sentance)</code></pre> <h1 id=create-package>Create Package.</h1> <h3 id=setup>Setup</h3> <p><strong>setup.py</strong> .</p> <pre><code class=language-py>import os\nfrom setuptools import find_packages, setup\n\nwith open(os.path.join(os.path.dirname(__file__), &#39;README.md&#39;)) as readme:\n    README = readme.read()\n\n# allow setup.py to be run from any path\nos.chdir(os.path.normpath(os.path.join(os.path.abspath(__file__), os.pardir)))\n\nsetup(\n    name=&#39;&lt;package_name&gt;&#39;,\n    version=&#39;1.0&#39;,\n    description=&#39;A ColorField to save and filter by radius Colors in RGB array in postgresql.&#39;,\n    long_description=README,\n    long_description_content_type=&quot;text/markdown&quot;,\n    url=&#39;&lt;package_git_url&gt;&#39;,\n    author=&#39;Nayan Biswas&#39;,\n    author_email=&#39;nayan32biswas@gmail.com&#39;,\n    license=&#39;MIT License&#39;,  # example license\n\n    packages=find_packages(),\n    include_package_data=True,\n    # install_requires = [&#39;django&#39;],\n    classifiers=[\n        &#39;Environment :: Web Environment&#39;,\n        &#39;Framework :: Django&#39;,\n        &#39;Framework :: Django :: 2.0&#39;,\n        &#39;Intended Audience :: Developers&#39;,\n        &#39;License :: OSI Approved :: MIT License&#39;,\n        &#39;Operating System :: OS Independent&#39;,\n        &#39;Programming Language:: Python :: 3&#39;,\n        &#39;Programming Language:: Python :: 3.6&#39;,\n        &#39;Programming Language:: Python :: 3.7&#39;,\n        &#39;Programming Language:: Python :: 3.8&#39;,\n        &#39;Topic :: Internet :: WWW/HTTP&#39;,\n        &#39;Topic :: Internet :: WWW/HTTP :: Dynamic Content&#39;,\n    ],\n)</code></pre> <h3 id=readme>README</h3> <p><strong>README.md</strong>.</p> <p>Set Long description.</p> <h3 id=manifest>MANIFEST</h3> <p><strong>MANIFEST.in</strong>.</p> <pre><code class=language-in>include LICENSE\ninclude README.rst\nrecursive-include colorfield/static *\nrecursive-include colorfield/templates *\nrecursive-include docs *</code></pre> <h3 id=build-app>Build app</h3> <ul> <li>Go to root file of lib where setup file exits.</li> <li>This command create a file inside <project>/dist/&lt;project_name.tar.gz&gt;</project></li> </ul> <pre><code class=language-bash>python3 setup.py sdist</code></pre> <h3 id=locally-install>Locally install</h3> <pre><code class=language-bash>python3 -m pip install dist/&lt;project_name.tar.gz&gt;</code></pre> <h3 id=upload-to-pypihttpspackagingpythonorgtutorialspackaging-projects>(Upload to PyPi)[<a href=https://packaging.python.org/tutorials/packaging-projects/%5D>https://packaging.python.org/tutorials/packaging-projects/]</a></h3> <p>Create <strong>LICENSE</strong> and Assign MIT License</p> <ul> <li><code>python3 -m pip install --user --upgrade setuptools wheel</code></li> <li><code>python3 setup.py sdist bdist_wheel</code> make sure <strong><code>.whl</code></strong> and <strong><code>.tar.gz</code></strong> file exist inside <strong>/dist/</strong>.</li> <li><code>python3 -m pip install --user --upgrade twine</code> Install <strong>twine</strong> to upload into PyPi.</li> <li><code>python3 -m twine upload --repository testpypi dist/*</code> Upload your project to PyPi as <strong>Test</strong>.</li> <li><code>twine check dist/*</code> Check doc is currect or not.</li> <li><code>twine upload dist/*</code> Finally Upload your file.</li> </ul> <h1 id=setup-python>Setup Python</h1> <h2 id=ubuntu>Ubuntu</h2> <pre><code class=language-bash>sudo apt-get update\nsudo apt-get upgrade\nsudo apt install -y python3-pip\nsudo apt install -y build-essential libssl-dev libffi-dev python3-dev autoconf libtool pkg-config libpq-dev\nsudo apt install -y python3-venv\nsudo ln -s /usr/bin/python3 /usr/bin/python\nsudo apt install pipenv</code></pre> <p>Create and activate Virtual Environment.</p> <pre><code class=language-bash>python3 -m venv my_env\nsource my_env/bin/activate\n\npython3 filename.py\nor\npython3 -m script.operation.operation</code></pre> <p>Make python file</p> <pre><code class=language-py>import py_compile\npy_compile.compile(&quot;myadd.py&quot;)\npython -m compileall .</code></pre> <h2 id=windows>Windows</h2> <ol> <li>download python letest version</li> <li>Open installation process</li> <li>select custom install</li> <li>add path, pip</li> <li>use &lt;&lt;C:\\python&gt;&gt; as path location</li> <li>&lt;<set-executionpolicy unrestricted>&gt; to fixed powershell</set-executionpolicy></li> </ol> <p><code>pip install virtualenv</code> make &quot;envs&quot; directory and go there <code>virtualenv &lt;&lt;vertual_name&gt;&gt;</code> this will create virtualenv file. <code>.\\&lt;&lt;name&gt;&gt;\\Script\\activate</code> to active virtualenv use.</p> <p>Install <strong>python2</strong></p> <ul> <li><code>then setup envermentpath C:\\Python27</code> firstly download and install file</li> <li><code>python -m pip install --upgrade pip setuptools wheel</code> Run.</li> <li><code>C:\\Python27\\Scripts</code> then setup envermentpath </li> </ul> <h2 id=mac>Mac</h2> <ul> <li><p><code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code> Install homebrew with the command.</p> </li> <li><p><code>brew install python</code> Install Python with Brew.</p> </li> <li><p>Permissions errors? Do this.</p> <ol> <li><code>sudo chown -R &quot;$USER&quot;:admin /usr/local</code> </li> <li><code>sudo chown -R &quot;$USER&quot;:admin /Library/Caches/Homebrew</code> </li> </ol> </li> <li><p><code>sudo easy_install pip</code> Install Pip. (Python Package Installer).</p> </li> <li><p><code>sudo pip install virtualenv</code> Install virtualenv.</p> </li> <li><p><code>virtualenv yourenv -p python3.6</code> Create a new virtualenv.</p> </li> <li><p><code>source bin/activate</code> Activate virtualenv.</p> </li> </ul> ";e.exports=o},2872:function(e,t,o){e.exports=o.p+"static/img/cross.ec97c203.svg"},"29bf":function(e,t){var o='<h1 id=mongo>Mongo</h1> <h2 id=install-mongodb>Install mongodb</h2> <pre><code class=language-bash>sudo apt update\nsudo apt install -y mongodb</code></pre> <ul> <li><a href="https://www.mongodb.com/download-center/compass?jmp=docs">download compass</a></li> </ul> <h2 id=import-export>Import Export</h2> <ul> <li><code>mongoexport --db a2i --collection digital_centers --out digital_centers.json</code> <strong>Export</strong> collection from db.</li> <li><code>mongoimport --db &lt;database-name&gt; --collection &lt;collection-name&gt; --file input.json</code> <strong>Import</strong> collection to a db.</li> <li><code>db.door_step_services.renameCollection(&quot;agriculture_portals&quot;)</code> <strong>Rename</strong> collection.</li> <li><code>mongodump -d a2i -o a2i_folder</code> <strong>Export full shcema</strong>.</li> <li><code>mongorestore -d a2i /path/</code> <strong>import bson</strong></li> </ul> <h1 id=query>Query</h1> <h3 id=mongo-doc><a href=https://docs.mongodb.com/manual/reference/operator/query/ >Mongo Doc</a></h3> <p>{ _id: 1, item: { name: &quot;ab&quot;, code: &quot;123&quot; }, qty: 15, tags: [ &quot;A&quot;, &quot;B&quot;, &quot;C&quot; ] } { _id: 2, item: { name: &quot;cd&quot;, code: &quot;123&quot; }, qty: 20, tags: [ &quot;B&quot; ] } { _id: 3, item: { name: &quot;ij&quot;, code: &quot;456&quot; }, qty: 25, tags: [ &quot;A&quot;, &quot;B&quot; ] } { _id: 4, item: { name: &quot;xy&quot;, code: &quot;456&quot; }, qty: 30, tags: [ &quot;B&quot;, &quot;A&quot; ] } { _id: 5, item: { name: &quot;mn&quot;, code: &quot;000&quot; }, qty: 20, tags: [ [ &quot;A&quot;, &quot;B&quot; ], &quot;C&quot; ] }</p> <h3 id=comparison-query-operators>Comparison Query Operators</h3> <p><strong>eq</strong> query.</p> <pre><code class=language-mongo>{ field: { &quot;$eq&quot;: value } }\ndb.inventory.find( { qty: { &quot;$eq&quot;: 20 } } )\ndb.inventory.find( { qty: 20 } )\n\ndb.inventory.find( { tags: { &quot;$eq&quot;: [ &quot;A&quot;, &quot;B&quot; ] } } )\ndb.inventory.find( { tags: [ &quot;A&quot;, &quot;B&quot; ] } )</code></pre> <p><strong>gt</strong> query.</p> <pre><code class=language-mongo>{field: {&quot;$gt&quot;: value} }\ndb.inventory.find( { qty: { &quot;$gt&quot;: 20 } } )</code></pre> <p>&quot;gte&quot; <strong>gte</strong> query.</p> <pre><code class=language-mongo>{field: {&quot;$gte&quot;: value} }\ndb.inventory.find( { qty: { &quot;$gte&quot;: 20 } } )</code></pre> <p><strong>in</strong> query.</p> <pre><code class=language-mongo>{ field: { &quot;$in&quot;: [value1, value2, valueN ] } }\ndb.inventory.find( { qty: { &quot;$in&quot;: [ 5, 15 ] } } )</code></pre> <p><strong>lt</strong> query.</p> <pre><code class=language-mongo>{field: {&quot;$lt&quot;: value} }\ndb.inventory.find( { qty: { &quot;$lt&quot;: 20 } } )</code></pre> <p><strong>lte</strong> query.</p> <pre><code class=language-mongo>{field: {&quot;$lte&quot;: value} }\ndb.inventory.find( { qty: { &quot;$lte&quot;: 20 } } )</code></pre> <p><strong>ne</strong> query.</p> <pre><code class=language-mongo>{field: {&quot;$ne&quot;: value} }\ndb.inventory.find( { qty: { &quot;$ne&quot;: 20 } } )</code></pre> <p><strong>nin</strong> query.</p> <pre><code class=language-mongo>{ field: { &quot;$nin&quot;: [ value1, value2, valueN ]} }\ndb.inventory.find( { qty: { &quot;$nin&quot;: [ 5, 15 ] } } )</code></pre> <h3 id=logical-query-operators>Logical Query Operators</h3> <p><strong>and</strong> query.</p> <pre><code class=language-mongo>{ &quot;$and&quot;: [ { expression1 }, { expression2 } , ... , { expressionN } ] }\ndb.inventory.find( { &quot;$and&quot;: [ { price: { &quot;$ne&quot;: 1.99 } }, { price: { &quot;$exists&quot;: true } } ] } )\ndb.inventory.find( { &quot;$and&quot; : [{ &quot;$or&quot; : [ { price : 0.99 }, { price : 1.99 } ] }, { &quot;$or&quot; : [ { sale : true }, { qty : { &quot;$lt&quot; : 20 } } ] } ] } )</code></pre> <p><strong>not</strong> query.</p> <pre><code class=language-mongo>{ field: { &quot;$not&quot;: { operatorexpression } } }\ndb.inventory.find( { price: { &quot;$not&quot;: { &quot;$gt&quot;: 1.99 } } } )\n&quot;not and Regular Expressions&quot;\ndb.inventory.find( { item: { &quot;$not&quot;: { &quot;$regex&quot;: &quot;^p.*&quot; } } } )</code></pre> <p><strong>nor</strong> query.</p> <pre><code class=language-mongo>{ &quot;$nor&quot;: [ { expression1 }, { expression2 },  { expressionN } ] }\ndb.inventory.find( { &quot;$nor&quot;: [ { price: 1.99 }, { sale: true } ]  } )\n&quot;nor and Additional Comparisons&quot;\ndb.inventory.find( { &quot;$nor&quot;: [ { price: 1.99 }, { qty: { &quot;$lt&quot;: 20 } }, { sale: true } ] } )\n&quot;nor and exists&quot;\ndb.inventory.find( { &quot;$nor&quot;: [ { price: 1.99 }, { price: { &quot;$exists&quot;: false } }, { sale: true }, { sale: { &quot;$exists&quot;: false } } ] } )</code></pre> <p><strong>or</strong> query.</p> <pre><code class=language-mongo>{ &quot;$or&quot;: [ { expression1 }, { expression2 }, ... , { expressionN } ] }\ndb.inventory.find( { &quot;$or&quot;: [ { quantity: { &quot;$lt&quot;: 20 } }, { price: 10 } ] } )\ndb.inventory.find( { &quot;$or&quot;: [ { quantity: { &quot;$lt&quot;: 20 } }, { price: 10 } ] } )</code></pre> <h3 id=element-query-operators>Element Query Operators</h3> <p><strong>exists</strong> query.</p> <pre><code class=language-mongo>{ field: { &quot;$exists&quot;: boolean } }\ndb.inventory.find( { qty: { &quot;$exists&quot;: true, &quot;$nin&quot;: [ 5, 15 ] } } )</code></pre> <p><strong>type</strong> query.</p> <pre><code class=language-mongo>&quot;https://docs.mongodb.com/manual/reference/operator/query/type/#op._S_type&quot;\n{ field: { &quot;$type&quot;: BSONtype } }\n{ field: { &quot;$type&quot;: BSONtype } }\ndb.addressBook.find( { &quot;zipCode&quot; : { &quot;$type&quot; : &quot;string&quot; } } )</code></pre> <h3 id=array-query-operators>Array Query Operators</h3> <p><strong>all</strong> query.</p> <pre><code class=language-mongo>{ field: { &quot;$all&quot;: [ value1 , value2, valueN ] } }\n{ tags: { &quot;$all&quot;: [ &quot;ssl&quot; , &quot;security&quot; ] } }\n{ &quot;$and&quot;: [ { tags: &quot;ssl&quot; }, { tags: &quot;security&quot; } ] }\n&quot;Nested Array&quot;\ndb.articles.find( { tags: { &quot;$all&quot;: [ [ &quot;ssl&quot;, &quot;security&quot; ] ] } } )\ndb.articles.find( { &quot;$and&quot;: [ { tags: [ &quot;ssl&quot;, &quot;security&quot; ] } ] } )\ndb.articles.find( { tags: [ &quot;ssl&quot;, &quot;security&quot; ] } )</code></pre> <p><strong>elemMatch</strong> query.</p> <pre><code class=language-mongo>{ field: { &quot;$elemMatch&quot;: { query1, query2, ... } } }\ndb.scores.find( { results: { &quot;$elemMatch&quot;: { &quot;$gte&quot;: 80, &quot;$lt&quot;: 85 } } } )</code></pre> <p><strong>size</strong> query.</p> <pre><code class=language-mongo>db.collection.find( { field: { &quot;$size&quot;: 2 } } )</code></pre> <h3 id=projection-operators><a href=https://docs.mongodb.com/manual/reference/operator/projection/ >projection Operators</a></h3> <p><strong><a href=https://docs.mongodb.com/manual/reference/operator/projection/positional/ >projection</a></strong></p> <p><strong><a href=https://docs.mongodb.com/manual/reference/operator/projection/elemMatch/ >elemMatch</a></strong></p> <p><strong>meta</strong> query.</p> <pre><code class=language-bash>{ projectedFieldName: { &quot;$meta&quot;: &quot;textScore&quot; } }\ndb.collection.find( query, { score: { &quot;$meta&quot;: &quot;textScore&quot; } } )</code></pre> <p><strong>slice</strong> query.</p> <pre><code class=language-bash>db.collection.find( { field: value }, { array: {&quot;$slice&quot;: count } } )\n# Here, $slice selects the first five items in an array in the comments field\ndb.posts.find( {}, { comments: { &quot;$slice&quot;: 5 } } )\ndb.posts.find( {}, { comments: { &quot;$slice&quot;: -5 } } )\n# Here, the query will only return 10 items, after skipping the first 20 items of that array\ndb.posts.find( {}, { comments: { &quot;$slice&quot;: [ 20, 10 ] } } )\ndb.posts.find( {}, { comments: { &quot;$slice&quot;: [ -20, 10 ] } } )</code></pre> <h2 id=update><a href=https://docs.mongodb.com/manual/reference/operator/update/ >Update</a></h2> <h3 id=field-update-operators>Field Update Operators</h3> <p><strong>set</strong> query.</p> <pre><code class=language-mongo>{ $set: { &lt;field1&gt;: &lt;value1&gt;, ... } }\ndb.products.update( { _id: 100 }, { $set: { &quot;details.make&quot;: &quot;zzz&quot; } } )\n``\n**setsetOnIn query.\nsert&quot;\n```mongo\ndb.collection.update( &lt;query&gt;, { $setOnInsert: { &lt;field1&gt;: &lt;value1&gt;, ... } }, { upsert: true } )\ndb.products.update( { _id: 1 }, { $set: { item: &quot;apple&quot; }, $setOnInsert: { defaultQty: 100 } }, { upsert: true } )</code></pre> <p><strong>unset</strong> query.</p> <pre><code class=language-mongo>{ $unset: { &lt;field1&gt;: &quot;&quot;, ... } }\ndb.products.update( { sku: &quot;unknown&quot; }, { $unset: { quantity: &quot;&quot;, instock: &quot;&quot; } } )</code></pre> <p><strong>currentDate</strong> qyery.</p> <pre><code class=language-mongo>{ $currentDate: { &lt;field1&gt;: &lt;typeSpecification1&gt;, ... } }\ndb.users.update( { _id: 1 }, {\n    $currentDate: { lastModified: true, &quot;cancellation.date&quot;: { $type: &quot;timestamp&quot; }},\n    $set: {status: &quot;D&quot;, &quot;cancellation.reason&quot;: &quot;user request&quot; }} )</code></pre> <p><strong>inc</strong> query.</p> <pre><code class=language-mongo>{ $inc: { &lt;field1&gt;: &lt;amount1&gt;, &lt;field2&gt;: &lt;amount2&gt;, ... } }\ndb.products.update( { sku: &quot;abc123&quot; }, { $inc: { quantity: -2, &quot;metrics.orders&quot;: 1 } } )</code></pre> <p><strong>mul</strong> query.</p> <pre><code class=language-mongo>{ $mul: { &lt;field1&gt;: &lt;number1&gt;, ... } }\ndb.products.update( { _id: 1 }, { $mul: { price: NumberDecimal(&quot;1.25&quot;), qty: 2 } } )</code></pre> <p><strong>min</strong> query.</p> <pre><code class=language-mongo>{ $min: { &lt;field1&gt;: &lt;value1&gt;, ... } }\ndb.scores.update( { _id: 1 }, { $min: { lowScore: 150 } } )</code></pre> <p><strong>max</strong> query.</p> <pre><code class=language-mongo>{ $max: { &lt;field1&gt;: &lt;value1&gt;, ... } }\ndb.scores.update( { _id: 1 }, { $max: { highScore: 950 } } )</code></pre> <p><strong>rename</strong> query.</p> <pre><code class=language-mongo>{$rename: { &lt;field1&gt;: &lt;newName1&gt;, &lt;field2&gt;: &lt;newName2&gt;, ... } }\ndb.students.updateMany( {}, { $rename: { &quot;nmae&quot;: &quot;name&quot; } } )</code></pre> <p><strong>update</strong> query.</p> <pre><code class=language-mongo>{ _id: 4, &quot;grades.grade&quot;: 85 }, { $set: { &quot;grades.$.std&quot; : 6 } }</code></pre> <p><strong>pull</strong> query.</p> <pre><code class=language-mongo>{ $pull: { &lt;field1&gt;: &lt;value|condition&gt;, &lt;field2&gt;: &lt;value|condition&gt;, ... } }\ndb.survey.updateMany( { }, { $pull: { results: { score: 8 , item: &quot;B&quot; } } }, True)</code></pre> ';e.exports=o},"2c6e":function(e,t){var o="<p>select terminal editor: crontab -e load crontab: crontab file_name.crontab check running crontab: crontab -l delete crontab: crontab -r</p> <p>this crontab run first and second day of each month. on crontab.cron: 0 0 1,2 * * python3 /var/www/html/etl_script/test/crontab_test.py run file using: crontab crontab.cron</p> <h1 id=example-of-job-definition>Example of job definition:</h1> <h1 id=---------------------minute-0---59>.-------------------- minute (0 - 59)</h1> <h1 id=--------------------hour-0---23>| .----------------- hour (0 - 23)</h1> <h1 id=-------------------day-of-month-1---31>| | .-------------- day of month (1 - 31)</h1> <h1 id=------------------month-1---12-or-janfebmarapr->| | | .------- month (1 - 12) OR jan,feb,mar,apr ...</h1> <h1 id=-----------------day-of-week-0---6-sunday0-or-7>| | | | .---- day of week (0 - 6) (Sunday=0 or 7)</h1> <h1 id=------------\x3e| | | | |</h1> <h1 id=---------------command-to-be-executed>* * * * * command to be executed</h1> <h1 id=0--0--2---------command1>0 0 */2 * * command1</h1> <h1 id=0--0--2-312------command2>0 0 2-31/2 * * command2</h1> <h1 id=----2---------command3>* * */2 * * command3</h1> <p>0 20 1 8 * python3 /home/nayan32biswas/Dropbox/work/start_operation.py 2 20 1 8 * python3 /home/nayan32biswas/Dropbox/work/start_read_api.py 45 20 1 8 * python3 /home/nayan32biswas/Dropbox/work/start_sql_to_mongo.py</p> <p>42 18 5 9 * python3 /home/nayan32biswas/Dropbox/work/start_sql_to_mongo.py</p> ";e.exports=o},"3da0":function(e,t,o){"use strict";o("a732")},"3f71":function(e,t,o){"use strict";o.d(t,"b",(function(){return n})),o.d(t,"a",(function(){return a}));var n="fetchPosts",a="fetchPost"},4393:function(e,t){var o="<h1 id=heroku-doc><a href=https://devcenter.heroku.com/articles/getting-started-with-python>Heroku doc</a></h1> <p>install <strong>heroku</strong></p> <pre><code class=language-bash>    sudo snap install heroku --classic</code></pre> <p><strong>Login</strong> heroku in CLI</p> <pre><code class=language-bash>heroku login</code></pre> <p>create heroku <strong>domain</strong></p> <pre><code class=language-bash>heroku create &lt;domain_name&gt;</code></pre> <p>install <strong>gunicorn</strong></p> <pre><code class=language-bash>pip install gunicorn</code></pre> <p><strong>Push</strong> your code into heroku</p> <pre><code class=language-bash>git push heroku master</code></pre> <p>Create <strong>Procfile</strong> File</p> <pre><code class=language-bash>web: gunicorn project.wsgi # in Procfile file assign:</code></pre> <p>Set <strong>enverionment variable</strong> into heroku</p> <pre><code class=language-bash>heroku config:set BASE_URL=&quot;https://nayan32biswas.herokuapp.com&quot;\nheroku config:set API_BASE_URL=&quot;https://nayan32biswas.herokuapp.com/api&quot;\nheroku config:set DEBUG=&quot;False&quot;</code></pre> <p>Use <strong>heroko CLI</strong></p> <pre><code class=language-bash>heroku run bash</code></pre> <p>show <strong>log data</strong></p> <pre><code class=language-bash>heroku logs</code></pre> ";e.exports=o},"473c":function(e,t){var o="<h1 id=vim>VIM</h1> <h2 id=file-action>File Action</h2> <ul> <li><code>:q</code> exit</li> <li><code>:w</code> save</li> <li><code>:wq</code> save and exit</li> <li><code>:q!</code> Fource exit without save</li> </ul> <h2 id=insert>Insert</h2> <ul> <li><code>i</code> Inserts text before current cursor location.</li> <li><code>I</code> Inserts text at beginning of current line.</li> <li><code>o</code> Creates a new line for text entry below cursor location.</li> <li><code>O</code> Creates a new line for text entry above cursor location.</li> <li><code>a</code> Inserts text after current cursor location.</li> <li><code>A</code> Inserts text at end of current line.</li> <li><code>a</code> Inserts text after current cursor location.</li> <li><code>a</code> Inserts text after current cursor location.</li> <li><code>r</code> Replace single character under the cursor with the next character typed.</li> <li><code>R</code> Replaces text from the cursor to right.</li> <li><code>s</code> Replaces single character under the cursor with any number of characters.</li> <li><code>S</code> Replaces entire line.</li> </ul> <h2 id=coursor-move>Coursor Move</h2> <ul> <li><code>h</code> Moves the cursor left charecter.</li> <li><code>H</code> Move to top of screen.</li> <li><code>&lt;n&gt;H</code> Moves to nth line from the top of the screen.</li> <li><code>:&lt;n&gt;</code> Moves to nth line from the top of the screen.</li> <li><code>j</code> Moves the cursor down one line.</li> <li><code>k</code> Moves the cursor upper one line.</li> <li><code>l</code> Moves the cursor right charecter.</li> <li><code>L</code> Move to bottom of screen.</li> <li><code>&lt;n&gt;L</code> Moves to nth line from the bottom of the screen.</li> <li><code>0 or | or ^</code> Positions cursor at beginning of line.</li> <li><code>$</code> Positions cursor at end of line.</li> <li><code>w</code> Positions cursor to the next word.</li> <li><code>W</code> Positions cursor to the next word with all charecter.</li> <li><code>b</code> Positions cursor to previous word.</li> <li><code>B</code> Positions cursor to previous word with all charecter.</li> <li><code>(</code> Positions cursor to beginning of current sentence.</li> <li><code>)</code> Positions cursor to beginning of next sentence.</li> <li><code>CTRL+d</code> Move forward 1/2 screen.</li> <li><code>CTRL+f</code> Move forward one full screen.</li> <li><code>CTRL+u</code> Move backward 1/2 screen.</li> <li><code>CTRL+b</code> Move backward one full screen.</li> <li><code>CTRL+e</code> Moves screen up one line.</li> <li><code>CTRL+y</code> Moves screen down one line.</li> <li><code>CTRL+u</code> Moves screen up 1/2 page.</li> <li><code>CTRL+d</code> Moves screen down 1/2 page.</li> <li><code>CTRL+b</code> Moves screen up one page.</li> <li><code>CTRL+f</code> Moves screen down one page.</li> <li><code>CTRL+I</code> Redraws screen.</li> </ul> <h2 id=delete>Delete</h2> <ul> <li><code>x</code> delete currect charecter.</li> <li><code>X</code> delete previous charecter.</li> <li><code>dd</code> delete line</li> <li><code>d&lt;*&gt;</code> Here you can delete base on cursore move example <code>dB</code> will delete previous word.</li> </ul> <h2 id=copy-past>Copy Past</h2> <ul> <li><code>Yy</code> Copies the current line.</li> <li><code>9yy</code> Yank current line and 9 lines below.</li> <li><code>p</code> Puts the copied text after the cursor.</li> <li><code>P</code> Puts the yanked text before the cursor.</li> </ul> <h2 id=search-and-replace>Search and Replace</h2> <ul> <li><code>/matched_pattern</code> Press n to find next match.</li> <li><code>:s/matched_pattern</code> Show <strong>next</strong> matched_pattern</li> <li><code>:s/matched_pattern/new_text</code> This will replace <strong>next</strong> matched_pattern with next_text</li> <li><code>:%s/matched_pattern/new_text</code> This will replace <strong>first matched_pattern of all sentence</strong> matched_pattern with next_text</li> <li><code>:%s/matched_pattern/new_text/g</code> This will replace <strong>all</strong> matched_pattern with next_text. Here <strong>g</strong> for global</li> </ul> ";e.exports=o},"47f6":function(e,t){var o="<h1 id=flutter>Flutter</h1> <h2 id=install-in-linux>Install in Linux</h2> <ul> <li><code>sudo snap install flutter --classic</code></li> <li><code>flutter doctor</code> test flutter envioroment.</li> <li><code>flutter doctor -v</code> find flutter location info</li> </ul> <h2 id=project-setup>Project setup</h2> <ul> <li>Add Flutter plugin</li> <li>Then Create new project with flutter.</li> </ul> <h3 id=vscode>VSCode</h3> <ul> <li><code>flutter create &lt;&lt;app_name&gt;&gt;</code></li> <li><code>Run =&gt; Run Without Debuging</code></li> </ul> <h2 id=build-apk><a href=https://flutter.dev/docs/deployment/android>Build .apk</a></h2> <ul> <li><code>keytool -genkey -v -keystore ~/key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key</code> If you don&#39;t have any.</li> <li>Inside &lt;<app_dir>&gt;/android/key.properties<pre><code class=language-properties>  storePassword=password\n  keyPassword=password\n  keyAlias=key\n  storeFile=&lt;full_path&gt;/key.jks</code></pre> </app_dir></li> <li>Inside &lt;<app_dir>&gt;/android/app/build.gradle<ol> <li>Add code before <strong>android</strong> block:<pre><code class=language-gradle>def keystoreProperties = new Properties()\ndef keystorePropertiesFile = rootProject.file(&#39;key.properties&#39;)\nif (keystorePropertiesFile.exists()) {\n    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))\n}\nandroid {\n ...\n}</code></pre> </li> <li>Add code before <strong>buildTypes</strong> block:<pre><code class=language-gradle>signingConfigs {\n release {\n     keyAlias keystoreProperties[&#39;keyAlias&#39;]\n     keyPassword keystoreProperties[&#39;keyPassword&#39;]\n     storeFile keystoreProperties[&#39;storeFile&#39;] ? file(keystoreProperties[&#39;storeFile&#39;]) : null\n     storePassword keystoreProperties[&#39;storePassword&#39;]\n }\n}\nbuildTypes {\n release {\n     signingConfig signingConfigs.release\n }\n}</code></pre> </li> </ol> </app_dir></li> <li>Reviewing the app manifest.<ol> <li>Open <code>&lt;app_dir&gt;/android/app/src/main/AndroidManifest.xml</code></li> <li>Change label as <strong>app name</strong></li> <li>Add <code>&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;</code> before <application>...</application>If Internet access need.</li> <li>Also change other permission if needed.</li> </ol> </li> <li><code>flutter build apk</code> Build app.</li> <li><code>flutter install</code> Install app in virtual device.</li> <li>Find apk file at &lt;&lt;/&lt;<project_full_path>&gt;/build/app/outputs/apk/release/&gt;&gt;</project_full_path></li> </ul> ";e.exports=o},"4ab0":function(e,t,o){e.exports=o.p+"static/img/volt.deee466f.svg"},"4c98":function(e,t){var o="<h1 id=go>GO</h1> <h2 id=variable>Variable</h2> <ul> <li>If any variable declare that <strong>start with Uppercase</strong> those variable <strong>exported</strong> from the package and sccessable from other package.<h3 id=global-variable>Global Variable</h3> </li> <li>It&#39;s a package level or global veriable</li> <li>In package there need to define type of each variable</li> </ul> <ol> <li><pre><code class=language-go>var num int = 0\nvar str string = &quot;str&quot;</code></pre> </li> <li><pre><code class=language-go>var (\n int_int int    = 0\n str_2   string = &quot;str&quot;\n)</code></pre> </li> <li><pre><code class=language-go>const(\n _ = iota // here iota is zero, and ignore first value\n Kilo = 1 &lt;&lt; (10 * iota)\n Mega\n Giga\n Tera\n Peta\n Exa\n Zetta\n Yotta\n)</code></pre> <h3 id=native-variable-types>Native Variable types</h3> <pre><code class=language-go>func nativeType() {\n var num8 int8 = math.MaxInt8\n var num16 int16 = math.MaxInt16\n var num32 int32 = math.MaxInt32\n var num64 int64 = math.MaxInt64\n var numInt int = math.MaxInt64 // 32 or 64 based on system architecture\n var unum8 uint8 = math.MaxUint8\n var unum16 uint16 = math.MaxUint16\n var unum32 uint32 = math.MaxUint32\n var unum64 uint64 = math.MaxUint64\n var unumInt uint = math.MaxUint64 // 32 or 64 based on system architecture\n\n var numF32 float32 = math.MaxFloat32\n var numF64 float64 = math.MaxFloat64\n var com64 complex64 = -5 + 12i // here 12i is imaginary part of a equation\n var com128 complex128 = -5 + 12i\n const comp = complex(math.MaxFloat64, math.MaxFloat64)\n var res complex128\n res = com128 + comp\n res = com128 - comp\n res = com128 * comp\n res = com128 / comp\n\n fmt.Println(&quot;Number Type: &quot;, num8, num16, num32, num64, numInt, unum8, unum16, unum32, unum64, unumInt)\n fmt.Println(&quot;Floating: &quot;, numF32, numF64, com64, com128, comp, res)\n fmt.Printf(&quot;%v %v=====%T %T\\n&quot;, real(com64), imag(com64), real(com64), imag(com64))\n\n var b bool = true\n var char rune = &#39;A&#39;            // it&#39;s same as &#39;int32&#39;\n var str string = &quot;demo string&quot; // each of str[i] is equal &#39;uint8&#39;\n fmt.Printf(&quot;%v %v %c\\n&quot;, b, str, char)\n}</code></pre> <h2 id=condition>Condition</h2> <pre><code class=language-go>func condition(){\n n := 4\n // If else\n if n==1 || n==2 ||  n==3 || n==4 {\n     fmt.Println(&quot;between 1, 2, 3 and 4&quot;)\n }else if n==5{\n     fmt.Println(&quot;last number&quot;)\n } else{\n     fmt.Println(&quot;Invalid number&quot;)\n }\n\n // Switch case\n switch n {\n case 1, 2, 3, 4:\n     fmt.Println(&quot;between 1, 2, 3 and 4&quot;)\n     break\n     fmt.Println(&quot;If needed use break before execute all&quot;)\n case 5:\n     fmt.Println(&quot;last number&quot;)\n default:\n     fmt.Println(&quot;Invalid number&quot;)\n }\n fmt.Println()\n switch {\n case n &lt;= 4:\n     fmt.Println(&quot;between 1, 2, 3 and 4&quot;)\n     fallthrough // this is very sensitive, use it when next statement should be executed.\n case n &lt;= 5:\n     fmt.Println(&quot;last number&quot;)\n default:\n     fmt.Println(&quot;Invalid number&quot;)\n }\n}</code></pre> <h2 id=stl>STL</h2> <h3 id=arrays>Arrays</h3> <pre><code class=language-go>func arrays() {\n // var variable [size]type\n // variable [...]type{1, 2, 3}\n var greads [3]int\n students := [...]string{&quot;One&quot;, &quot;Two&quot;, &quot;Three&quot;}\n greads[0] = 90\n greads[1] = 80\n greads[2] = 85\n fmt.Println(len(students), students, greads) // 3 [One Two Three] [90 80 85]\n\n // 2D\n var matrix [3][3]int = [3][3]int{[3]int{1, 0, 0}, [3]int{1, 1, 1}, [3]int{0, 0, 1}}\n matrix[1] = [3]int{0, 1, 0}\n fmt.Println(matrix) // [[1 0 0] [0 1 0] [0 0 1]]\n\n // array copy\n arr := [...]int{1, 2, 3}\n copyArr := arr // array copy full data\n copyArr[0] = 100000\n fmt.Println(arr, copyArr) // [1 2 3] [100000 2 3]\n\n arrPtr := [...]int{1, 2, 3}\n copyPtr := &amp;arrPtr\n copyPtr[0] = 100000\n fmt.Println(arrPtr, copyPtr) // [100000 2 3] &amp;[100000 2 3]\n\n for key, value := range arr {\n     fmt.Println(key, value)\n }\n}</code></pre> </li> </ol> <h3 id=slice>Slice</h3> <pre><code class=language-go>func slice() {\n    // Slices\n    // var variable []type{}\n    // variable := make([]type, size, capacity) // here capacity is optional value\n    // variable []type{1, 2, 3}\n    // slices copy\n    slices := []int{1, 2, 3, 4, 5, 6}\n\n    // actual copy\n    copyOne := append([]int(nil), slices...)\n    /*\n        In make function allways try to use 3rd element 8.\n        Other wise if size exit the go will increment capacity 8 to other big number and copy all slice data.\n        So it is slow and expencive.\n    */\n    copyTwo := make([]int, len(slices), 8)\n    copy(copyTwo, slices)\n\n    // Ref assign\n    copyRef := slices // Slice doesnot copy data, it&#39;s assign ref\n    copyRef[0] = 100000\n\n    // [100000 2 3 4 5 6] [100000 2 3 4 5 6] [1 2 3 4 5 6] [1 2 3 4 5 6]                6 8\n    fmt.Println(slices, copyRef, copyOne, copyTwo, &quot;\\t\\t&quot;, len(copyTwo), cap(copyTwo))\n    fmt.Println(slices[:], slices[:3], slices[3:], slices[2:5]) // [100000 2 3 4 5 6] [100000 2 3] [4 5 6] [3 4 5]\n\n    // try to remove midle two element 3, 4 from [1 2 3 4 5 6]\n    wiard := append(copyOne[:2], copyOne[4:]...)\n    fmt.Println(wiard, copyOne)                  // [1 2 5 6] [1 2 5 6 5 6] // here main copy also changed\n    proper := append([]int(nil), copyTwo[:2]...) // copy first part\n    proper = append(proper, copyTwo[4:]...)      // copy second part\n    fmt.Println(wiard, copyTwo)                  // [1 2 5 6] [1 2 3 4 5 6] //\n\n    for key, value := range slices {\n        fmt.Println(key, value)\n    }\n}</code></pre> <h3 id=map>Map</h3> <pre><code class=language-go>func maps() {\n    // var variable map[key_type]value_type\n    // variable := make(map[key_type]value_type)\n    // variable map[key_type]value_type{key:value, key:value}\n    datas := map[string]int{&quot;one&quot;: 1, &quot;two&quot;: 2}\n\n    // map key_type can be anything except (slice, map and function)\n    // variable := map[array_type]slice_type\n    arrMap := map[[3]int][]int{\n        [3]int{1, 2, 3}: []int{1, 4, 7},\n        [3]int{1, 3, 2}: []int{1, 4, 7},\n    }\n    fmt.Println(datas, arrMap) // map[one:1 two:2] map[[1 2 3]:[1 4 7] [1 3 2]:[1 4 7]]\n\n    // map pass ref\n    copyRef := datas\n    copyRef[&quot;three&quot;] = 3\n    delete(copyRef, &quot;two&quot;)\n    four, ok := copyRef[&quot;four&quot;]                         // ok return true if key exists\n    fmt.Println(datas, copyRef, len(copyRef), four, ok) // map[one:1 three:3] map[one:1 three:3] 2 0 false\n    if temp, ok := copyRef[&quot;four&quot;]; ok {                // Four doesn&#39;t exists condition false\n        fmt.Println(temp)\n    }\n    if one, ok := copyRef[&quot;one&quot;]; ok { // one exists condition true\n        fmt.Println(one)\n    }\n    for key, value := range datas {\n        fmt.Println(key, value) // one 1, three 3\n    }\n}</code></pre> <h3 id=struct>Struct</h3> <pre><code class=language-go>func struct_func(){\n    type Book struct{\n        id int\n        name string `required min:&quot;5&quot; max:&quot;100&quot;`\n        author string\n        related_books []int\n    }\n    book := Book{id: 1,name: &quot;First&quot;}\n    copy_book := book // it&#39;s copy full data\n    copy_book.name = &quot;Full copy&quot;\n    copy_book_ref := &amp;book // it&#39;s assign ref\n    copy_book_ref.name = &quot;Assign ref&quot;\n    fmt.Println(book, copy_book_ref, copy_book)\n\n    books := []Book{\n        Book{id: 1,name: &quot;First&quot;,author: &quot;Unknown&quot;},\n        Book{id: 2,name: &quot;Second&quot;,author: &quot;Unknown&quot;, related_books: []int{1}},\n    }\n    fmt.Println(books, &quot;\\t\\t&quot;, books[0].name)\n\n    // field validation\n    t := reflect.TypeOf(Book{})\n    field, _ := t.FieldByName(&quot;name&quot;)\n    fmt.Println(field.Tag) // required min:&quot;5&quot; max:&quot;100&quot; Use this data to validate by extra library\n\n    anonymous := struct{name string}{name: &quot;Anonymous struct&quot;}\n    fmt.Println(anonymous) // {Anonymous struct}\n\n    // Implement inheritance like thinks\n    type Animal struct{\n        name string\n        origin string\n        ave_weight float32\n    }\n    type Bird struct{\n        Animal\n        speed float32\n        ave_height_to_fly float32\n        canFly bool\n    }\n\n    bird := Bird{\n        Animal: Animal{name: &quot;unknown&quot;,ave_weight: 1.2},\n        speed: 40.6,\n        canFly: true,\n    }\n    fmt.Println(bird, bird.name) // {{unknown  1.2} 40.6 0 true} unknown\n}</code></pre> <h2 id=manipulation>Manipulation</h2> <h3 id=for-loop>For Loop</h3> <pre><code class=language-go>func loop() {\n    for true {\n        fmt.Println(&quot;While loop&quot;)\n        break\n    }\nlabel:\n    for i, j := 1, 3; i &lt; 5; i, j = i+1, j+1 {\n        for k := 1; k &lt; 5; k++ {\n            fmt.Println(i * j * k)\n            if i*j*k &lt;= 10 {\n                continue\n            }\n            if i*j*k &gt; 10 {\n                break label // also break outer loop\n            }\n        }\n    }\n    datas := []int{5, 3, 1}\n    for k, v := range datas {\n        fmt.Println(k, v)\n    }\n}</code></pre> <h3 id=control-flow>Control Flow</h3> <pre><code class=language-go>func controlFlow() {\n    // execute function code =&gt; defer =&gt; panic =&gt; recover =&gt; return\n    // defer\n    res, err := http.Get(&quot;http://www.google.com/robots.txt&quot;)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer res.Body.Close()\n    robots, err := ioutil.ReadAll(res.Body)\n    if err != nil {\n        log.Fatal(err)\n    }\n    fmt.Printf(&quot;%d\\n&quot;, len(robots))\n\n    // panic and recover\n    fmt.Println(&quot;Start&quot;)\n    defer func() { // anonymous function\n        if err := recover(); err != nil { // function called if something happend bad\n            log.Println(&quot;Error: &quot;, err)\n            // panic(err) // If you want to throw error to the parent function\n        }\n    }()\n    a, b := 10, 0\n    c := a / b // in go this is called panic or you can create panic by using panic(&quot;error message&quot;)\n    fmt.Println(&quot;Error done&quot;, c)\n}</code></pre> <h3 id=pointer>Pointer</h3> <pre><code class=language-go>func pointer() {\n    var a int = 42\n    var b *int = &amp;a\n    a = 27\n    fmt.Println(a, b) // 27 0xc0000160d8\n    *b = 20\n    fmt.Println(a, *b) // 20 20\n}</code></pre> <h3 id=function>Function</h3> <pre><code class=language-go>// result := function(&quot;string&quot;, 1, 2, 3, 4)\nfunc function(mes string, values ...int) (*int, error) {\n    result := 0\n    var changeValue func(*int) = func(value *int) {\n        *value = 9999\n    }\n    for _, value := range values {\n        if value &lt; 0 {\n            return &amp;result, fmt.Errorf(&quot;Answer should not be negative&quot;)\n        }\n        if value%3 == 0 {\n            changeValue(&amp;value)\n        }\n        result += value\n    }\n    fmt.Println(result)\n    return &amp;result, nil\n}\n\n// Method\ntype method struct {\n    name string\n    age  int\n}\n// This is a method not a function\nfunc (m method) print() {\n    fmt.Println(m.name, m.age) // Nayan 29\n}\nfunc testMethod() {\n    obj := method{\n        name: &quot;Nayan&quot;,\n        age:  29,\n    }\n    obj.print()\n}</code></pre> <h3 id=interfaces>Interfaces</h3> <pre><code class=language-go>// Writer defination\ntype Writer interface {\n    Writer([]byte) (int, error)\n}\n\n// ConsoleWriter assign\ntype ConsoleWriter struct{}\n\n// Writer (int, error) Implementation\nfunc (cw ConsoleWriter) Writer(data []byte) (int, error) {\n    n, err := fmt.Println(string(data))\n    return n, err\n}\n\nfunc interfaces() {\n    var console Writer = ConsoleWriter{}\n    console.Writer([]byte(&quot;demo data&quot;))\n}\n</code></pre> <h2 id=installetion>Installetion</h2> <h3 id=documented-way>Documented way</h3> <ul> <li><code>curl -O https://dl.google.com/go/go1.15.7.linux-amd64.tar.gz</code> first <a href=https://golang.org/dl/go1.15.7.linux-amd64.tar.gz>download</a> the file</li> <li><code>sudo tar -C /usr/local -xzf go1.15.7.linux-amd64.tar.gz</code> unzip it.</li> <li><code>export PATH=$PATH:/usr/local/go/bin</code><h3 id=using-snap>Using Snap</h3> </li> <li><code>sudo apt-get update; sudo apt-get -y upgrade; sudo snap install go --classic</code> Update, Upgrade and install.</li> <li><code>go version</code> Check version</li> <li><code>go run file.go</code> Build &amp; run go file</li> </ul> ";e.exports=o},"4d30":function(e,t){var o="<h1 id=bash>Bash</h1> <h2 id=condition>Condition</h2> <pre><code class=language-bash>count=11\n\nif [ $count -eq 11 ]\nthen\n    echo &quot;This was baby&quot; \nelif (( $count &gt; 12 &amp;&amp; $count &lt; 18 ))\nthen\n    echo &quot;This was child&quot;\nelse\n    echo &quot;This was adult&quot;\nfi\nif (( $count &lt;= 12 ))\nthen\n    echo &quot;age 0 to 12 year&quot;\nelif [ $count -gt 12 -a $count -le 20 ]\nthen\n    echo &quot;Age 11 to 20 year&quot;\nelif [[ $count -ge 21     &amp;&amp; $count -le 30 ]]\nthen\n    echo &quot;Age 21 to 30&quot;\nelse\n    echo &quot;Age more then 30&quot;\nfi</code></pre> <h2 id=switch-case>Switch Case</h2> <pre><code class=language-bash>select car in bmw mercedese tesla rover toyota\ndo\n    case $car in\n    bmw)\n        echo &quot;b selected&quot;;;\n    mercedese)\n        echo &quot;m selected&quot;;;\n    tesla)\n        echo &quot;te selected&quot;;;\n    rover)\n        echo &quot;r selected&quot;;;\n    toyota)\n        echo &quot;to selected&quot;;;\n    *)\n        echo &quot;Invalid selection&quot;;;\n    esac\ndone</code></pre> <h2 id=input>Input</h2> <pre><code class=language-bash># echo &quot;filename $0, firstinput $1&quot;\nargs=(&quot;$@&quot;)\necho &quot;${args[0]}--&gt; ${args[1]}--&gt; ${args[2]}&quot;\necho &quot;$@&quot; # all input in single line\necho &quot;$#&quot; # input length\nwhile read line\ndo\n    echo &quot;$line&quot;\ndone &lt; &quot;${1:-/dev/stdin}&quot; # it will take terminal input as well as selective input like ./input.sh &lt;input.txt&gt;</code></pre> <h2 id=output>Output</h2> <pre><code class=language-bash># Here 1 means STD output and 2 means STD error\nls -al 1&gt;output.txt 2&gt;error.txt\n\n# This will add output at the bottom\n# ls -al 1&gt;&gt;output.txt 2&gt;&gt;error.txt\n\n# This is STD output and error on same file.\n# ls -al 1&gt;&amp; output.txt\n# ls -al 1&gt;output.txt 2&gt;&amp;1</code></pre> <h2 id=export>Export</h2> <p><strong>parent.sh</strong></p> <pre><code class=language-bash>message=&quot;Hello World&quot;\nexport message\n./child.sh</code></pre> <p><strong>child.sh</strong></p> <pre><code class=language-bash>echo &quot;String come from parent was --&gt; $message&quot;</code></pre> <h2 id=number>Number</h2> <pre><code class=language-bash>one=15\ntwo=4\n: &#39;\necho $(( one + two ))\necho $(expr $one + $two )\necho $(( one - two ))\necho $(( one * two ))\necho $(( one / two ))\necho $(( one % two ))\n&#39;\necho &quot;Enter Hex Number&quot;\nread hex\necho -n &quot;The deciaml value of $hex is: &quot;\necho &quot;obase=10; ibase=16; $hex&quot; | bc</code></pre> <h2 id=string>String</h2> <pre><code class=language-bash>echo &quot;Enter 1st string&quot;\nread str1\necho &quot;Enter 2nd string&quot;\nread str2\nif [ &quot;$str1&quot; == &quot;$str2&quot; ]\nthen\n    echo &quot;String Match&quot;\nelse\n    echo &quot;String doesn&#39;t Match&quot;\nfi\nif [ &quot;$str1&quot; \\&lt; &quot;$str2&quot; ]\nthen\n    echo &quot;$str1 is smaller then $str2&quot;\nelif [ &quot;$str1&quot; \\&gt; &quot;$str2&quot; ]\nthen\n    echo &quot;$str1 is getter then $str2&quot;\nelse\n    echo &quot;Both string are same&quot;\nfi\n# Concatination\nplus=&quot;+&quot;\nres=$str1$plus$str2\necho &quot;Result was: $res&quot;\n# Case conversion\necho &quot;Lower case: ${res,,}&quot;\necho &quot;Upper case: ${res^^}&quot;\necho &quot;Toggle case: ${res~~}&quot;</code></pre> <h2 id=declare>Declare</h2> <pre><code class=language-bash>declare var=nayan # change able variable\ndeclare -r pwdfile=/etc/passwd # const variable\necho &quot;$var --- $pwdfile&quot;\nvar=changed\npwdfile=new_error\necho &quot;$var --- $pwdfile&quot;</code></pre> <h2 id=loop>Loop</h2> <pre><code class=language-bash>number=0\nsize=3\n: &#39;echo &quot;While Loop:&quot;\nwhile [ $number -lt $size ]\ndo\n    echo &quot;$number&quot;\n    number=$((number+1))\ndone\nnumber=0\necho &quot;Untill Loop:&quot;\nuntil [ $number -gt $size ]\ndo\n    echo &quot;$number&quot;\n    number=$((number+1))\ndone\n&#39;\nfor i in 1 2 3 4 5 \ndo \n    echo -n &quot;$i &quot; # -n will remove new line from echo.\ndone\necho &quot;&quot;\n# {start..end..step_size}\nfor i in {0..10..3}\ndo \n    echo -n &quot;$i &quot;\ndone\necho &quot;&quot;\n# Traditional for loop\nfor (( i=0; i&lt;5; i++ ))\ndo \n    echo -n &quot;$i &quot;\ndone\necho &quot;&quot;\n# break and continue\nfor (( i=0; i&lt;10; i++ ))\ndo\n    if (( $i == 3 ))\n    then\n        echo -n &quot;continue &quot;\n        continue\n    elif (( $i == 7 ))\n    then\n        echo -n &quot;break&quot;\n        break\n    else\n        echo -n &quot;$i &quot;\n    fi\ndone\necho &quot;&quot;\n# for (( i=0; i&lt;5; i++ )); do; echo -n &quot;$i &quot;; done; echo &quot;&quot;</code></pre> <h2 id=array>Array</h2> <pre><code class=language-bash>car=(&quot;One&quot; &quot;Two&quot; &quot;Three&quot; &quot;Four&quot;)\necho &quot;Second value: ${car[1]}&quot;\necho &quot;All Array: ${car[@]}&quot; # pring all value of an array\necho &quot;All Indexes: ${!car[@]}&quot; # Show indexes number\necho &quot;Length: ${#car[@]}&quot; # Show array length\ncar[2]=&quot;Change&quot;\necho &quot;After change third index: ${car[@]}&quot;\nunset car[2]\necho &quot;After Remove third index: ${car[@]}&quot;</code></pre> <h2 id=function>Function</h2> <pre><code class=language-bash>function func(){\n    returningVar=&quot;Changed var&quot;\n}\nreturningVar=&quot;Initial value&quot;\necho $returningVar\nfunc\necho $returningVar\nfunction isPrime(){\n    num=$1\n    prime=1\n    for (( i=3; i &lt; num; i++ ))\n    do\n        if (( num % $i == 0 ))\n        then\n            prime=0\n            break\n        fi\n    done\n    if (( num != 2 &amp;&amp; (( num &lt; 2 || num%2 == 0 )) ))\n    then\n        prime=0\n    fi\n}\nfor i in {1..20}\ndo\n    echo -n &quot;$i is: &quot;\n    isPrime $i\n    if (( prime == 1 ))\n    then\n        echo &quot;Prime&quot;\n    else\n        echo &quot;not Prime&quot;\n    fi\ndone</code></pre> <h2 id=file>File</h2> <pre><code class=language-bash>: &#39;echo &quot;Enter dr name&quot;\nread direct\n\nif [ -d &quot;$direct&quot; ]\nthen\n    echo &quot;$direct exists&quot;\nelse\n    echo &quot;$direct not exists&quot;\nfi\n&#39;\n\n: &#39;echo &quot;Enter File Name&quot;\nread filename\nif [ -f &quot;$filename&quot; ]\nthen\n    echo &quot;$filename exists&quot;\nelse\n    echo &quot;$filename not exists&quot;\nfi\n&#39;\n\necho &quot;Enter file name&quot;\nread filename\nif [ -f &quot;$filename&quot; ]\nthen\n    while IFS= read -r line\n    do\n        echo $line\n    done &lt; $filename\nelse\n    echo &quot;$filename doesn&#39;t exists&quot;\nfi</code></pre> <h2 id=bash-email>Bash Email</h2> <ul> <li><code>sudo apt install ssmtp</code> secure smtp service</li> <li><code>sudo vi /etc/ssmtp/ssmtp.conf</code> Open this file</li> </ul> <pre><code class=language-conf>root=your_email@gmail.com\nmailhub=smtp.gmail.com:587\nAuthUser=your_email@gmail.com\nAuthPass=your_email_pass\nUseSTARTTLS=yes</code></pre> <pre><code class=language-bash>ssmtp your_email@gmail.com</code></pre> <ul> <li>Run script in input give those information<ul> <li>To: <a href=mailto:demo@gmail.com>demo@gmail.com</a></li> <li>From <a href=mailto:your_email@gmail.com>your_email@gmail.com</a></li> <li>Cc: <a href=mailto:your_cc_mail@gmail.com>your_cc_mail@gmail.com</a></li> <li>Subject: Test</li> <li>This is Body</li> </ul> </li> </ul> <h2 id=curl>CURL</h2> <pre><code class=language-bash>url=&quot;&lt;your_file_url&gt;&quot;\n# curl ${url} -o\n# curl ${url} -o output_file\ncurl ${url} &gt; output_file\n\n# Check file meta this can used for knowing server info or file status\ncurl -I ${url}</code></pre> <h2 id=waiting>Waiting</h2> <pre><code class=language-bash>echo &quot;Press any key to exit&quot;\nwhile [ true ]\ndo\n    read -t 5 -n 1\nif [ $? = 0 ]\nthen\n    echo &quot;&quot;\n    echo &quot;You have terminated&quot;\n    exit;\nelse\n    echo &quot;Waiting for you to press the key!!!&quot;\nfi\ndone</code></pre> <h2 id=notify-folder-change>notify folder change</h2> <ul> <li><code>sudo apt install inotify-tools</code> Install <strong>Inotify-Tools</strong></li> </ul> <pre><code class=language-bash>inotifywait -m /temp/NewFolder</code></pre> <h2 id=search-by-grep>Search by Grep</h2> <pre><code class=language-bash>echo &quot;Enter filename to search text from&quot;\nread filename\n\nif [[ -f $filename ]]\nthen\n    echo &quot;Enter the text to search&quot;\n    read text\n    # -i for case insencetive, -n for line number\n    # you can use -c, -v. -c how many word match. -v for will show those line which are not match.\n    grep -i -n $text $filename\nelse\n    echo &quot;$filename does&#39;nt exist&quot;\nfi\n# find . -type f; wc -c &lt; ./dbms/postgresql-cheat-sheet.png</code></pre> <h2 id=awk>AWK</h2> <pre><code class=language-bash>echo &quot;Enter filename to print from awk&quot;\nread filename\n\nif [[ -f $filename ]]\nthen\n    # awk &quot;/filename/ {print}&quot; $filename\n    awk &quot;/filename/ {print $1,$2}&quot; $filename # print n&#39;th charecter of result line\n\nelse\n    echo &quot;$filename does&#39;nt exist&quot;\nfi</code></pre> <h2 id=sed>SED</h2> <pre><code class=language-bash>echo &quot;Enter filename to print from awk&quot;\nread filename\n\nif [[ -f $filename ]]\nthen\n    sed &quot;s/i/I/g&quot; $filename &gt; new_file.txt\n    # sed -i &quot;s/i/I/g&quot; $filename # -i meand derect action of the filename\n\nelse\n    echo &quot;$filename does&#39;nt exist&quot;\nfi</code></pre> <h2 id=debug>debug</h2> <p><strong>Three way</strong> of debugging</p> <ol> <li><p><code>bash -x ./&lt;filename&gt;.sh</code> This will show you code step by step.</p> </li> <li><pre><code class=language-bash>#! /usr/bin/bash -x\ncode=&quot;Your all code.&quot;\ncode=&quot;This system as same as first one. but different way.&quot;</code></pre> </li> <li><pre><code class=language-bash>code=&quot;Start code&quot;\nset -x # debugging start.\ncode=&quot;Other code you want to debug&quot;\nset +x # debugging end.</code></pre> </li> </ol> <h2 id=color>Color</h2> <pre><code># Reset\nColor_Off=&quot;\\033[0m&quot;  \n\n# Regular Colors\nBlack=&quot;\\033[0;30m&quot;\nRed=&quot;\\033[0;31m&quot;\nGreen=&quot;\\033[0;32m&quot;\nYellow=&quot;\\033[0;33m&quot;\nBlue=&quot;\\033[0;34m&quot;\nPurple=&quot;\\033[0;35m&quot;\nCyan=&quot;\\033[0;36m&quot;\nWhite=&quot;\\033[0;37m&quot;\n\n# Bold\nBBlack=&quot;\\033[1;30m&quot;\nBRed=&quot;\\033[1;31m&quot;\nBGreen=&quot;\\033[1;32m&quot;\nBYellow=&quot;\\033[1;33m&quot; \nBBlue=&quot;\\033[1;34m&quot;\nBPurple=&quot;\\033[1;35m&quot; \nBCyan=&quot;\\033[1;36m&quot;\nBWhite=&quot;\\033[1;37m&quot;\n\n# Underline\nUBlack=&quot;\\033[4;30m&quot;\nURed=&quot;\\033[4;31m&quot;\nUGreen=&quot;\\033[4;32m&quot;\nUYellow=&quot;\\033[4;33m&quot; \nUBlue=&quot;\\033[4;34m&quot;\nUPurple=&quot;\\033[4;35m&quot; \nUCyan=&quot;\\033[4;36m&quot;\nUWhite=&quot;\\033[4;37m&quot;\n\n# Background\nOn_Black=&quot;\\033[40m&quot;\nOn_Red=&quot;\\033[41m&quot;\nOn_Green=&quot;\\033[42m&quot;\nOn_Yellow=&quot;\\033[43m&quot; \nOn_Blue=&quot;\\033[44m&quot;\nOn_Purple=&quot;\\033[45m&quot; \nOn_Cyan=&quot;\\033[46m&quot;\nOn_White=&quot;\\033[47m&quot;\n\n# High Intensity\nIBlack=&quot;\\033[0;90m&quot;\nIRed=&quot;\\033[0;91m&quot;\nIGreen=&quot;\\033[0;92m&quot;\nIYellow=&quot;\\033[0;93m&quot; \nIBlue=&quot;\\033[0;94m&quot;\nIPurple=&quot;\\033[0;95m&quot; \nICyan=&quot;\\033[0;96m&quot;\nIWhite=&quot;\\033[0;97m&quot;\n\n# Bold High Intensity\nBIBlack=&quot;\\033[1;90m&quot; \nBIRed=&quot;\\033[1;91m&quot;\nBIGreen=&quot;\\033[1;92m&quot; \nBIYellow=&quot;\\033[1;93m&quot;\nBIBlue=&quot;\\033[1;94m&quot;\nBIPurple=&quot;\\033[1;95m&quot;\nBICyan=&quot;\\033[1;96m&quot;\nBIWhite=&quot;\\033[1;97m&quot; \n\n# High Intensity backgrounds\nOn_IBlack=&quot;\\033[0;100m&quot;\nOn_IRed=&quot;\\033[0;101m&quot;\nOn_IGreen=&quot;\\033[0;102m&quot;\nOn_IYellow=&quot;\\033[0;103m&quot;\nOn_IBlue=&quot;\\033[0;104m&quot;\nOn_IPurple=&quot;\\033[0;105m&quot;\nOn_ICyan=&quot;\\033[0;106m&quot;\nOn_IWhite=&quot;\\033[0;107m&quot;</code></pre><p>RED=&quot;\\033[0;31m&quot; NC=&quot;\\033[0m&quot; # No Color echo -e &quot;I ${RED}love${NC} Stack Overflow&quot;</p> ";e.exports=o},"4e44":function(e,t,o){},5087:function(e,t){var o="<h2 id=install-c>Install C#</h2> <ul> <li><code>sudo apt-get install mono-runtime</code></li> <li><code>sudo apt-get install mono-mcs</code></li> </ul> <h2 id=install-net>Install .Net</h2> <ul> <li><code>sudo snap install dotnet-sdk --classic</code></li> </ul> <h2 id=run-code>Run code</h2> <ul> <li><code>mcs code.cs</code></li> <li><code>mono code.exe</code></li> </ul> <h2 id=sample-code>Sample code</h2> <pre><code class=language-cs>using System;\nnamespace Start\n{\n    class Program\n    {\n        static void Main(string[] args){\n            Console.WriteLine(&quot;Hello Wordl&quot;);\n        }\n    }\n}</code></pre> ";e.exports=o},"514c":function(e,t){var o="<h1 id=mysql>MySQL</h1> <h2 id=setup-mysql>Setup Mysql</h2> <pre><code class=language-bash>sudo apt-get install mysql-server\nsudo mysql_secure_installation\n    0\n    password\n    password\n    y\n    y\n    y\n    y\n    y</code></pre> <p>Install mysql_workbench from <a href=https://dev.mysql.com/downloads/workbench/ >Here</a></p> <pre><code class=language-bash>sudo mysql -u root -p</code></pre> <p>Then</p> <pre><code class=language-sql>    show databases;\n    use mysql\n    update user set plugin=&#39;mysql_native_password&#39; where user=&#39;root&#39;;\n    if you want to change password:\n        ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;new_password&#39;;\n    FLUSH PRIVILEGES;</code></pre> <p><strong>Create new user</strong></p> <pre><code class=language-sql>CREATE USER &#39;newuser&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;password&#39;;\nGRANT ALL PRIVILEGES ON * . * TO &#39;newuser&#39;@&#39;localhost&#39;;</code></pre> <h2 id=schema-export-import>Schema export import</h2> <ul> <li><code>mysqldump -u [username] -p [database name] &gt; [database name].sql</code> <strong>Export</strong></li> <li><code>mysql -u username -p database_name &lt; file.sql</code> <strong>Import</strong></li> </ul> <h2 id=mysql-error-and-solution>Mysql Error and Solution</h2> <p>connect to <strong>mysql server</strong></p> <p><code>mysql -u root -p</code></p> <ol> <li>Error</li> </ol> <pre><code class=language-bash>1055 (42000): Expression sql_mode=only_full_group_by #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column &#39;a2i_new.digital_centers.center_id&#39; which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by</code></pre> <p><strong>solution</strong>.</p> <p><code>SET GLOBAL sql_mode=(SELECT REPLACE(@@sql_mode,&#39;ONLY_FULL_GROUP_BY&#39;,&#39;&#39;));</code></p> <ol start=2> <li>Error</li> </ol> <p><code>ERROR 1153 (08S01) at line 3937: Got a packet bigger than &#39;max_allowed_packet&#39; bytes</code></p> <p><strong>solution</strong>.</p> <pre><code class=language-bash>set global net_buffer_length=1000000\nset global max_allowed_packet=1000000000</code></pre> <ol start=3> <li>Error</li> </ol> <p><code>ERROR 1045 (28000): Access denied for user &#39;root&#39;@&#39;localhost&#39; (using password: YES)</code></p> <p><strong>Solution</strong> <code>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;[password]&#39;;</code></p> <h2 id=table-actions>Table Actions</h2> <pre><code class=language-sql>1. Login to MySQL \n     a. mysql5 -u mysqladmin -p\n2. quit\n    a. Quit MySQL\n3. show databases;\n    a. Display all databases\n4. CREATE DATABASE test2;\n    a. Create a database\n5. USE test2;\n    a. Make test2 the active database\n6. SELECT DATABASE();\n    a. Show the currently selected database\n7. DROP DATABASE IF EXISTS test2;\n    a. Delete the named database\n    b. Slide about building tables (2)\n8. CREATE TABLE student(\n        `first_name` VARCHAR(30) NOT NULL,\n        `last_name` VARCHAR(30) NOT NULL,\n        `email` VARCHAR(60) NULL,\n        `street` VARCHAR(50) NOT NULL,\n        `city` VARCHAR(40) NOT NULL,\n        `state` CHAR(2) NOT NULL DEFAULT &quot;PA&quot;,\n        `zip` MEDIUMINT UNSIGNED NOT NULL,\n        `phone` VARCHAR(20) NOT NULL,\n        `birth_date` DATE NOT NULL,\n        `sex` ENUM(&#39;M&#39;, &#39;F&#39;) NOT NULL,\n        `date_entered` TIMESTAMP,\n        `lunch_cost` FLOAT NULL,\n        `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n        `student_id` INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY\n    );\n    a. VARCHAR(30) : Characters with an expected max length of 30\n    b. NOT NULL : Must contain a value\n    c. NULL : Doesnt require a value\n    d. CHAR(2) : Contains exactly 2 characters\n    e. DEFAULT &quot;PA&quot; : Receives a default value of PA\n    f. MEDIUMINT : Value no greater then 8,388,608\n    g. UNSIGNED : Cant contain a negative value\n    h. DATE : Stores a date in the format YYYY-MM-DD\n    i. ENUM(&#39;M&#39;, &#39;F&#39;) : Can contain either a M or F\n    j. TIMESTAMP : Stores date and time in this format YYYY-MM-DD-HH-MM-SS\n    k. FLOAT: A number with decimal spaces, with a value no bigger than 1.1E38 or smaller than -1.1E38\n    l. INT : Contains a number without decimals\n    m. AUTO_INCREMENT : Generates a number automatically that is one greater then the previous row\n    n. PRIMARY KEY (SLIDE): Unique ID that is assigned to this row of data\n        I. Uniquely identifies a row or record \n        II. Each Primary Key must be unique to the row\n        III. Must be given a value when the row is created and that value canâ��t be NULL \n        IV. The original value canâ��t be changed It should be short \n        V. Itâ��s probably best to auto increment the value of the key\n    o. Atomic Data &amp; Table Templating.\n        As your database increases in size, you are going to want everything to be organized, so that it can perform your queries quickly. If your tables are set up properly, your database will be able to crank through hundreds of thousands of bits of data in seconds. How do you know how to best set up your tables though? Just follow some simple rules, \n        Every table should focus on describing just one thing. Ex. Customer Table would have name, age, location, contact information. It shouldnâ��t contain lists of anything such as interests, job history, past address, products purchased, etc. After you decide what one thing your table will describe, then decide what things you need to describe that thing. Refer to the customer example given in the last step. Write out all the ways to describe the thing and if any of those things requires multiple inputs, pull them out and create a new table for them. For example, a list of past employers. Once your table values have been broken down, we refer to these values as being atomic. Be careful not to break them down to a point in which the data is harder to work with. It might make sense to create a different variable for the house number, street name, apartment number, etc.; but by doing so you may make your self more work? That decision is up to you?  \n    p. Some additional rules to help you make your data atomic:\n        Donâ��t have multiple columns with the same sort of information. Ex. If you wanted to include a employment history you should create job1, job2, job3 columns. Make a new table with that data instead. \n        Donâ��t include multiple values in one cell. Ex. You shouldnâ��t create a cell named jobs and then give it the value: McDonalds, Radio Shack, Walmart,â�¦ Normalized Tables\n    q. What does normalized mean?\n        Normalized just means that the database is organized in a way that is considered standardized by professional SQL programmers. So if someone new needs to work with the tables theyâ��ll be able to understand how to easily. Another benefit to normalizing your tables is that your queries will run much quicker and the chance your database will be corrupted will go down.\n    r. What are the rules for creating normalized tables:\n        The tables and variables defined in them must be atomic Each row must have a Primary Key defined. Like your social security number identifies you, the Primary Key will identify your row. You also want to eliminate using the same values repeatedly in your columns. Ex. You wouldnâ��t want a column named instructors, in which you hand typed in their names each time. You instead, should create an instructor table and link to itâ��s key. Every variable in a table should directly relate to the primary key. Ex. You should create tables for all of your customers potential states, cities and zip codes, instead of including them in the main customer table. Then you would link them using foreign keys. Note: Many people think this last rule is overkill and can be ignored! No two columns should have a relationship in which when one changes another must also change in the same table. This is called a Dependency. Note: This is another rule that is sometimes ignored.\n\n------------ Numeric Types ------------\n\nTINYINT: A number with a value no bigger than 127 or smaller than -128\nSMALLINT: A number with a value no bigger than 32,768 or smaller than -32,767\nMEDIUM INT: A number with a value no bigger than 8,388,608 or smaller than -8,388,608\nINT: A number with a value no bigger than 2^31 or smaller than 2^31 â�� 1\nBIGINT: A number with a value no bigger than 2^63 or smaller than 2^63 â�� 1\nFLOAT: A number with decimal spaces, with a value no bigger than 1.1E38 or smaller than -1.1E38\nDOUBLE: A number with decimal spaces, with a value no bigger than 1.7E308 or smaller than -1.7E308\n\n------------ String Types ------------\n\nCHAR: A character string with a fixed length\nVARCHAR: A character string with a length thatâ��s variable\nBLOB: Can contain 2^16 bytes of data\nENUM: A character string that has a limited number of total values, which you must define.\nSET: A list of legal possible character strings. Unlike ENUM, a SET can contain multiple values in comparison to the one legal value with ENUM.\n\n------------ Date &amp; Time Types ------------\n\nDATE: A date value with the format of (YYYY-MM-DD)\nTIME: A time value with the format of (HH:MM:SS)\nDATETIME: A time value with the format of (YYYY-MM-DD HH:MM:SS)\nTIMESTAMP: A time value with the format of (YYYYMMDDHHMMSS)\nYEAR: A year value with the format of (YYYY)\n\n9. DESCRIBE student;\n    a. Show the table set up\n\n\n10. CREATE TABLE class(\n        `name` VARCHAR(30) NOT NULL,\n        `class_id` INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY\n    );\n    a. Create a separate table for all classes\n\n11. CREATE TABLE test(\n        `date` DATE NOT NULL,\n        `type` ENUM(&#39;T&#39;, &#39;Q&#39;) NOT NULL,\n        `class_id` INT UNSIGNED NOT NULL,\n        `test_id` INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY\n    );\n    a. class_id is a foreign key\n    I. Used to make references to the Primary Key of another table \n    II. Example: If we have a customer and city table. If the city table had a column which listed the unique primary key of all the customers, that Primary Key listing in the city table would be considered a Foreign Key. \n    III. The Foreign Key can have a different name from the Primary Key name. \n    IV. The value of a Foreign Key can have the value of NULL. \n    V. A Foreign Key doesnâ��t have to be unique\n\n12. CREATE TABLE score(\n        `student_id` INT UNSIGNED NOT NULL,\n        `event_id` INT UNSIGNED NOT NULL,\n        `score` INT NOT NULL,\n        PRIMARY KEY(event_id, student_id)\n    );\n    a. We combined the event and student id to make sure we dont have duplicate scores and it makes it easier to change scores\n    b. Since neither the event or the student ids are unique on their own we are able to make them unique by combining them\n\n13. CREATE TABLE absence(\n        `student_id` INT UNSIGNED NOT NULL,\n        `date` DATE NOT NULL,\n        PRIMARY KEY(student_id, date)\n    );\n    a. Again we combine 2 items that arent unique to generate a unique key\n\n14. RENAME TABLE `absence` to `absences`, `class` to `classes`, `score` to `scores`, `student` to `students`, `test` to `tests`;\n    a. Change all the table names SHOW TABLES;\n15. ALTER TABLE `absences` ADD COLUMN `test_taken` CHAR(1) NOT NULL DEFAULT &#39;F&#39; AFTER `student_id`; \n    a. Use ALTER to add a column to a table. You can use AFTER or BEFORE to define the placement\n16. ALTER TABLE `absences` MODIFY COLUMN `test_taken` ENUM(&#39;T&#39;,&#39;F&#39;) NOT NULL DEFAULT &#39;F&#39;;\n    a. You can change the data type with ALTER and MODIFY COLUMN \n17. ALTER TABLE `absences` DROP COLUMN `test_taken`;\n    a. ALTER and DROP COLUMN can delete a column\n18. ALTER TABLE `absences` CHANGE `student_id` `student_id` INT UNSIGNED NOT NULL;\n    a. You can change the data type with ALTER and CHANGE\n19. ALTER TABLE `db`.`table_name` DROP PRIMARY KEY, ADD PRIMARY KEY (`first_column`, `second_column`);\n    a. change primary key to set other field as primary key.\n20. CREATE TABLE IF NOT EXISTS new_table LIKE existing_table;\n    INSERT new_table SELECT * FROM existing_table;\n    a. create a duplicate table in mysql\n\n\n//////////////////////////////////////     database_information      ////////////////////////////////////////////\n1. show_selected_table_data_size:\n    SELECT table_name AS `Table`, round(((data_length + index_length) / 1024 / 1024), 2) `Size in MB` \n    FROM information_schema.TABLES  WHERE table_schema = &quot;$schema_name&quot; AND table_name = &quot;$table_name&quot;;\n2. Show_all_table_data_size:\n    SELECT table_schema as `Database`, table_name AS `Table`, \n    round(((data_length + index_length) / 1024 / 1024), 2) `Size in MB` \n    FROM information_schema.TABLES ORDER BY (data_length + index_length) DESC;\n3. Show_all_schema_size:\n    SELECT table_schema AS &quot;Database&quot;, ROUND(SUM(data_length + index_length) / 1024 / 1024, 2) AS &quot;Size (MB)&quot; \n    FROM information_schema.TABLES GROUP BY table_schema;\n4. Show_number_of_table:\n    SELECT count(*) AS TOTALNUMBEROFTABLES  FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = &#39;a2i_new&#39;;\n\n\n\n\n1. One-to-One Relationship\n    a. In this One-to-One relationship there can only be one social security number per person. Hence,  each social security number can be associated with one person. As well, one person in the other table only matches up with one social security number.\n    b. One-to-One relationships can be identified also in that the foreign keys never duplicate across all rows.\n    c. If you are confused by the One-to-One relationship it is understandable, because they are not often used. Most of the time if a value never repeats it should remain in the parent table being customer in this case. Just understand that in a One-to-One relationship, exactly one row in a parent table is related to exactly one row of a child table.\n2. One-to-Many Relationship\n    a. When we are talking about One-to-Many relationships think about the table diagram here. If you had a list of customers chances are some of them would live in the same state. Hence, in the state column in the parent table, it would be common to see a duplication of states. In this example, each customer can only live in one state so their would only be one id used for each customer.\n    b. Just remember that, a One-to-Many relationship is one in which a record in the parent table can have many matching records in the child table, but a record in the child can only match one record in the parent. A customer can choose to live in any state, but they can only live in one at a time.\n3. Many-to-Many Relationship\n    a. Many people can own many different products. In this example, you can see an example of a Many-to-Many relationship. This is a sign of a non-normalized database, by the way. How could you ever access this information:\n    b. If a customer buys more than one product, you will have multiple product idâ��s associated with each customer. As well, you would have multiple customer idâ��s associated with each product.</code></pre> <h2 id=select-insert-updata>Select Insert Updata</h2> <pre><code class=language-sql>=&gt; Inserting Data into a Table \n    INSERT INTO student VALUES(&#39;Dale&#39;, &#39;Cooper&#39;, &#39;dcooper@aol.com&#39;, &#39;123 Main St&#39;, &#39;Yakima&#39;, &#39;WA&#39;, 98901, &#39;792-223-8901&#39;, &quot;1959-2-22&quot;,&#39;M&#39;, NOW(), 3.50, NULL);\n    INSERT INTO student VALUES(&#39;Harry&#39;, &#39;Truman&#39;, &#39;htruman@aol.com&#39;, &#39;202 South St&#39;, &#39;Vancouver&#39;, &#39;WA&#39;, 98660, &#39;792-223-9810&#39;, &quot;1946-1-24&quot;,&#39;M&#39;, NOW(), 3.50, NULL);\n    INSERT INTO student VALUES(&#39;Shelly&#39;, &#39;Johnson&#39;, &#39;sjohnson@aol.com&#39;, &#39;9 Pond Rd&#39;, &#39;Sparks&#39;, &#39;NV&#39;, 89431, &#39;792-223-6734&#39;, &quot;1970-12-12&quot;,&#39;F&#39;, NOW(), 3.50, NULL);\n    INSERT INTO student VALUES(&#39;Bobby&#39;, &#39;Briggs&#39;, &#39;bbriggs@aol.com&#39;, &#39;14 12th St&#39;, &#39;San Diego&#39;, &#39;CA&#39;, 92101, &#39;792-223-6178&#39;, &quot;1967-5-24&quot;,&#39;M&#39;, NOW(), 3.50, NULL);\n    INSERT INTO student VALUES(&#39;Donna&#39;, &#39;Hayward&#39;, &#39;dhayward@aol.com&#39;, &#39;120 16th St&#39;, &#39;Davenport&#39;, &#39;IA&#39;, 52801, &#39;792-223-2001&#39;, &quot;1970-3-24&quot;,&#39;F&#39;, NOW(), 3.50, NULL);\n    INSERT INTO student VALUES(&#39;Audrey&#39;, &#39;Horne&#39;, &#39;ahorne@aol.com&#39;, &#39;342 19th St&#39;, &#39;Detroit&#39;, &#39;MI&#39;, 48222, &#39;792-223-2001&#39;, &quot;1965-2-1&quot;,&#39;F&#39;, NOW(), 3.50, NULL);\n    INSERT INTO student VALUES(&#39;James&#39;, &#39;Hurley&#39;, &#39;jhurley@aol.com&#39;, &#39;2578 Cliff St&#39;, &#39;Queens&#39;, &#39;NY&#39;, 11427, &#39;792-223-1890&#39;, &quot;1967-1-2&quot;,&#39;M&#39;, NOW(), 3.50, NULL);\n    INSERT INTO student VALUES(&#39;Lucy&#39;, &#39;Moran&#39;, &#39;lmoran@aol.com&#39;, &#39;178 Dover St&#39;, &#39;Hollywood&#39;, &#39;CA&#39;, 90078, &#39;792-223-9678&#39;, &quot;1954-11-27&quot;,&#39;F&#39;, NOW(), 3.50, NULL);\n    INSERT INTO student VALUES(&#39;Tommy&#39;, &#39;Hill&#39;, &#39;thill@aol.com&#39;, &#39;672 High Plains&#39;, &#39;Tucson&#39;, &#39;AZ&#39;, 85701, &#39;792-223-1115&#39;, &quot;1951-12-21&quot;,&#39;M&#39;, NOW(), 3.50, NULL);\n    INSERT INTO student VALUES(&#39;Andy&#39;, &#39;Brennan&#39;, &#39;abrennan@aol.com&#39;, &#39;281 4th St&#39;, &#39;Jacksonville&#39;, &#39;NC&#39;, 28540, &#39;792-223-8902&#39;, &quot;1960-12-27&quot;,&#39;M&#39;, NOW(), 3.50, NULL);\n\n=&gt; SELECT * FROM student;\n    a. Shows all the student data\n=&gt; show tables;\n    a. Show all the tables\n=&gt; INSERT INTO class VALUES(&#39;English&#39;, NULL), (&#39;Speech&#39;, NULL), (&#39;Literature&#39;, NULL),(&#39;Algebra&#39;, NULL), \n                            (&#39;Geometry&#39;, NULL), (&#39;Trigonometry&#39;, NULL),(&#39;Calculus&#39;, NULL), (&#39;Earth Science&#39;, NULL), \n                            (&#39;Biology&#39;, NULL),(&#39;Chemistry&#39;, NULL), (&#39;Physics&#39;, NULL), (&#39;History&#39;, NULL),(&#39;Art&#39;, NULL), (&#39;Gym&#39;, NULL);\n=&gt; Insert Tests\n    a. INSERT INTO test VALUES (&#39;2014-8-25&#39;, &#39;Q&#39;, 15, 1, NULL), (&#39;2014-8-27&#39;, &#39;Q&#39;, 15, 1, NULL), (&#39;2014-8-29&#39;, &#39;T&#39;, 30, 1, NULL), \n                                (&#39;2014-8-29&#39;, &#39;T&#39;, 30, 2, NULL), (&#39;2014-8-27&#39;, &#39;Q&#39;, 15, 4, NULL), (&#39;2014-8-29&#39;, &#39;T&#39;, 30, 4, NULL); \n    b. select * FROM test;\n=&gt; Enter student scores\n    a. INSERT INTO score VALUES(1, 1, 15),(1, 2, 14),(1, 3, 28),(1, 4, 29),(1, 5, 15),(1, 6, 27),(2, 1, 15),(2, 2, 14),(2, 3, 26),(2, 4, 28),(2, 5, 14),(2, 6, 26),(3, 1, 14),(3, 2, 14),(3, 3, 26),(3, 4, 26),\n                                (3, 5, 13),(3, 6, 26),(4, 1, 15),(4, 2, 14),(4, 3, 27),(4, 4, 27),(4, 5, 15),(4, 6, 27),(5, 1, 14),(5, 2, 13),(5, 3, 26),(5, 4, 27),(5, 5, 13),(5, 6, 27),(6, 1, 13),(6, 2, 13),\n                                (6, 3, 24), (6, 4, 26),(6, 5, 13),(6, 6, 26),(7, 1, 13),(7, 2, 13),(7, 3, 25),(7, 4, 27),(7, 5, 13), (7, 6, 27),(8, 1, 14),(8, 2, 13),(8, 3, 26),(8, 4, 23),(8, 5, 12),(8, 6, 24),\n                                (9, 1, 15),(9, 2, 13),(9, 3, 28),(9, 4, 27),(9, 5, 14),(9, 6, 27),(10, 1, 15),(10, 2, 13),(10, 3, 26),(10, 4, 27),(10, 5, 12),(10, 6, 22);\n=&gt; Fill in the absences\n    a. INSERT INTO absence VALUES(6, &#39;2014-08-29&#39;),(7, &#39;2014-08-29&#39;),(8, &#39;2014-08-27&#39;);\n=&gt; SELECT * FROM student;\n    a. Shows everything in the student table\n=&gt; SELECT FIRST_NAME, last_name FROM student;\n    a. Show just selected data from the table (Not Case Sensitive)\n=&gt; SELECT first_name, last_name, state FROM studentsWHERE state=&quot;WA&quot;;\n    a. Show every student born in the state of Washington\n=&gt; SELECT first_name, last_name, birth_date FROM students WHERE YEAR(birth_date) &gt;= 1965;\n    a. You can compare values with =, &gt;, &lt;, &gt;=, &lt;=, !=\n    b. To get the month, day or year of a date use MONTH(), DAY(), or YEAR()\n=&gt; SELECT first_name, last_name, birth_date FROM students WHERE MONTH(birth_date) = 2 OR state=&quot;CA&quot;;\n    a. AND, &amp;&amp; : Returns a true value if both conditions are true \n    b. OR, || : Returns a true value if either condition is true \n    c. NOT, ! : Returns a true value if the operand is false\n=&gt; SELECT last_name, state, birth_date FROM students WHERE DAY(birth_date) &gt;= 12 &amp;&amp; (state=&quot;CA&quot; || state=&quot;NV&quot;);\n    a. You can use compound logical operators\n=&gt; SELECT last_name FROM students WHERE last_name IS NULL;\n    SELECT last_name FROM students WHERE last_name IS NOT NULL;\n    a. If you want to check for NULL you must use IS NULL or IS NOT NULL\n=&gt; SELECT first_name, last_name FROM students ORDER BY last_name;\n    a. ORDER BY allows you to order results. To change the order use ORDER BY col_name DESC;\n=&gt; SELECT first_name, last_name, state FROM students ORDER BY state DESC, last_name ASC;\n    a. If you use 2 ORDER BYs it will order one and then the other\n=&gt; SELECT first_name, last_name FROM students LIMIT 5;\n    a. Use LIMIT to limit the number of results\n=&gt; SELECT first_name, last_name FROM students LIMIT 5, 10;\n    a. You can also get results 5 through 10\n=&gt; SELECT CONCAT(first_name, &quot; &quot;, last_name) AS &#39;Name&#39;, CONCAT(city, &quot;, &quot;, state) AS &#39;Hometown&#39; FROM students;\n    a. CONCAT is used to combine results\n    b. AS provides for a way to define the column name\n=&gt; SELECT last_name, first_name FROM students WHERE first_name LIKE &#39;D%&#39; OR last_name LIKE &#39;%n&#39;;\n    a. Matchs any first name that starts with a D, or ends with a n\n    b. % matchs any sequence of characters\n=&gt; SELECT last_name, first_name FROM students WHERE first_name LIKE &#39;___y&#39;;\n    a. _ matchs any single character\n=&gt; SELECT DISTINCT state FROM students ORDER BY state;\n    a. Returns the states from which students are born because DISTINCT\n    eliminates duplicates in results\n=&gt; SELECT COUNT(DISTINCT state) FROM students; \n    a. COUNT returns the number of matchs, so we can get the number of DISTINCT states from which students were born\n=&gt; SELECT COUNT(*) FROM students;\n    SELECT COUNT(*) FROM students WHERE sex=&#39;M&#39;;\n    a. COUNT returns the total number of records as well as the total number of boys\n=&gt; SELECT sex, COUNT(*) FROM students GROUP BY sex;\n    a. GROUP BY defines how the results will be grouped\n=&gt; SELECT MONTH(birth_date) AS &#39;Month&#39;, COUNT(*) FROM students GROUP BY Month ORDER BY Month;\n    a. We can get each month in which we have a birthday and the total number for each month\n=&gt; SELECT state, COUNT(state) AS &#39;Amount&#39; FROM students GROUP BY state HAVING Amount &gt; 1;\n    a. HAVING allows you to narrow the results after the query is executed\n=&gt; SELECT test_id AS &#39;Test&#39;, MIN(score) AS min, MAX(score) AS max, MAX(score)-MIN(score) AS &#39;range&#39;, SUM(score) AS total, AVG(score) AS average FROM scores GROUP BY test_id;\n    a. There are many math functions built into MySQL. Range had to be quoted because it is a reserved word.\n    b. You can find all reserved words here http://dev.mysql.com/doc/mysqld-version-reference/en/mysqld-version-reference-reservedwords-5-5.html\n=&gt; The Built in Numeric Functions (SLIDE) \n    ABS(x) : Absolute Number: Returns the absolute value of the variable x.\n    ACOS(x), ASIN(x), ATAN(x), ATAN2(x,y), COS(x), COT(x), SIN(x), TAN(x) :Trigonometric Functions : They are used to relate the angles of a triangle to the lengths of the sides of a triangle.\n    AVG(column_name) : Average of Column : Returns the average of all values in a column. SELECT AVG(column_name) FROM table_name;\n    CEILING(x) : Returns the smallest number not less than x.\n    COUNT(column_name) : Count : Returns the number of non null values in the column. SELECT COUNT(column_name) FROM table_name;\n    DEGREES(x) : Returns the value of x, converted from radians to degrees.\n    EXP(x) : Returns e^x\n    FLOOR(x) : Returns the largest number not grater than x\n    LOG(x) : Returns the natural logarithm of x\n    LOG10(x) : Returns the logarithm of x to the base 10\n    MAX(column_name) : Maximum Value : Returns the maximum value in the column. SELECT MAX(column_name) FROM table_name;\n    MIN(column_name) : Minimum : Returns the minimum value in the column. SELECT MIN(column_name) FROM table_name;\n    MOD(x, y) : Modulus : Returns the remainder of a division between x and y\n    PI() : Returns the value of PI\n    POWER(x, y) : Returns x ^ Y\n    RADIANS(x) : Returns the value of x, converted from degrees to radians\n    RAND() : Random Number : Returns a random number between the values of 0.0 and 1.0\n    ROUND(x, d) : Returns the value of x, rounded to d decimal places\n    SQRT(x) : Square Root : Returns the square root of x\n    STD(column_name) : Standard Deviation : Returns the Standard Deviation of values in the column. SELECT STD(column_name) FROM table_name;\n    SUM(column_name) : Summation : Returns the sum of values in the column. SELECT SUM(column_name) FROM table_name;\n    TRUNCATE(x) : Returns the value of x, truncated to d decimal places\n=&gt; SELECT * FROM absences; \n    DESCRIBE scores;\n    SELECT student_id, test_id FROM scores WHERE student_id = 6;\n    INSERT INTO scores VALUES (6, 3, 24);\n    DELETE FROM absences WHERE student_id = 6;\n    a. Look up students that missed a test\n    b. Look up the specific test missed by student 6\n    c. Insert the make up test result\n    d. Delete the record in absences\n=&gt; SELECT * FROM scores WHERE student_id = 4;\n    UPDATE scores SET score=25 WHERE student_id=4 AND test_id=3;\n    a. Use UPDATE to change a value in a row\n\n=&gt; SELECT first_name, last_name, birth_date FROM students WHERE birth_date BETWEEN &#39;1960-1-1&#39; AND &#39;1970-1-1&#39;;\n    a. Use BETWEEN to find matches between a minimum and maximum\n\n=&gt; SELECT first_name, last_name FROM students WHERE first_name IN (&#39;Bobby&#39;, &#39;Lucy&#39;, &#39;Andy&#39;);\n    a. Use IN to narrow results based on a predefined list of options\n\n=&gt; SELECT student_id, date, score, maxscore FROM tests, scores WHERE date = &#39;2014-08-25&#39; AND tests.test_id = scores.test_id;\n    a. To combine data from multiple tables you can perform a JOIN by matching up common data like we did here with the test ids\n    b. You have to define the 2 tables to join after FROM\n    c. You have to define the common data between the tables after WHERE\n\n=&gt; SELECT scores.student_id, tests.date, scores.score, tests.maxscore FROM tests, scores WHERE date = &#39;2014-08-25&#39; AND tests.test_id = scores.test_id;\n    a. It is good to qualify the specific data needed by proceeding it with the tables name and a period\n    b. The test_id that is in scores is an example of a foreign key, which  is a reference to a primary key in the tests table\n\n=&gt; SELECT CONCAT(students.first_name, &quot; &quot;, students.last_name) AS Name, tests.date, scores.score, tests.maxscore FROM tests, scores, students \n                WHERE date = &#39;2014-08-25&#39; AND tests.test_id = scores.test_id AND scores.student_id = students.student_id;\n    a. You can JOIN more then 2 tables as long as you define the like     data between those tables\n\n=&gt; SELECT students.student_id, CONCAT(students.first_name, &quot; &quot;, students.last_name) AS Name, COUNT(absences.date) AS Absences FROM students, absences \n                WHERE students.student_id = absences.student_id GROUP BY students.student_id;\n    a. If we wanted a list of the number of absences per student we have to group by student_id or we would get just one result\n\n=&gt; SELECT students.student_id, CONCAT(students.first_name, &quot; &quot;, students.last_name) AS Name, COUNT(absences.date) AS Absences FROM students LEFT JOIN absences\n                ON students.student_id = absences.student_id GROUP BY students.student_id;\n    a. If we need to include all information from the table listed first &quot;FROM students&quot;, even if it doesnt exist in the table on the right &quot;LEFT JOIN absences&quot;, we can use a LEFT JOIN.\n\n=&gt; SELECT students.first_name, students.last_name, scores.test_id, scores.score FROM students INNER JOIN scores \n                ON students.student_id=scores.student_id WHERE scores.score &lt;= 15 ORDER BY scores.test_id;\n    a. An INNER JOIN gets all rows of data from both tables if there is a match between columns in both tables\n    b. Here Im getting all the data for all quizzes and matching that data up based on student ids</code></pre> ";e.exports=o},"52a5":function(e,t){var o="<h1 id=linux-commands-cheat-sheet>Linux Commands Cheat Sheet</h1> <h2 id=file-permission>File Permission</h2> <p>In linux every file and folder has 10 bit for permission. First bit define file type, the next third bit for user permission, the next third bit for group permission, the next third bit for other permission. Three bit permission. Overol <strong>777 permission</strong> is very bad. Specifically last 7 is very bad.</p> <pre><code class=language-file>100 = read permission only\n010 = write permission only\n110 = read write permission\n001 = executable permission\n101 = read executable permission\n011 = write executable permission\n111 = read write executable permission</code></pre> <h2 id=set-default-permission>Set default permission</h2> <p>This is very restricted permission. Commonly don&#39;t do it.</p> <ul> <li><code>setfacl -R -d -m g::r ~/</code> Group user can read only</li> <li><code>setfacl -R -d -m o::000 ~/</code> And public have no permission</li> </ul> <h3 id=give-permission>Give permission</h3> <ul> <li><code>chmod -R 775 &lt;full_path&gt;</code> <strong>Change permission</strong>.</li> <li><code>find . -type d -exec chmod 775 {} \\;</code> <strong>Permission only for dir</strong></li> <li><code>find . -type f -exec chmod 664 {} \\;</code> <strong>Permission only for file</strong></li> <li><code>chmod +x *.sh</code> <strong>Executable</strong></li> <li><code>sudo chown -Rv $&lt;&lt;username&gt;&gt;:$&lt;&lt;username_or_groupname&gt;&gt; &lt;full_path&gt;</code> <strong>Specific user and group</strong>.</li> <li><code>chown -R $USER:$USER ./</code> Default ownership.</li> </ul> <h2 id=file-commands>File Commands</h2> <ul> <li><code>df</code> show disk information</li> <li><code>df -BM</code> show disk information in MB</li> <li><code>du -sh &lt;folder or file_name&gt;</code> size of a folder or file</li> <li><code>for filename in *.mp3; do echo $filename &quot;${filename/match_pattern/to_replace}&quot;; done</code> Rename File by match. Check everyting okay by echo.</li> <li><code>for filename in *.mp3; do mv &quot;$filename&quot; &quot;${filename/match_pattern/to_replace}&quot;; done</code> Rename File by match.</li> <li><code>find &lt;full path&gt; -name &lt;DIRNAME&gt; -type f</code> <strong>Find a file</strong> in a directory recursively.</li> <li><code>find &lt;full path&gt; -name &lt;DIRNAME&gt; -type d</code> <strong>Find a directory</strong> in a directory recursively.</li> <li><code>find . -type f -name &quot;&lt;expression&gt;&quot; -delete</code> Delete file recursively match with wildcard.</li> <li><code>find &lt;DIRNAME&gt; -type f | wc -l</code> <strong>Count number of file</strong> in this directory recursively.</li> <li><code>find &lt;DIRNAME&gt; -type d | wc -l</code> <strong>Count number of directory</strong> in this directory recursively.</li> <li><code>tar -czvf &lt;new_file_name&gt;.tar.gz &lt;filename&gt;.sql</code> <strong>Compress a file</strong> or make zip</li> <li><code>tar -czvf &lt;new_file_name&gt;.tar.gz &lt;directory_name&gt;</code> <strong>Compress a directory</strong> or make zip</li> <li><code>find directory_name -type f -size +100M -exec ls -lh {} \\;</code> <strong>List files bigger</strong> than specific filesize</li> <li><code>find directory_name -type f -size +100M</code></li> <li><code>find demo/ -type f -size +20M | wc -l</code> <strong>count files bigger</strong> than specific filesize</li> <li><code>find demo/ -type f -size +10M -size -60M | wc -l</code> count files bigger than specific filesize <strong>range</strong>.</li> </ul> <h2 id=hardware-infrormation>Hardware Infrormation</h2> <ul> <li><p><code>lscpu</code> CUP info</p> </li> <li><p><code>cat /proc/cpuinfo</code> CPU Details.</p> </li> <li><p><code>cat /proc/cpuinfo | grep &#39;vendor&#39; | uniq</code> view vendor name</p> </li> <li><p><code>cat /proc/cpuinfo | grep &#39;model name&#39; | uniq</code> display model name</p> </li> <li><p><code>cat /proc/cpuinfo | grep processor | wc -l</code> count the number of processing units</p> </li> <li><p><code>cat /proc/cpuinfo | grep &#39;core id&#39;</code> show individual cores</p> </li> <li><p><code>sudo apt install hwinfo</code></p> </li> <li><p><code>hwinfo --short</code></p> </li> </ul> <h2 id=date-time>Date Time</h2> <ul> <li><p><strong>Get Time</strong> by three way.</p> <ol> <li><code>timedatectl</code></li> <li><code>date</code></li> <li><code>date &quot;+%H:%M:%S %d/%m/%y&quot;</code></li> </ol> </li> <li><p><strong>Set Date Time</strong> by three way.</p> <ol> <li><code>sudo date --set=&quot;2015-09-30 10:05:59.990&quot;</code></li> <li><code>timedatectl list-timezones</code></li> <li><code>sudo timedatectl set-timezone Asia/Dhaka</code></li> </ol> </li> </ul> <h2 id=openssh>OpenSSH</h2> <h3 id=config-file>Config File</h3> <ul> <li><code>touch ~/.ssh/config &amp;&amp; chmod 600 ~/.ssh/config</code> Create Config File</li> <li><code>vi ~/.ssh/config</code><pre><code class=language-conf>Host devs\n  HostName &lt;your&gt;\n  User &lt;username&gt;\n  Port &lt;22&gt;\n</code></pre> </li> </ul> <p>Host other_devs HostName <your> User <username> Port &lt;22&gt;</username></your></p> <pre><code>\n### .pem file to server connection\n\n- `vi id_rsa_&lt;any-name&gt;.pem` put .pem data\n- `sudo chmod 600 id_rsa_&lt;any-name&gt;.pem` set .pem file permission\n- `ssh-keygen -y -f id_rsa_&lt;any-name&gt;.pem &gt; id_rsa_&lt;any-name&gt;.pub` create .pub file from .pem file so that you can connect next time without adding .pem file\n- `ssh-add id_rsa_&lt;any-name&gt;.pem` add .pem file with your known host.\n- Set config file will be helpful\n```config\nHost &lt;any-name&gt;\n    HostName &lt;ip-address&gt;\n    User &lt;root&gt;\n    IdentityFile ~/.ssh/id_rsa_&lt;any-name&gt;.pem</code></pre><h2 id=create-a-new-sudo-user><a href=https://www.digitalocean.com/community/tutorials/how-to-create-a-sudo-user-on-ubuntu-quickstart>Create a New Sudo User</a></h2> <ul> <li><code>adduser &lt;username&gt;</code> Use the adduser command to add a new user to your system. Then insert necessary information.</li> <li><code>sudo usermod -aG sudo &lt;username&gt;</code> Use the usermod command to add the user to the sudo group.</li> </ul> <h2 id=swap-memory><a href=https://linuxhandbook.com/increase-swap-ubuntu/ >Swap Memory</a></h2> <ul> <li><p><code>sudo swapoff -a</code> <strong>disable swap memory</strong>.</p> </li> <li><p><code>sudo swapon --show</code> If the system has any configured swap</p> </li> <li><p><code>free -h</code> Totel memory free.</p> </li> <li><p><code>df -h</code> Disk space on <code>/dev/vda1</code>.</p> </li> <li><p><code>ls -lh /swapfile</code> See permission.</p> </li> <li><p><code>sudo fallocate -l 2G /swapfile</code> Set swap.</p> </li> <li><p><code>ls -lh /swapfile</code> See swap size before action.</p> </li> <li><p><code>sudo chmod 600 /swapfile</code> Set currect permission.</p> </li> <li><p><code>ls -lh /swapfile</code> See permission again.</p> </li> <li><p><code>sudo mkswap /swapfile</code> mark the file as swap space.</p> </li> <li><p><code>sudo swapon /swapfile</code> enable the swap file.</p> </li> <li><p><code>sudo swapon --show</code> verify that the swap is available</p> </li> <li><p><code>sudo swapoff -a; sudo fallocate -l 2G /swapfile; sudo chmod 600 /swapfile; sudo mkswap /swapfile; sudo swapon /swapfile</code> with <strong>single command</strong></p> </li> </ul> <h2 id=change-user-password>Change User Password</h2> <p>Set root <strong>password</strong>.</p> <pre><code class=language-bash>sudo -i\nsudo passwd</code></pre> <ul> <li><code>sudo passwd</code> To change the <strong>root password</strong></li> <li><code>passwd</code> To change your <strong>user password</strong></li> <li><code>sudo passwd USERNAME</code> To change other <strong>users password</strong></li> </ul> <h2 id=install--uninstall>Install &amp; Uninstall</h2> <ul> <li><code>sudo dpkg -i &lt;file&gt;.deb</code> Install somthing with .deb file.</li> <li><code>sudo apt-get remove &lt;application_name&gt;</code> Uninstall app</li> </ul> <p><strong>Image</strong></p> <ul> <li><code>eog &lt;imagename.*&gt;</code> Open image using terminal.</li> <li><code>sudo apt-get install libimage-exiftool-perl</code> Install it to show Image Meta data.</li> <li><code>exiftool file_name.ext</code> Show Image Meta data.</li> <li><code>exiftool -all= file_name.ext</code> Remove Image Meta data.</li> </ul> <h2 id=video-conversion>Video Conversion</h2> <h3 id=install>Install</h3> <p><code>sudo apt update; sudo apt install ffmpeg</code></p> <h3 id=actions>Actions</h3> <ul> <li><code>ffmpeg -i input.mp4 -f mp4 -vcodec libx264 -preset fast -profile:v main -acodec aac -vf scale=1920:1080 output.mp4</code> Using <strong>libx264</strong>.</li> <li><code>ffmpeg -i input.mp4 -c:v libvpx-vp9 -b:v 2M output-vp9.webm</code> Using <strong>libbpx-bp9</strong>.</li> <li><code>ffmpeg -hwaccel auto -i &quot;input.mp4&quot; -map 0:v -map 0:a -c:v hevc_nvenc -rc constqp -qp 23 -b:v OK -c:a aac -b:a 384 &quot;output.mp4&quot;</code> </li> </ul> <h2 id=burn-windows-iso>Burn Windows Iso</h2> <ul> <li>Install <strong>gparted</strong> <code>sudo apt install gparted</code>.</li> <li>Select your USB stick from the drop-down menu on the upper-right corner. My USB stick is <code>/dev/sdb</code>. Yours may be different.</li> <li>If there’s a key icon after the partition name, that means the partition is mounted. Make sure all partitions on your USB stick are <strong>unmounted</strong>. To unmount a partition, simply right-click on it and select unmount.</li> <li>Next, on the menu bar, select <strong><em>Device &gt; Create partition table</em></strong>.</li> <li>Choose <strong>GPT</strong> as the partition table type and <strong>click Apply</strong>.</li> <li>Then right-click on the unallocated space and select New to create a <strong>new partition</strong>.</li> <li>Change file system type from <strong>ext4 to fat32</strong> and click Add.</li> <li>Next, click the green check button on the toolbar to apply this operation. Once that’s done, <strong>close GParted</strong>(This is important), then find your <strong>Windows 10 ISO in file manager</strong>. Open it with disk image mounter.</li> <li>Open the mounted file system. Select all files and folders and copy them to your USB stick.</li> <li>Sometimes the file manager on Ubuntu hangs and it seems that the copy operation has stopped. Actually it’s working, just be patient. When you see a check mark, it means the copy operation has finished.</li> </ul> <h2 id=ubuntu-problem-solution>Ubuntu Problem Solution</h2> <h3 id=problem-1>Problem 1</h3> <ul> <li>Cannot execute <strong>/usr/bin/zsh:</strong> No such file or directory.</li> </ul> <p><strong>Solution</strong>:</p> <ul> <li><code>sudo chsh -s /bin/bash root</code></li> <li><code>sudo vipw</code> Open file and change default bash of user <code>&lt;user&gt;:x:0:0:&lt;user&gt;:/&lt;user&gt;:/bin/bash</code> and save.</li> </ul> <h2 id=video-to-audio-converter>Video to Audio Converter</h2> <ul> <li>Use Sound converter</li> <li>First install soundconverter</li> <li><code>sudo apt install soundconverter</code></li> <li>Change setting as your need.</li> </ul> ";e.exports=o},"5a47":function(e,t){var o="<h1 id=postgresql>Postgresql</h1> <h2 id=setup>Setup</h2> <ol> <li>Install Postgresql</li> </ol> <p><strong>update</strong> and <strong>Install</strong>.</p> <pre><code class=language-bash>sudo apt-get update\nsudo apt-get install postgresql postgresql-contrib</code></pre> <ol start=2> <li>Configration</li> </ol> <p>check <strong>status</strong></p> <pre><code class=language-sql>    service postgresql</code></pre> <p>switch to <strong>postgres user</strong></p> <pre><code class=language-bash>sudo su postgres</code></pre> <p>open postgresql <strong>shell</strong></p> <pre><code class=language-bash>psql</code></pre> <pre><code class=language-sql>\\l -- list of databases\n\\du -- list of user\nCREATE DATABASE db_name;\nALTER USER postgres WITH PASSWORD &#39;user_password&#39;; -- change password of user\nCREATE USER username WITH PASSWORD &#39;user_password&#39;; -- create new user\nALTER USER username WITH superuser; -- make super user\ndrop user username; -- remove user</code></pre> <p><strong>Open specific db</strong> with specific user.</p> <p><code>psql -h localhost -p 5432 -U &lt;username&gt; &lt;database_name&gt;;</code></p> <p><strong>delete</strong> database. First close all connection or close app if connected with this database. Open other database or create new one.</p> <pre><code class=language-sql>psql -h localhost -p 5432 -U &lt;username&gt; &lt;database_name&gt;;\nDROP DATABASE IF EXISTS database_name;\nor\ndrop database &lt;database_name&gt;;</code></pre> <p>Connect credintial <strong>pgadmin</strong></p> <pre><code class=language-sql>name: localhost\nHost: 127.0.0.1\nPost: 5432\nMaintenance DB: postgres\nusername: nayan32biswas\npassword: nayan32biswas</code></pre> <h2 id=activate>Activate</h2> <pre><code class=language-bash>activate vertualenv:\n    source root/bin/activate\npython root/lib/python3.6/site-packages/pgadmin4/pgAdmin4.py</code></pre> <h2 id=table-query>Table Query</h2> <ul> <li>\\l+ // db_size</li> <li>\\dt // show all table</li> </ul> ";e.exports=o},"5af2":function(e,t){var o="<h1 id=js>JS</h1> <h2 id=install-node>Install Node</h2> <pre><code class=language-bash>sudo apt-get install curl\ncurl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -\nsudo apt-get install -y nodejs</code></pre> <h2 id=install-yarn>Install yarn</h2> <pre><code class=language-bash>curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\necho &quot;deb https://dl.yarnpkg.com/debian/ stable main&quot; | sudo tee /etc/apt/sources.list.d/yarn.list\nsudo apt-get update;\nsudo apt-get install yarn</code></pre> <h2 id=install-npm>Install npm</h2> <pre><code class=language-bash>sudo apt-get install npm</code></pre> <h2 id=update-nodejs>Update nodejs:</h2> <pre><code class=language-bash>sudo npm cache clean -f\nsudo npm install -g n</code></pre> <h2 id=variable>Variable</h2> <h3 id=native-types>Native types</h3> <pre><code class=language-js>var one;\nlet two;\nconst three;\nlet bool = true;     // number boolean\nlet number = 1;     // number type\nlet string = &quot;two&quot;; // string type\nlet y = 123e5;      // 12300000\nlet z = 123e-5;     // 0.00123</code></pre> <h3 id=type-check>type check</h3> <pre><code class=language-js>typeof 314          // Returns &quot;number&quot;\ntypeof 3.14         // Returns &quot;number&quot;\ntypeof true         // Returns &quot;boolean&quot;\ntypeof &quot;str&quot;        // Returns &quot;string&quot;\ntypeof no_def        // Returns &quot;undefined&quot;\ntypeof {name:&#39;Name&#39;} // Returns &quot;object&quot;\ntypeof [1,2,3,4]    // Returns &quot;object&quot;\ntypeof null            // Returns &quot;object&quot;\ntypeof function myFunc(){}   // Returns &quot;function&quot;</code></pre> <h2 id=stl>STL</h2> <h3 id=array>array</h3> <pre><code class=language-js>let arr = [&quot;Saab&quot;, &quot;Volvo&quot;, &quot;BMW&quot;];\nlet custom = [keyP, arr];\narr.keys();\nArray.isArray(arr);\narr.push(&quot;FR&quot;); // arr will [..., &quot;FR&quot;]\narr.pop(); // return &quot;BMW&quot;\narr.shift(); // return &quot;Saab&quot;\narr.unshift(&quot;First&quot;, &quot;Second&quot;); // arr will [&quot;First&quot;, &quot;Second&quot;, ...]\n\narr.slice(0, 2);// return [&quot;Saab&quot;, &quot;Volvo&quot;]\narr.slice(-2, -1);// return [&quot;Volvo&quot;]\narr.slice(1);// return [&quot;Volvo&quot;, &quot;BMW&quot;]\narr.slice(-1);// return [&quot;BMW&quot;]\n\narr.sort();\narr.reverse();</code></pre> <h3 id=object>Object</h3> <pre><code class=language-js>let keyP = {firstName:&quot;First&quot;, lastName:&quot;Last&quot;};</code></pre> <h2 id=conversion>Conversion</h2> <pre><code class=language-js>let x = 16 + &quot;str&quot;; // =&gt; &quot;16str&quot;\nlet x = &quot;str&quot; + 16; // =&gt; &quot;str16&quot;</code></pre> <h2 id=string>String</h2> <pre><code class=language-js>&quot;\\b&quot;    // Backspace\n&quot;\\f&quot;    // Form Feed\n&quot;\\n&quot;    // New Line\n&quot;\\r&quot;    // Carriage Return\n&quot;\\t&quot;    // Horizontal Tabulator\n&quot;\\v&quot;    // Vertical Tabulator\nlet str = &quot;Please locate where &#39;locate&#39; occurs!&quot;;\nlet sln = str.length;\n\nlet pos, ascii, res, n, demo;\n\nstr.charAt(0);                              // return &quot;P&quot;\nstr.charCodeAt(0);                          // return 80\nstr.indexOf(&quot;locate&quot;);                      // return 7\nstr.indexOf(&quot;locate&quot;, 15);                  // return 21\nstr.lastIndexOf(&quot;locate&quot;);                  // return 21\nstr.lastIndexOf(&quot;nai&quot;);                     // return -1\nstr.lastIndexOf(&quot;locate&quot;, 15);              // return 7\n// search take &quot;regular expressions&quot;.\nstr.search(&quot;locate&quot;);                       // return 7\n// substring() cannot accept negative indexes.\nstr.substring(7, 13);                       // return &quot;locate&quot;\n// The difference is that the second parameter specifies the length of the extracted part.\nstr.substr(7, 6);                           // return &quot;locate&quot;\nstr.substr(7);                              // return &quot;locate where &#39;locate&#39; occurs!&quot;\nstr.substr(-4);                             // return &quot;urs!&quot;\nstr.replace(&quot;locate&quot;, &quot;change hoyche&quot;);     // return &quot;Please change hoyche where &#39;locate&#39; occurs!&quot;\nstr.replace(&quot;locate&quot;, &quot;change hoyche&quot;);     // return &quot;Please change hoyche where &#39;locate&#39; occurs!&quot;\n// regular expression with an /i flag (insensitive):\nstr.replace(/locate/i, &quot;change hoyche&quot;);    // return &quot;Please change hoyche where &#39;locate&#39; occurs!&quot;\n// regular expression with a /g flag (global match):\nstr.replace(/locate/g, &quot;change hoyche&quot;);    // return &quot;Please change hoyche where &#39;change hoyche&#39; occurs!&quot;\nstr.toUpperCase();                          // return &quot;PLEASE LOCATE WHERE &#39;LOCATE&#39; OCCURS!&quot;\nstr.toLowerCase();                          // return &quot;please locate where &#39;locate&#39; occurs!&quot;\nstr.concat(&quot; &quot;, str);                       // return &quot;Please locate where &#39;locate&#39; occurs! Please locate where &#39;locate&#39; occurs!&quot;\n&quot;Hello&quot;.concat(&quot; &quot;, &quot;World!&quot;);              // return &quot;Hello World!&quot;\nstr.trim();                                 // return &quot;Please locate where &#39;locate&#39; occurs!&quot;\nstr.padStart(4,0);                          // return &quot;Please locate where &#39;locate&#39; occurs!&quot;\nstr.padEnd(4,0);                            // return &quot;Please locate where &#39;locate&#39; occurs!&quot;\nstr.split(&quot;&quot;);                              // [ &#39;P&#39;,&#39;l&#39;,&#39;e&#39;,&#39;a&#39;,&#39;s&#39;,&#39;e&#39;,&#39; &#39;,&#39; ..., &#39;!&#39;]  \nstr.split(&quot; &quot;);                             // [ &#39;Please&#39;, &#39;locate&#39;, &#39;where&#39;, &#39;&#39;\\&#39;locate\\&#39;&#39;, &#39;occurs!&#39; ]\nstr.split(&quot; &quot;).join();                        // &#39;Please locate where \\&#39;locate\\&#39; occurs!&#39;</code></pre> <h2 id=manipulation>Manipulation</h2> <pre><code class=language-js>let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nlet obj = {first: &quot;one&quot;, second: &quot;two&quot;, third: 3};\nfunction isPrime(num) {\n    for (let i = 2; num &gt; i; i++)\n        if (num % i == 0)\n          return false;\n    return num &gt; 1;\n}</code></pre> <h3 id=for-loop>For loop</h3> <pre><code class=language-js>for (;;) {  break; }\nfor (let i = 0; i &lt; 5; i++) {  console.log(i); }\nfor (let value in arr) { console.log(value); }\nfor (let key in obj) { console.log(obj[key]); }</code></pre> <h3 id=map>Map</h3> <pre><code class=language-js>arr.map(Math.sqrt);\narr.map(value =&gt; value*value);</code></pre> <h3 id=filter>Filter</h3> <pre><code class=language-js>arr.filter(isPrime); // return [ 2, 3, 5, 7 ]\narr.filter(value =&gt; value%2==0); // return [2, 4, 6, 8, 10]</code></pre> <h3 id=reducer>Reducer</h3> <h2 id=oop>OOP</h2> <h2 id=extra-function>Extra function</h2> <ul> <li><strong>Get location</strong><pre><code class=language-js>function getSeason(latitude, month) {\n  if (2 &lt; month &amp;&amp; month &lt; 9) {\n      return latitude &gt; 0 ? &quot;winter&quot; : &quot;summer&quot;;\n  }\n  else {\n      console.log(&quot;hello&quot;, latitude);\n      return latitude &gt; 0 ? &quot;summer&quot; : &quot;winter&quot;;\n  }\n}</code></pre> </li> <li><strong>Get season</strong><pre><code class=language-js>function main() {\n  let latitude = null, longitude = null, errorMessage=null;\n  window.navigator.geolocation.getCurrentPosition(\n      position =&gt;  latitude= position.coords.latitude, longitude= position.coords.longitude ,\n      error =&gt;  errorMessage = error.message\n  );\n  console.log(new Date().getMonth())\n  var season = getSeason(this.state.latitude, new Date().getMonth());\n}</code></pre> </li> </ul> ";e.exports=o},"5c0b":function(e,t,o){"use strict";o("9c0c")},"5f74":function(e,t){var o="<h1 id=create-a-linux-vm-on-google-cloud-platform-gcp><a href=https://console.cloud.google.com/compute/instances>Create a Linux VM on Google Cloud Platform (GCP)</a></h1> <h2 id=creating-instance>Creating Instance</h2> <ol> <li>Compute Engine -&gt; VM instances (It will tace some sec or minute)</li> <li>Create<ol> <li>Select Region - Select Zone(Optional)</li> <li>Boot disk -&gt; Change -&gt; Ubuntu(Assign memory if nedded)</li> <li>(Optional) Management<ol> <li>Preemptibility(It will remain 24 hour one after start) very low cost.</li> </ol> </li> <li>Save or Create</li> </ol> </li> </ol> <h2 id=ssh-to-instance>SSH to Instance</h2> <ol> <li>Compute Engine -&gt; VM instances</li> <li>Settings -&gt; Metadata<ol> <li>SSH Keys<ol> <li>Add or Edit</li> <li>Copy You pubkey <code>cat ~/.ssh/id_rsa.pub</code></li> <li>Save</li> </ol> </li> </ol> </li> <li>ssh nayan32biswas@<extarnal_id></extarnal_id></li> </ol> <h2 id=connect-domain>Connect Domain</h2> <ol> <li>VPC Network -&gt; Extarnal IP Addresses<ol> <li>Type make <strong>static</strong></li> </ol> </li> <li>Newtwork Services -&gt; Cloud DNS<ol> <li>Enable</li> <li>Create Zone<ol> <li>public</li> <li>Name -&gt; any name</li> <li>DNS name -&gt; <strong>yourdomain.com</strong></li> <li>Descirption -&gt; any</li> <li>Create</li> <li>ADD RECORD SET<ol> <li>DNS name <code>.yourdomain.com</code></li> <li>ExtarnalIP</li> </ol> </li> <li>ADD RECORD SET<ol> <li>DNS name <code>www.yourdomain.com</code></li> <li>ExtarnalIP</li> </ol> </li> <li>Setup <strong>NAMESERVERS</strong> on your domain provider<ol> <li>ns-cloud-nn.googledomains.com</li> <li>ns-cloud-nn.googledomains.com</li> <li>ns-cloud-nn.googledomains.com</li> <li>ns-cloud-nn.googledomains.com</li> </ol> </li> </ol> </li> </ol> </li> </ol> <h1 id=django-on-google-cloud><a href=https://cloud.google.com/python/django/appengine/ >Django on Google Cloud</a></h1> <ol> <li><p><a href=https://console.cloud.google.com/projectselector2/home/dashboard>Create Project</a></p> </li> <li><p><a href=https://console.cloud.google.com/flows/enableapi>Enable API</a></p> </li> <li><p><a href=https://cloud.google.com/sdk/docs>Install and initialize the Cloud SDK</a></p> <ol> <li><code>echo &quot;deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main&quot; | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list</code></li> <li><code>sudo apt-get install apt-transport-https ca-certificates gnupg</code></li> <li><code>curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -</code></li> <li><code>sudo apt-get update &amp;&amp; sudo apt-get install google-cloud-sdk</code></li> <li><code>sudo apt-get install google-cloud-sdk-app-engine-python</code></li> <li><code>gcloud init</code><ol> <li>Login with mail and select your created project.</li> </ol> </li> </ol> </li> <li><p><code>gcloud auth application-default login</code></p> </li> <li><p><code>git clone https://github.com/GoogleCloudPlatform/python-docs-samples.git &amp;&amp; cd python-docs-samples/appengine/standard_python37/django</code></p> </li> <li><p><code>gcloud services enable sqladmin</code> <strong>Inside project files</strong></p> </li> <li><p>Installing the Cloud SQL Proxy</p> <ol> <li><code>wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy</code> <strong>Inside project files</strong></li> <li><code>chmod +x cloud_sql_proxy</code></li> </ol> </li> <li><p><a href=https://cloud.google.com/sql/docs/mysql/create-instance>Creating a Cloud SQL instance</a></p> <ol> <li><a href=https://console.cloud.google.com/sql/instances>Go to the Cloud SQL Instances page</a><ol> <li>Create Instance</li> <li>Select Database</li> <li>Fillup all fields</li> <li>Create user from database instance.</li> <li>Create data base database instance.</li> </ol> </li> <li><code>gcloud sql instances describe [YOUR_INSTANCE_NAME]</code> copy <strong>connectionName</strong> from information</li> </ol> </li> <li><p>Initializing your Cloud SQL instance</p> <ol> <li><p>For Mysql</p> <ul> <li><code>./cloud_sql_proxy -instances=&quot;[YOUR_INSTANCE_CONNECTION_NAME]&quot;=tcp:3306</code></li> <li>If you get this message <strong>listen tcp 127.0.0.1:3306: bind: address already in use</strong> Then stop mysql by</li> <li><code>sudo netstat -nlpt |grep 3306</code></li> <li><code>sudo service mysql stop</code></li> </ul> </li> <li><p>For PG</p> <ul> <li><code>./cloud_sql_proxy -instances=&quot;[YOUR_INSTANCE_CONNECTION_NAME]&quot;=tcp:5432</code><ul> <li>If you get this message <strong>listen tcp 127.0.0.1:5432: bind: address already in use</strong> Then stop mysql by</li> <li><code>sudo lsof -i :5432</code></li> <li><code>sudo kill &lt;pid&gt;</code></li> </ul> </li> </ul> </li> <li><p><strong>Take it as running</strong> This will effect on remote server.</p> </li> </ol> </li> <li><p>Running the app on your local computer</p> </li> <li><p>Project setup.</p> <ol> <li>On <code>project/main.py</code><pre><code class=language-py> from mysite.wsgi import application as app</code></pre> </li> <li>On <code>project/app.yaml</code><pre><code class=language-yaml>  runtime: python37\n  handlers:\n  - url: /static\n    static_dir: static/\n  - url: /.*\n    script: auto\n  env_variables:\n     DJANGO_SETTINGS_MODULE: mysite.settings.prod</code></pre> </li> <li>For Database On production<pre><code class=language-py>DATABASES = {\n  &#39;default&#39;: {\n     &#39;ENGINE&#39;: &#39;django.db.backends.postgresql&#39;,\n     &#39;HOST&#39;: &#39;/cloudsql/[YOUR_INSTANCE_CONNECTION_NAME]&#39;,\n     &#39;NAME&#39;: &#39;[DATABASE_NAME]&#39;,\n     &#39;USER&#39;: &#39;[DATABASE_USER]&#39;,\n     &#39;PASSWORD&#39;: &#39;[DATABASE_PASSWORD]&#39;\n  }\n}</code></pre> </li> </ol> </li> <li><p>Deploying the app to the App Engine standard environment</p> <ol> <li><code>python manage.py collectstatic</code></li> <li><code>gcloud app deploy</code> This also used for update or upgrade project. After upgrading make sure you remove previous version.<ol> <li><code>6</code> set server location</li> <li><code>y</code> to continue.</li> </ol> </li> <li><code>gcloud app browse</code> To open your app on browser.</li> </ol> </li> </ol> ";e.exports=o},"61ec":function(e,t){var o="<h1 id=django>Django</h1> <h2 id=common-command>Common Command</h2> <pre><code class=language-bash>pip install Django\ndjango-admin startproject myproject\npython manage.py startapp myapp\npython manage.py makemigrations\npython manage.py migrate\npython manage.py createsuperuser\npython manage.py runserver\npython manage.py collectstatic\npython manage.py changepassword &lt;user_name&gt;</code></pre> <h2 id=models>Models</h2> <h3 id=model-def>Model def</h3> <pre><code class=language-py>from django.db import models\nfrom django.db.models import Count\nfrom django.db.models import Prefetch\nfrom django.db.models.functions import Lower\n\nclass Blog(models.Model):\n    name = models.CharField(max_length=100)\n    tagline = models.TextField()\n\nclass Author(models.Model):\n    name = models.CharField(max_length=200)\n    email = models.EmailField()\n\nclass Entry(models.Model):\n    blog = models.ForeignKey(Blog, on_delete=models.CASCADE)\n    headline = models.CharField(max_length=255)\n    body_text = models.TextField()\n    pub_date = models.DateField()\n    mod_date = models.DateField()\n    authors = models.ManyToManyField(Author)\n    number_of_comments = models.IntegerField()\n    number_of_pingbacks = models.IntegerField()\n    rating = models.IntegerField()\n\nclass Blog(models.Model):\n    name = models.CharField(max_length=100)\n    tagline = models.TextField()\n\nclass Author(models.Model):\n    name = models.CharField(max_length=200)\n    email = models.EmailField()\n\nclass Entry(models.Model):\n    blog = models.ForeignKey(Blog, on_delete=models.CASCADE)\n    headline = models.CharField(max_length=255)\n    body_text = models.TextField()\n    pub_date = models.DateField()\n    mod_date = models.DateField()\n    authors = models.ManyToManyField(Author)\n    number_of_comments = models.IntegerField()\n    number_of_pingbacks = models.IntegerField()\n    rating = models.IntegerField()</code></pre> <h3 id=save--update>Save &amp; Update</h3> <pre><code class=language-py>b = Blog(name=&#39;Beatles Blog&#39;, tagline=&#39;All the latest Beatles news.&#39;)\nb.save()  # Django doesn’t hit the database until you explicitly call save()\n\nentry = Entry.objects.get(pk=1)\ncheese_blog = Blog.objects.get(name=&quot;Cheddar Talk&quot;)\nentry.blog = cheese_blog\nentry.save()\n\njoe = Author.objects.create(name=&quot;Joe&quot;)\nentry.authors.add(joe)\n\n# To add multiple records to a ManyToManyField in one go, include multiple arguments in the call to add()\njohn = Author.objects.create(name=&quot;John&quot;)\npaul = Author.objects.create(name=&quot;Paul&quot;)\nentry.authors.add(john, paul, ...)</code></pre> <h3 id=get-or-filter>Get or Filter</h3> <pre><code class=language-py>def filter_option():\n    # here somthing i means case in sensetive\n    (__exact, __iexact) \n    (__contains, __icontains)\n\ndef all():\n    Entry.objects.all()\n    entry_list = list(Entry.objects.all())\n\ndef reverse():\n    my_queryset.reverse()[:5]\n\ndef filter():\n    Entry.objects.filter(pub_date__year=2006)\n    # With the default manager class, it is the same as:\n    Entry.objects.all().filter(pub_date__year=2006)\n    Entry.objects.filter(pub_date__year=2005).order_by(&#39;-pub_date&#39;, &#39;headline&#39;)\n    Blog.objects.filter(entry__headline__contains=&#39;Lennon&#39;, entry__pub_date__year=2008)\n\ndef order_by():\n    Entry.objects.order_by(&#39;?&#39;)  # randomly get data. very slow.\n    Entry.objects.order_by(&#39;blog__name&#39;, &#39;headline&#39;)  # first order by blog__name and then headline\n    Entry.objects.order_by(Coalesce(&#39;summary&#39;, &#39;headline&#39;).asc())\n    Entry.objects.order_by(Coalesce(&#39;summary&#39;, &#39;headline&#39;).desc())\n\n    Entry.objects.order_by(Lower(&#39;headline&#39;).desc())  # here Lower make all to lowercase of headline field and then order them by condition\n\n\ndef exclude():\n    Entry.objects.exclude(pub_date__gt=datetime.date(2005, 1, 3), headline=&#39;Hello&#39;)\n    SELECT * WHERE NOT(pub_date &gt; &#39;2005-1-3&#39; AND headline=&#39;Hello&#39;)\n\n    Entry.objects.exclude(pub_date__gt=datetime.date(2005, 1, 3)).exclude(headline=&#39;Hello&#39;)\n    SELECT * WHERE NOT pub_date &gt; &#39;2005-1-3&#39; AND NOT headline = &#39;Hello&#39;\n\ndef annotate():\n    q = Blog.objects.annotate(Count(&#39;entry&#39;))  # read data derectly\n    name_of_first_blog_entry = q[0].name\n    number_of_entries_on_the_first_blog = q[0].entry__count\n\ndef distinct():\n    Author.objects.distinct()\n    Entry.objects.order_by(&#39;blog&#39;).distinct(&#39;blog&#39;)\n    Entry.objects.filter(pub_date__year=2005).order_by(&#39;-pub_date&#39;, &#39;headline&#39;).distinct(&#39;blog&#39;)\n\ndef values():\n    Blog.objects.values()\n    Blog.objects.filter(name__startswith=&#39;Beatles&#39;).values()\n    Blog.objects.values(lower_name=Lower(&#39;name&#39;))  # &lt;QuerySet [{&#39;lower_name&#39;: &#39;beatles blog&#39;}]&gt;\n    Blog.objects.values(&#39;name__lower&#39;)  # &lt;QuerySet [{&#39;name__lower&#39;: &#39;beatles blog&#39;}]&gt;\n\ndef values_list():\n    Entry.objects.values_list(&#39;id&#39;, &#39;headline&#39;)  # &lt;QuerySet [(1, &#39;First entry&#39;), ...]&gt;\n    Entry.objects.values_list(&#39;id&#39;, Lower(&#39;headline&#39;))  # &lt;QuerySet [(1, &#39;first entry&#39;), ...]&gt;\n    Entry.objects.values_list(&#39;id&#39;).order_by(&#39;id&#39;)  # &lt;QuerySet[(1,), (2,), (3,), ...]&gt;\n    Entry.objects.values_list(&#39;id&#39;, flat=True).order_by(&#39;id&#39;)  # &lt;QuerySet [1, 2, 3, ...]&gt;\n    Author.objects.values_list(&#39;name&#39;, &#39;entry__headline&#39;)  # &lt;QuerySet [(&#39;Noam Chomsky&#39;, &#39;Impressions of Gaza&#39;), (&#39;Don Quixote&#39;, None), ...]&gt;\n\ndef union():\n    qs1 = Author.objects.values_list(&#39;name&#39;)\n    qs2 = Entry.objects.values_list(&#39;headline&#39;)\n    qs3 = qs1.union(qs2).order_by(&#39;name&#39;)\n\n    qs1.intersection(qs2, qs3)\n\n    qs1.difference(qs2, qs3)\n\ndef select_related():\n    # regular work\n    e = Entry.objects.get(id=5)  # Hits the database.\n    b = e.blog  # Hits the database again to get the related Blog object.\n\n    # using select_related\n    e = Entry.objects.select_related(&#39;blog&#39;).get(id=5)  # Hits the database.\n    b = e.blog  # Doesn&#39;t hit the database, because e.blog has been prepopulated # in the previous query.\n\n    e = Entry.objects.select_related(&#39;blog&#39;, &#39;other_rlated_models&#39;, ...).get(id=5)\n\n    # Other example\n    # Hits the database with joins to the author and hometown tables.\n    b = Book.objects.select_related(&#39;author__hometown&#39;).get(id=4)\n    p = b.author         # Doesn&#39;t hit the database.\n    c = p.hometown       # Doesn&#39;t hit the database.\n\n    # Without select_related()...\n    b = Book.objects.get(id=4)  # Hits the database.\n    p = b.author         # Hits the database.\n    c = p.hometown       # Hits the database.\n\ndef prefetch_related():  # very complex system but fast.\n    class Topping(models.Model):\n        name = models.CharField(max_length=30)\n\n    class Pizza(models.Model):\n        name = models.CharField(max_length=50)\n        toppings = models.ManyToManyField(Topping)\n\n    Pizza.objects.all().prefetch_related(&#39;toppings&#39;)  # use prefetch_related when we aree using manyTomany relation.\n    Restaurant.objects.prefetch_related(Prefetch(&#39;pizzas__toppings&#39;))\n    Pizza.objects.prefetch_related(Prefetch(&#39;restaurants&#39;, queryset=Restaurant.objects.select_related(&#39;best_pizza&#39;)))\n\n    vegetarian_pizzas = Pizza.objects.filter(vegetarian=True)\n    Restaurant.objects.prefetch_related(Prefetch(&#39;pizzas&#39;, to_attr=&#39;menu&#39;), Prefetch(&#39;pizzas&#39;, queryset=vegetarian_pizzas, to_attr=&#39;vegetarian_menu&#39;))\n\n    vegetarian_pizzas = Pizza.objects.filter(vegetarian=True)\n    Restaurant.objects.prefetch_related(Prefetch(&#39;pizzas&#39;, queryset=vegetarian_pizzas, to_attr=&#39;vegetarian_menu&#39;),     &#39;vegetarian_menu__toppings&#39;)\n\n\ndef annotate_vs_values():\n    Blog.objects.values(&#39;entry__authors&#39;, entries=Count(&#39;entry&#39;))  # &lt;QuerySet [{&#39;entry__authors&#39;: 1, &#39;entries&#39;: 20}, {&#39;entry__authors&#39;: 1, &#39;entries&#39;: 13}]&gt;\n    Blog.objects.values(&#39;entry__authors&#39;).annotate(entries=Count(&#39;entry&#39;))  # &lt;QuerySet [{&#39;entry__authors&#39;: 1, &#39;entries&#39;: 33}]&gt;\n\n\ndef annotate_with_values():\n    Blog.objects.values(&#39;entry__authors__name__lower&#39;).annotate(entries=Count(&#39;entry&#39;))  # &lt;QuerySet [{&#39;entry__authors__name__lower&#39;: &#39;test author&#39;, &#39;entries&#39;: 33}]&gt;\n    Blog.objects.values(entry__authors__name__lower=Lower(&#39;entry__authors__name&#39;)).annotate(entries=Count(&#39;entry&#39;))  # &lt;QuerySet [{&#39;entry__authors__name__lower&#39;: &#39;test author&#39;, &#39;entries&#39;: 33}]&gt;\n    Blog.objects.annotate(entry__authors__name__lower=Lower(&#39;entry__authors__name&#39;)).values(&#39;entry__authors__name__lower&#39;).annotate(entries=Count(&#39;entry&#39;))  # &lt;QuerySet [{&#39;entry__authors__name__lower&#39;: &#39;test author&#39;, &#39;entries&#39;: 33}]&gt;\n\n\ndef select_related_with_filter():\n    Entry.objects.filter(pub_date__gt=timezone.now()).select_related(&#39;blog&#39;)</code></pre> <h1 id=websocket>Websocket</h1> <pre><code class=language-bash>pip install -U channels</code></pre> <pre><code class=language-python>#  push_notifications/settings.py\nINSTALLED_APPS = (\n    ...\n    &#39;channels&#39;,\n    ...\n)\nASGI_APPLICATION = &quot;push_notificationios.routing.application&quot;\n\n# channel configuration\nCHANNEL_LAYERS = {\n    &quot;default&quot;: {\n        &quot;BACKEND&quot;: &quot;channels_redis.core.RedisChannelLayer&quot;,\n        &quot;CONFIG&quot;: {\n            &quot;hosts&quot;: [(&quot;127.0.0.1&quot;, 6379)],\n        },\n    },\n}</code></pre> <pre><code class=language-python>#  push_notifications/routing.py\nfrom channels.auth import AuthMiddlewareStack\nfrom channels.routing import ProtocolTypeRouter, URLRouter\nfrom accounts.websocket import routing \n\napplication = ProtocolTypeRouter({\n    &#39;websocket&#39;: AuthMiddlewareStack(\n        URLRouter(routing.websocket_urlpatterns)\n    ),\n})</code></pre> <pre><code class=language-python>#  accounts/websocket/routing.py\nfrom django.urls import re_path\nfrom .consumers import ChatConsumer\nwebsocket_urlpatterns = [\n    re_path(r&#39;ws/chat/(?P&lt;chat_room&gt;\\w+)/$&#39;, ChatConsumer),\n]</code></pre> <p><strong>Backend Part</strong></p> <pre><code class=language-python>#  accounts/websocket/consumers.py\nimport jwt\nimport json\nimport datetime\nfrom django.conf import settings\nfrom django.contrib.auth import get_user_model\nfrom channels.consumer import AsyncConsumer\nfrom channels.db import database_sync_to_async\n\nfrom accounts.models import Message\nfrom accounts.serializers import MessageSerializer\n\nUser = get_user_model()\n\n&quot;&quot;&quot;\nto use socket IO use &lt;&lt;AsyncConsumer&gt;&gt; to work asynchronous.\nif we use &lt;&lt;await&gt;&gt; then parrent function should be &lt;&lt;async&gt;&gt;\nMust use database_sync_to_async and use as decorator to read something from database. \nAnd use async and await when we called database_sync_to_async decorator function.\n&quot;&quot;&quot;\n\n\nclass ChatConsumer(AsyncConsumer):\n    async def send_websocket_data(self,  data):\n        await self.send({&quot;type&quot;: &quot;websocket.send&quot;, &quot;text&quot;: json.dumps(data)})\n\n    # build in function\n    async def websocket_connect(self, event):\n        await self.send({&quot;type&quot;: &quot;websocket.accept&quot;, &quot;token&quot;: &quot;token&quot;})\n        self.user = None\n        self.chat_room = self.scope[&quot;url_route&quot;][&quot;kwargs&quot;][&quot;chat_room&quot;]\n        self.sender, self.receiver = self.chat_room.split(&quot;__&quot;)\n\n        await self.channel_layer.group_add(self.chat_room, self.channel_name)\n        send_data = {&quot;message&quot;: &quot;ChatRoom created&quot;}\n        await self.send_websocket_data(send_data)\n\n    def extract_user(self, token):\n        if token:\n            try:\n                payload = jwt.decode(\n                    token,\n                    settings.SECRET_KEY,\n                    algorithms=[settings.JWT_ALGORITHM]\n                )\n            except (jwt.DecodeError, jwt.ExpiredSignatureError):\n                return ValueError({&#39;message&#39;: &#39;Token is invalid&#39;}, status=400)\n            username = payload[&#39;username&#39;]\n            return username\n        return None\n\n    async def check_auth(self, headers):\n        if headers:\n            token = headers.get(&quot;token&quot;)\n        self.username = self.extract_user(token)\n        if (self.username == self.receiver):\n            self.sender, self.receiver = self.receiver, self.sender\n        self.user = await self.get_user(self.username)\n        self.receiver_user = await self.get_user(self.receiver)\n\n    # build in function\n    # this function called one time when some message onthe room\n    async def websocket_receive(self, event):\n        received_data = event.get(&quot;text&quot;)\n        if received_data is not None:\n            received_dict = json.loads(received_data)\n            await self.check_auth(received_dict.get(&quot;headers&quot;))\n            if self.user is not None and received_dict.get(&quot;data&quot;):\n                message = received_dict.get(&quot;data&quot;).get(&quot;message&quot;)\n\n                message_data = await self.create_message(message)\n                message_data[&quot;__type__&quot;] = &quot;MESSAGE&quot;\n\n                await self.channel_layer.group_send(\n                    self.chat_room,\n                    {\n                        &quot;type&quot;: &quot;chat_message&quot;,\n                        &quot;send_data&quot;: message_data\n                    }\n                )\n\n    # this is user define function. called based on type when type==chat_message\n    # this function call multiple time based on number of user on the room\n    # and assigned data change based on user data\n    async def chat_message(self, event):\n        send_data = event.get(&quot;send_data&quot;)\n        await self.send_websocket_data(send_data)\n\n    # build in function\n    async def websocket_disconnect(self, event):\n        print(&quot;disconnect&quot;, event)\n\n    # this remove too many request or memory loss or something bad\n    @database_sync_to_async\n    def get_message(self, other_user):\n        return other_user\n\n    @database_sync_to_async\n    def get_user(self, username):\n        user = User.objects.filter(username=username).first()\n        return user\n\n    @database_sync_to_async\n    def create_message(self, message):\n        if len(message) and self.user != self.receiver_user:\n            message_instance = Message.objects.create(\n                receiver=self.receiver_user,\n                sender=self.user,\n                message=message\n            )\n            data = MessageSerializer(message_instance).data\n            return data</code></pre> <p><strong>Front End part</strong></p> <pre><code class=language-js>\nimport React, { Component } from &#39;react&#39;\nimport { connect } from &#39;react-redux&#39;\n\nimport store from &quot;../../store&quot;\nimport { FETCH_NEW_MESSAGE } from &quot;../../store/types&quot;\nimport { wsSocket, wsSendMessage } from &quot;../../store/actions/webSocketActions&quot;\nimport { fetchMessageList, sendMessage } from &quot;../../store/actions/messageActions&quot;\n\nimport MessageList from &quot;./MessageList&quot;\n\n\n\nexport class Message extends Component {\n    state = {\n        data: {\n            message: &quot;&quot;\n        },\n        URL: `ws://127.0.0.1:8000/ws/chat/nayan/`\n    }\n    getAuthToken = () =&gt; {\n        const token = localStorage.getItem(&#39;auth_token&#39;);\n        return token ? token : &quot;&quot;;\n    }\n    componentDidMount() {\n        const users = [this.props.auth_username, this.props.username]\n        users.sort()\n        const chatRoom = `${users[0]}__${users[1]}`\n        const URL = `ws://127.0.0.1:8000/ws/chat/${chatRoom}/`\n\n        // console.log(URL)\n\n        this.setState({ URL })\n        // const token = this.getAuthToken()\n        this.ws = new WebSocket(URL)\n\n        this.props.fetchMessageList(this.props.username)\n        // ------------------------------------------------\n        this.ws.onopen = () =&gt; {\n            console.log(&#39;connected&#39;)\n        }\n        this.ws.onmessage = event =&gt; {\n            let data = event.data\n            data = JSON.parse(data)\n            // console.log(data)\n            if (data.__type__ &amp;&amp; data.__type__ === &quot;MESSAGE&quot;) {\n                delete data[&quot;__type__&quot;]\n                store.dispatch({ type: FETCH_NEW_MESSAGE, payload: data })\n            }\n        }\n        this.ws.onclose = () =&gt; {\n            console.log(&#39;disconnected&#39;)\n            this.setState({ ws: new WebSocket(URL) })\n        }\n    }\n    handelMessageChange = (event) =&gt; {\n        this.setState({\n            data: {\n                ...this.state.data,\n                message: event.target.value\n            }\n        })\n    }\n    onSubmit = (event) =&gt; {\n        event.preventDefault()\n        const sendData = {\n            data: { ...this.state.data },\n            headers: { &quot;token&quot;: this.getAuthToken() }\n        }\n        // this.props.sendMessage(this.props.username, sendData)\n        this.ws.send(JSON.stringify(sendData))\n        this.setState({\n            data: {\n                ...this.state.data,\n                message: &quot;&quot;\n            }\n        })\n    }\n    render() {\n        return (\n            &lt;div className=&quot;container&quot;&gt;\n                &lt;div&gt;\n                    &lt;MessageList\n                        messageList={this.props.messageList}\n                    /&gt;\n                &lt;/div&gt;\n                &lt;form onSubmit={this.onSubmit}&gt;\n                    &lt;div className=&quot;form-group&quot;&gt;\n                        &lt;textarea\n                            onChange={this.handelMessageChange}\n                            value={this.state.data.message}\n                            type=&quot;text&quot; className=&quot;form-control&quot; id=&quot;message&quot; placeholder=&quot;message&quot;\n                        /&gt;\n                    &lt;/div&gt;\n                    &lt;button onClick={this.onSubmit}&gt;Send&lt;/button&gt;\n                &lt;/form&gt;\n            &lt;/div&gt;\n        )\n    }\n}\n\nconst mapStateToProps = (state) =&gt; {\n    return {\n        auth_username: state.auth.user.username,\n        messageList: state.message.messageList\n    }\n}\n\nconst mapDispatchToProps = {\n    wsSocket,\n    wsSendMessage,\n    sendMessage,\n    fetchMessageList,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Message)\n</code></pre> <h2 id=scale-up-django-app>Scale up Django app</h2> <h3 id=basic-scaling>Basic Scaling</h3> <ol> <li>Optimize query</li> <li>Install Memcached. Check that caching is working by returning current timestamp.<ul> <li>Django caching work by looking at cookis header.</li> </ul> </li> <li>Install <strong>New Ralic</strong> or something that will check <strong>server status</strong>.</li> <li>Add <strong>redis &amp; celery</strong> for <strong>long processing</strong>. And install <strong>celery Flower</strong> To monitor it.<h3 id=advence-scaling>Advence Scaling</h3> </li> <li>Separate PG_DB server and add PGBouncer.<ul> <li>Add more DB server if needed. Add implement <strong>streming replication</strong>.</li> </ul> </li> <li>Add separate server for executig Async processing.</li> <li>Separate Nginx server from app server.</li> <li>For further improvement add multiple app server (App server only have caching and code).</li> </ol> <h2 id=problem--solution>Problem &amp; Solution</h2> <ol> <li>Problem: CSRF or Forbiden: If you login with admin in django admin and you try to registration with same browse you may get invalid <csrftoken> or <forbiden> error.</forbiden></csrftoken></li> </ol> <p><strong>Solution</strong> logout from django admin.</p> <ol start=2> <li>Problem: Redis error: AttributeError: &#39;str&#39; object has no attribute &#39;items&#39;.</li> </ol> <p><strong>Solution</strong> install letest celery.</p> <ol start=3> <li><p>Problem &amp; Solution Serializer error: If you set somting editable=Flase in model then serializer do not return this field as validate data or data.</p> </li> <li><p>Problem No module named pkg_resources:</p> </li> </ol> <p><strong>Solution</strong> pip uninstall -y setuptools pip install setuptools==39.1.0</p> ";e.exports=o},7905:function(e,t){var o="<h1 id=vue>VUE</h1> <h2 id=setup>Setup</h2> <ul> <li><code>sudo yarn add -g @vue/cli @vue/cli-service-global</code> Install vue ci</li> <li><code>vue --version</code></li> <li><strong>Create Project By CLI</strong><ul> <li><code>vue create &lt;appname&gt;</code></li> <li>Select linter and NPM or YEARN</li> </ul> </li> <li><strong>Create Project By UI</strong><ul> <li><code>vue ui</code> It will open tab on your default browser.</li> </ul> </li> <li><code>yarn run serve</code> To start the project.</li> </ul> ";e.exports=o},"7e64":function(e,t){var o="<h1 id=android-studio>Android Studio</h1> <h2 id=installation-linux>Installation Linux</h2> <ul> <li><code>sudo apt install openjdk-11-jdk</code></li> <li><code>sudo snap install android-studio --classic</code></li> </ul> ";e.exports=o},8221:function(e,t){var o="<h1 id=setup-ubuntu>Setup Ubuntu</h1> <h2 id=setup-bash-promt-from-configur_terminalmd>Setup bash promt from configur_terminal.md</h2> <h2 id=install-chrome>Install Chrome</h2> <pre><code class=language-bash>wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\nsudo dpkg -i google-chrome-stable_current_amd64.deb</code></pre> <h2 id=install-synaptic-package-manager-from-ubuntu-software-center>install Synaptic Package Manager From ubuntu Software Center</h2> <p>In Synaptic install this packages:</p> <pre><code class=language-bash>ubuntu-restricted-extra\nopenjdk-8-jre\napt-xapian-index\nintel-microcode or amd64-microcode\ndconf-editor\ngnome-tweak-tool\nnautilus-dropbox\nchrome-gnome-shell</code></pre> <p>Then search and run full installtion process.</p> <ul> <li>Add extention <a href=https://extensions.gnome.org/ >chrome-gnome-shell</a> inside browser.</li> <li>Add <strong>Dash to Panel</strong>.</li> </ul> <h2 id=minimize-dash-to-dock>Minimize Dash to Dock</h2> <pre><code class=language-bash>gsettings set org.gnome.shell.extensions.dash-to-dock click-action &#39;minimize&#39;</code></pre> <h2 id=tweaks-tools>Tweaks Tools</h2> <ol> <li><strong>Top Bar</strong> Activate <strong>Activitis Overview Hot Corner</strong> activate necessary things.</li> <li><strong>Extenssion</strong> Activate <strong>Dash to panel</strong> ans <strong>Desktop icons</strong>.<ul> <li><strong>Position</strong> Activate <strong>Panel Intellihide</strong>.</li> <li><strong>Sytle</strong> 36, 8, 4.</li> </ul> </li> <li>Setup <strong>Startup Applications</strong></li> <li><strong>Extenssion</strong> Activate <strong>Desktop icons</strong>.<ul> <li>Go to setting and disable all.</li> </ul> </li> </ol> <h2 id=install-vscode>Install VsCode</h2> <pre><code class=language-bash>sudo apt update\nsudo apt install software-properties-common apt-transport-https wget\nwget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -\nsudo add-apt-repository &quot;deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main&quot;\nsudo apt update; sudo apt install code</code></pre> <h2 id=install-or-update-vscode>Install Or update VsCode</h2> <pre><code class=language-bash>wget https://vscode-update.azurewebsites.net/latest/linux-deb-x64/stable -O /tmp/code_latest_amd64.deb\nsudo dpkg -i /tmp/code_latest_amd64.deb</code></pre> <h2 id=install-opera>Install Opera</h2> <pre><code class=language-bash>sudo apt install opera-stable\nwget -qO- https://deb.opera.com/archive.key | sudo apt-key add -\nsudo add-apt-repository &quot;deb [arch=i386,amd64] https://deb.opera.com/opera-stable/ stable non-free&quot;\nsudo apt install opera-stable</code></pre> <ul> <li><code>sudo apt update; sudo apt install git</code> Install <strong>Git</strong></li> <li><code>sudo apt update; sudo apt install vlc</code> Install <strong>VLC</strong>.</li> <li><code>sudo snap install postman</code> Install <strong>Postman</strong>.</li> <li><code>sudo apt install ibus-avro</code> Install <strong>AVRO</strong>.</li> </ul> <p>From <strong>Settings</strong> -&gt; <strong>Region &amp; Language</strong> -&gt; <strong>Manage Installed Language</strong> active <strong>IBus</strong></p> <pre><code class=language-bash>ibus restart</code></pre> <p>From <strong>Settings</strong> -&gt; <strong>Region &amp; Language</strong> -&gt; <strong>+</strong> -&gt; <strong>bangla</strong> -&gt; <strong>Avro Phonetic</strong>. Search <strong>Avro Phonetic</strong> if not exits click <strong>Others</strong></p> <h2 id=set-boot-order>Set boot order</h2> <pre><code class=language-bash>sudo add-apt-repository ppa:danielrichter2007/grub-customizer\nsudo apt-get update\nsudo apt-get install grub-customizer</code></pre> <ul> <li><strong>List configuration</strong> Order <strong>Windows</strong> to seceond</li> <li><strong>General settings</strong> set <strong>5</strong> in <strong>boot default entry</strong></li> </ul> <h2 id=install-unite-from-gnome-to-hide-top-bar>Install Unite from <a href=https://extensions.gnome.org/ >GNOME</a> to hide top bar</h2> <h2 id=install-http-benchmarking-tool>Install <a href=https://github.com/wg/wrk/wiki/Installing-wrk-on-Linux>HTTP benchmarking tool</a></h2> <pre><code class=language-bash>sudo apt-get install build-essential libssl-dev git -y\ngit clone https://github.com/wg/wrk.git wrk\ncd wrk\nmake\n# move the executable to somewhere in your PATH, ex:\nsudo cp wrk /usr/local/bin</code></pre> <ul> <li><code>wrk -t12 -c400 -d30s http://127.0.0.1:8080/index.html</code> test result by running this comand and change url.</li> <li>You can see benchmar of other framework from home of this <strong><a href=https://github.com/wg/wrk>repository</a></strong>.</li> </ul> <h2 id=android-studio>Android Studio</h2> <ul> <li><strong><a href=https://developer.android.com/studio>Download android studio</a></strong></li> <li>Extract zip file and open <code>bin</code> folder where <code>studio.sh</code> exists and run <code>./studio.sh</code> and then flow the process.</li> <li>When download was complete then from <code>Configuration</code> <code>Create Desktop Entry</code></li> </ul> <h2 id=swap-memory>Swap Memory</h2> <ul> <li><code>sudo vi /etc/sysctl.conf</code></li> <li><code>vm.swappiness=1</code> Here 1 is the priority of swap memory. Default was 60. Lower means your system rarely use it.</li> </ul> <h2 id=install-driver>Install Driver</h2> <ul> <li><code>sudo ubuntu-drivers autoinstall</code> Automatically install all drivers.</li> <li><code>lspci -vnnn | perl -lne &#39;print if /^\\d+\\:.+(\\[\\S+\\:\\S+\\])/&#39; | grep VGA</code> Check Graphics card.</li> </ul> <h2 id=install-yakuake>Install YAKUAKE</h2> <p><code>sudo apt-get install yakuake</code></p> <ul> <li>Configur Yakuake<ul> <li>Window<ul> <li>Position -&gt; Right</li> <li>Width -&gt; 40%</li> <li>Height -&gt; 100%</li> </ul> </li> </ul> </li> <li>Manage Profiles<ul> <li>Profile Edit<ul> <li>Appearance<ul> <li>Color scheme &amp; font -&gt; Breeze -&gt; Edit<ul> <li>Background color -&gt; <strong>#010D10</strong></li> <li>Background Transparency -&gt; 20%</li> </ul> </li> <li>Cursor<ul> <li>color -&gt; white</li> <li>Blinking -&gt; Enable</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> <h2 id=terminal-preferences>Terminal preferences</h2> <ul> <li>Create new profile.</li> <li>Text:<ul> <li>Size 14.</li> </ul> </li> <li>Text <strong>white</strong>.</li> <li>Set background color <strong>#010D10</strong>.</li> <li>Transparent level <strong>20</strong>.</li> <li>Color palette (0,0 <strong>#2E3436</strong>)</li> </ul> <p>Add <strong>.my_base</strong> to get all my custom feature.</p> <pre><code class=language-bash>if [ -f ~/.my_bash ]; then\n    . ~/.my_bash\nfi</code></pre> <ul> <li><code>alias nnv=&quot;cd /var/log/&quot;</code></li> <li><code>alis nnng=&quot;cd /etc/nginx/conf.d&quot;</code></li> <li><code>alis nnp=&quot;cd ~/prog/projects/&quot;</code></li> </ul> <h2 id=fera-code><a href=https://github.com/tonsky/FiraCode/wiki/Linux-instructions#installing-with-a-package-manager>Fera Code</a></h2> <ul> <li><strong><a href=https://askubuntu.com/questions/148638/how-do-i-enable-the-universe-repository>Enable the “Universe” repository</a></strong></li> <li><code>sudo apt install fonts-firacode</code></li> <li><strong>Restart</strong></li> </ul> <h2 id=terminal-screen>Terminal Screen</h2> <ul> <li><code>sudo apt install screen xdotool</code> First Install <strong>Screen</strong> package.</li> <li><code>Ctrl+a Shift+S</code> or <code>Ctrl+a :split</code> Horizontal Split. </li> <li><code>Ctrl+a Shift+|</code> or <code>Ctrl+a :split -v</code> Vertical Split.</li> <li><code>Ctrl+a Shift+X</code> or <code>Ctrl+a :remove</code> delete split.</li> <li><code>Ctrl+a c</code> or <code>Ctrl+a :screen</code> For action or start working.</li> <li><code>Ctrl+a Shift+Q</code> to remove all tab.</li> <li><code>Ctrl+a tab</code> or <code>Ctrl+a :focus</code> Go to next tab.</li> </ul> <h2 id=show-line-in-vi-editor>Show line In VI Editor</h2> <ul> <li><code>vi .vimrc</code> &gt; <code>set number</code> To show line number in editor</li> </ul> <h2 id=zsh-for-attractive-terminal><a href=https://ohmyz.sh/ >ZSH For Attractive terminal</a></h2> <ul> <li><code>sudo apt install zsh</code> <strong>install zsh if need</strong></li> <li><code>chsh -s $(which zsh)</code> Make it your <strong>default shell</strong></li> <li>Restart your computer then open terminal read message and select 2 as default. <code>sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</code> load zsh from this <strong>url</strong></li> </ul> <p><strong><em>To set new theme</em></strong></p> <ul> <li>Select theme name from <code>https://github.com/ohmyzsh/ohmyzsh/wiki/Themes</code> here.</li> <li>Set name to <code>.zshrc</code> file in home derectory.</li> <li>Load it by <code>source ~/.zshrc</code></li> </ul> <p>My default theme is <code>bureau</code></p> <h2 id=terminal-funn>Terminal Funn</h2> <ul> <li><p><code>sudo apt install figlet</code> <strong>Install Figlet</strong></p> </li> <li><p><code>showfigfonts</code> Usefull Command.</p> </li> <li><p>Set text in terminal every time opening.</p> </li> </ul> <p><code>sudo nano /etc/bash.bashrc</code> <code>figlet -f &lt;font_type&gt; &quot;text&quot;</code></p> <ul> <li><strong>SL</strong></li> </ul> <pre><code class=language-bash>sudo apt install sl\nsl -a\nsl -F\nxeyes</code></pre> <ul> <li><strong>BANNER</strong></li> </ul> <pre><code class=language-bash>sudo apt install sysvbanner\nbanner &lt;Text&gt;</code></pre> <ul> <li><strong>TOILET</strong></li> </ul> <pre><code class=language-bash>sudo apt install toilet\ntoilet &lt;Text&gt;\ntoilet -f mono12 -F metal &lt;Text&gt;</code></pre> <ul> <li><code>sudo apt install cmatrix; cmatrix</code> <strong>CMATRIX</strong></li> <li><code>sudo apt install oneko; oneko</code> <strong>ONEKO</strong></li> <li><code>while true; do echo &quot;$(date &#39;+%D %T&#39; | toilet -f term -F border --gay)&quot;; sleep 1; done</code> <strong>DateTime</strong></li> <li><code>sudo apt install libaa-bin; aafire</code> <strong>Fire</strong></li> </ul> ";e.exports=o},"83ed":function(e,t,o){e.exports=o.p+"static/img/hamburger.67a5d287.svg"},"897c":function(e,t){var o="<h1 id=make-live-and-https-by-ngrok>Make Live and HTTPS By <a href=https://ngrok.com/ >ngrok</a></h1> <ol> <li>Download <strong><a href=https://ngrok.com/ >NGROK</a></strong></li> <li>Extract it in a folder.</li> <li>Open terminal to selected filder and make sure your local project was running.</li> <li><code>./ngrok http 8000</code> Here 8000 is locally running port. Take it as running.</li> <li>This command return you some url like <code>https://&lt;some_random_number&gt;.ngrok.io/</code></li> </ol> ";e.exports=o},"90f5":function(e,t){var o="<h2 id=ssl-secure-connection>SSL secure connection</h2> <p>Use Free SSL secure connection from <strong><a href=https://letsencrypt.org/ >Lets Encrypt</a></strong> And use <strong><a href=https://certbot.eff.org/instructions>certbot</a></strong> to setup server.</p> <p>Flow this <strong><a href=https://certbot.eff.org/instructions>CertBot Docs</a></strong>. Select Software and OS.</p> <h3 id=for-nginx-and-ubuntu>For Nginx and Ubuntu</h3> <pre><code class=language-bash>sudo apt-get update\nsudo apt-get install software-properties-common\nsudo add-apt-repository universe\nsudo add-apt-repository ppa:certbot/certbot\nsudo apt-get update</code></pre> <ul> <li><code>sudo apt-get install certbot python3-certbot-nginx</code></li> <li><code>sudo certbot --nginx</code><ol> <li><strong>Enter email</strong> for urgent renewal.</li> <li><strong>A</strong> for Agree</li> <li><strong>N</strong> for non share</li> <li><strong>1, 2</strong> for multiple domain seperated commas and/or space</li> <li><strong>2</strong> for Redirect all as https</li> </ol> </li> <li><code>sudo certbot renew --dry-run</code></li> </ul> ";e.exports=o},"9c0c":function(e,t,o){},a732:function(e,t,o){},afba:function(e,t,o){"use strict";o("4e44")},c4ba:function(e,t){var o="<h1 id=flask>Flask</h1> <h2 id=flask-project>Flask project</h2> <pre><code class=language-py>app = Flask(__name__)\n\nfrom flask import Flask, render_template, request\n\n@app.route(&quot;/&quot;, methods=[&quot;GET&quot;])\ndef index(*args, **kwargs):\n    user_id = &quot;87654321&quot;\n    message = &quot;Nayan Biswas&quot;\n    reply = &quot;Biswas Nayan&quot;\n    save_message_data(user_id, message, reply)\n    return {&quot;message&quot;: &quot;APP is running.&quot;}\n\nif __name__ == &quot;__main__&quot;:\n    app.run(debug=True)</code></pre> <h2 id=flask-model>Flask Model</h2> <pre><code class=language-py>from flask_sqlalchemy import SQLAlchemy\napp.config[&quot;SQLALCHEMY_TRACK_MODIFICATIONS&quot;] = False\napp.config[&quot;SQLALCHEMY_DATABASE_URI&quot;] = &quot;sqlite:///db.sqlite&quot;\n\ndb = SQLAlchemy(app)\nsession = db.session\n\nclass User(db.Model):\n    __tablename__ = &#39;user&#39;\n    id = db.Column(db.Integer, primary_key=True)\n    username_id = db.Column(db.String(50), unique=True, nullable=False)\n\n\nclass Message(db.Model):\n    __tablename__ = &#39;message&#39;\n    id = db.Column(db.Integer, primary_key=True)\n    user_id = db.Column(db.Integer, db.ForeignKey(&#39;user.id&#39;))\n    user = db.relationship(&quot;User&quot;, backref=&#39;messages&#39;, lazy=True)\n\n    message = db.Column(db.String, nullable=False)\n    reply = db.Column(db.String, nullable=True)\n\nsession.add(User(username_id=&quot;123123&quot;))\nsession.commit()\nusers = User.query.all()\nuser = User.query.all()[0]\nuser.id\nuser.username_id\nuser.messages # reverse access or like related_name\n\nsession.add(Message(user_id=users[0].id, message=&quot;demo_message&quot;, reply=&quot;demo_reply&quot;))\nsession.commit()\nmessages = Message.query.all()\nmessage = Message.query.all()[0]\n\nuser = User.query.filter(User.username_id==&quot;123123&quot;).first()\n</code></pre> ";e.exports=o},cd49:function(e,t,o){"use strict";o.r(t);o("e260"),o("e6cf"),o("cca6"),o("a79d");var n=o("2b0e"),a=o("5f5b"),s=o("b1e0"),r=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{attrs:{id:"app"}},[o("NavBar"),o("router-view")],1)},i=[],l=o("d4ec"),d=o("262e"),c=o("2caf"),u=o("9ab4"),p=o("1b40"),g=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"custom-nav"},[n("div",{staticClass:"logo"},[n("router-link",{attrs:{to:{name:"home"}}},[e._v("Nayan.")])],1),n("div",{staticClass:"menu"},[e.mobileNav?n("nav",{staticClass:"mobile-menu"},[n("ul",{staticClass:"top-icons"},[n("li",{staticClass:"nav-item power-search",on:{click:function(t){return t.preventDefault(),e.toggolShowModal(t)}}},[n("img",{attrs:{src:o("4ab0"),alt:"search"}})]),n("li",{staticClass:"nav-item hamburger",on:{click:function(t){return t.preventDefault(),e.toggolNavExpand(t)}}},[n("img",{attrs:{src:o("83ed"),alt:"menu"}})])]),e.navExpand?n("div",{staticClass:"expanded-nav",on:{click:function(t){return t.preventDefault(),e.toggolNavExpand(t)}}},[e._m(0),n("ul",[n("li",{staticClass:"nav-item"},[n("router-link",{attrs:{to:{name:"blog-index"}}},[e._v("Blog")])],1),n("li",{staticClass:"nav-item"},[n("router-link",{attrs:{to:{name:"work"}}},[e._v("Work")])],1),n("li",{staticClass:"nav-item"},[n("router-link",{attrs:{to:{name:"skill"}}},[e._v("Skill")])],1),n("li",{staticClass:"nav-item"},[n("router-link",{attrs:{to:{name:"resume"}}},[e._v("Resume")])],1),n("li",{staticClass:"nav-item"},[n("router-link",{attrs:{to:{name:"contact"}}},[e._v("Contact")])],1)])]):e._e()]):n("nav",{staticClass:"desktop-menu"},[n("ul",[n("li",{staticClass:"nav-item power-search",attrs:{title:"CRTL + SHIFT + F"},on:{click:function(t){return t.preventDefault(),e.toggolShowModal(t)}}},[n("img",{attrs:{src:o("4ab0"),alt:"search"}})]),n("li",{staticClass:"nav-item"},[n("router-link",{attrs:{to:{name:"blog-index"}}},[e._v("Blog")])],1),n("li",{staticClass:"nav-item"},[n("router-link",{attrs:{to:{name:"work"}}},[e._v("Work")])],1),n("li",{staticClass:"nav-item"},[n("router-link",{attrs:{to:{name:"skill"}}},[e._v("Skill")])],1),n("li",{staticClass:"nav-item"},[n("router-link",{attrs:{to:{name:"resume"}}},[e._v("Resume")])],1),n("li",{staticClass:"nav-item"},[n("router-link",{attrs:{to:{name:"contact"}}},[e._v("Contact")])],1)])])]),e.showModal?n("Search",{on:{modalClose:function(t){e.showModal=!1}}}):e._e()],1)},h=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"cross"},[n("img",{attrs:{src:o("2872"),alt:"menu"}})])}],m=o("bee2"),f=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("b-modal",{attrs:{"hide-header":"","hide-footer":"",centerd:""},model:{value:e.showModal,callback:function(t){e.showModal=t},expression:"showModal"}},[[o("b-form",{on:{submit:function(t){return t.preventDefault(),e.submitSearch()}}},[o("div",{staticClass:"search"},[o("b-form-input",{attrs:{type:"search",name:"Search",debounce:"300",placeholder:"Search..."},on:{keyup:[function(t){return t.type.indexOf("key")||38===t.keyCode?e.changeSelected(-1):null},function(t){return t.type.indexOf("key")||40===t.keyCode?e.changeSelected(1):null}]},model:{value:e.input,callback:function(t){e.input=t},expression:"input"}})],1),o("span",{staticClass:"search-message"},[e._v("CRTL + SHIFT + F")]),o("div",{staticClass:"results"},e._l(e.results,(function(t,n){return o("li",{key:"search-results"+n,staticClass:"result-item",class:{"selected-result":e.selectedResult===n},on:{click:function(t){return t.preventDefault(),e.submitSearch(n)}}},[o("span",{staticClass:"result-name"},[e._v(e._s(t.name))])])})),0)])]],2)},b=[],q=(o("9911"),o("4d63"),o("ac1f"),o("25f0"),o("5db7"),o("73d9"),o("b0c0"),o("841c"),[{slug:"android-studio",name:"Android studio Install and Configuration",isPublished:!0,coverImage:"",tags:["android-studio"],relatedPosts:[""],shortDescription:"To Install and configuring android studio you can see official doc."},{slug:"bash",name:"bash",isPublished:!0,coverImage:"",tags:["bash"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"c-sharp",name:"c-sharp",isPublished:!0,coverImage:"",tags:["c-sharp"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"crontab",name:"crontab",isPublished:!0,coverImage:"",tags:["crontab"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"dart",name:"dart",isPublished:!0,coverImage:"",tags:["dart"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"django",name:"django",isPublished:!0,coverImage:"",tags:["django"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"docker",name:"docker",isPublished:!0,coverImage:"",tags:["docker"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"flask",name:"flask",isPublished:!0,coverImage:"",tags:["flask"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"flutter",name:"flutter",isPublished:!0,coverImage:"",tags:["flutter"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"gcp",name:"gcp",isPublished:!0,coverImage:"",tags:["gcp"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"gitlab-ci-cd",name:"gitlab-ci-cd",isPublished:!0,coverImage:"",tags:["gitlab-ci-cd"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"git",name:"git",isPublished:!0,coverImage:"",tags:["git"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"go",name:"go",isPublished:!0,coverImage:"",tags:["go"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"heroku-django",name:"heroku-django",isPublished:!0,coverImage:"",tags:["heroku-django"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"js",name:"js",isPublished:!0,coverImage:"",tags:["js"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"LetsEncrypt-certbot",name:"LetsEncrypt-certbot",isPublished:!0,coverImage:"",tags:["LetsEncrypt-certbot"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"linux",name:"linux",isPublished:!0,coverImage:"",tags:["linux"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"live_from_local",name:"live_from_local",isPublished:!0,coverImage:"",tags:["live_from_local"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"mongo",name:"mongo",isPublished:!0,coverImage:"",tags:["mongo"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"mysql",name:"mysql",isPublished:!0,coverImage:"",tags:["mysql"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"nginx",name:"nginx",isPublished:!0,coverImage:"",tags:["nginx"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"postgresql",name:"postgresql",isPublished:!0,coverImage:"",tags:["postgresql"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"python",name:"python",isPublished:!0,coverImage:"",tags:["python"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"react",name:"react",isPublished:!0,coverImage:"",tags:["react"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"setup-ubuntu",name:"setup-ubuntu",isPublished:!0,coverImage:"",tags:["setup-ubuntu"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"supervisor",name:"supervisor",isPublished:!0,coverImage:"",tags:["supervisor"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"the-linux-command-line",name:"the-linux-command-line",isPublished:!0,coverImage:"",tags:["the-linux-command-line"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"vim",name:"vim",isPublished:!0,coverImage:"",tags:["vim"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"vs-code",name:"vs-code",isPublished:!0,coverImage:"",tags:["vs-code"],relatedPosts:[""],shortDescription:"shortDescription"},{slug:"vue",name:"vue",isPublished:!0,coverImage:"",tags:["vue"],relatedPosts:[""],shortDescription:"shortDescription"}]),y=q;function _(e){var t=new RegExp(e,"i"),o=y.flatMap((function(o){return o.tags.indexOf(e)>-1?{name:o.name,link:{name:"blog-details",params:{slug:o.slug}},priority:7}:o.name.search(t)>-1?{name:o.name,link:{name:"blog-details",params:{slug:o.slug}},priority:3}:[]}));return o}var w=function(e){e=e.toLowerCase();var t=_(e);return t},v=w,k=function(e){Object(d["a"])(o,e);var t=Object(c["a"])(o);function o(){var e;return Object(l["a"])(this,o),e=t.apply(this,arguments),e.showModal=!0,e.input="",e.selectedResult=0,e.results=[],e.pages=[{name:"Blog Page",link:"/blog"},{name:"Skill Page",link:{name:"skill"}},{name:"Contact Page",link:{name:"contact"}}],e}return Object(m["a"])(o,[{key:"changeSelected",value:function(e){e?(this.selectedResult+=e,this.selectedResult<0?this.selectedResult=this.results.length-1:this.selectedResult=this.selectedResult%this.results.length):this.selectedResult=0}},{key:"handleModalClose",value:function(){this.$emit("modalClose")}},{key:"handleSearch",value:function(){this.input.length<2?this.results=[]:(this.changeSelected(0),this.results=v(this.input))}},{key:"submitSearch",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=e||this.selectedResult;if(!(this.results.length<t)){var o=this.results[t];this.$emit("modalClose"),this.$router.push(o.link)}}}]),o}(p["c"]);Object(u["a"])([Object(p["d"])("showModal")],k.prototype,"handleModalClose",null),Object(u["a"])([Object(p["d"])("input")],k.prototype,"handleSearch",null),k=Object(u["a"])([Object(p["a"])({})],k);var x=k,S=x,E=(o("3da0"),o("2877")),T=Object(E["a"])(S,f,b,!1,null,"d2f4522e",null),A=T.exports,R=function(e){Object(d["a"])(o,e);var t=Object(c["a"])(o);function o(){var e;return Object(l["a"])(this,o),e=t.apply(this,arguments),e.mobileNav=!1,e.navExpand=!1,e.showModal=!1,e}return Object(m["a"])(o,[{key:"toggolNavExpand",value:function(){this.navExpand=!this.navExpand}},{key:"toggolShowModal",value:function(){this.showModal=!this.showModal}},{key:"created",value:function(){var e=this;window.addEventListener("keydown",(function(t){t.ctrlKey&&t.shiftKey&&"KeyF"==t.code&&(e.showModal=!e.showModal)})),this.handleView()}},{key:"handleView",value:function(){this.mobileNav=window.innerWidth<=614.4,window.addEventListener("resize",this.handleView)}}]),o}(p["c"]);R=Object(u["a"])([Object(p["a"])({components:{Search:A},name:"NavBar"})],R);var C=R,I=C,N=(o("afba"),Object(E["a"])(I,g,h,!1,null,"c4ac6282",null)),L=N.exports,M=function(e){Object(d["a"])(o,e);var t=Object(c["a"])(o);function o(){return Object(l["a"])(this,o),t.apply(this,arguments)}return o}(p["c"]);Object(u["a"])([Object(p["b"])()],M.prototype,"msg",void 0),M=Object(u["a"])([Object(p["a"])({components:{NavBar:L}})],M);var P=M,O=P,D=(o("5c0b"),Object(E["a"])(O,r,i,!1,null,null,null)),j=D.exports,$=(o("d3b7"),o("3ca3"),o("ddb0"),o("8c4f"));n["default"].use($["a"]);var U,F=[{path:"/",name:"home",component:function(){return o.e("chunk-05d1f99a").then(o.bind(null,"bb51"))}},{path:"/blog",name:"blog-index",component:function(){return o.e("chunk-b2179e46").then(o.bind(null,"dbfa"))}},{path:"/blog/:slug",name:"blog-details",component:function(){return o.e("chunk-755acf94").then(o.bind(null,"4265"))}},{path:"/work",name:"work",component:function(){return o.e("chunk-2d22bd05").then(o.bind(null,"f126"))}},{path:"/skill",name:"skill",component:function(){return o.e("chunk-2d0c49f8").then(o.bind(null,"3c2d"))}},{path:"/resume",name:"resume",component:function(){return o.e("chunk-040ab9fc").then(o.bind(null,"1ba2"))}},{path:"/contact",name:"contact",component:function(){return o.e("chunk-2d210c47").then(o.bind(null,"b8fa"))}},{path:"/about",name:"about",component:function(){return o.e("chunk-2d22d746").then(o.bind(null,"f820"))}}],B=new $["a"]({mode:"history",base:"/",routes:F}),z=B,H=o("2f62"),W=o("2909"),G=o("b85c"),Y=o("5530"),V=o("1da1"),K=o("ade3"),Q=(o("96cf"),o("fb6a"),o("4de4"),o("7db0"),o("6062"),o("d81d"),o("a15b"),o("ec0a")),J=o("3f71"),Z=[{slug:"android-studio",content:o("7e64")},{slug:"bash",content:o("4d30")},{slug:"c-sharp",content:o("5087")},{slug:"crontab",content:o("2c6e")},{slug:"dart",content:o("d473")},{slug:"django",content:o("61ec")},{slug:"docker",content:o("eab4")},{slug:"flask",content:o("c4ba")},{slug:"flutter",content:o("47f6")},{slug:"gcp",content:o("5f74")},{slug:"gitlab-ci-cd",content:o("114c")},{slug:"git",content:o("e27a")},{slug:"go",content:o("4c98")},{slug:"heroku-django",content:o("4393")},{slug:"js",content:o("5af2")},{slug:"LetsEncrypt-certbot",content:o("90f5")},{slug:"linux",content:o("52a5")},{slug:"live_from_local",content:o("897c")},{slug:"mongo",content:o("29bf")},{slug:"mysql",content:o("514c")},{slug:"nginx",content:o("05b9")},{slug:"postgresql",content:o("5a47")},{slug:"python",content:o("1e3a")},{slug:"react",content:o("1e14")},{slug:"setup-ubuntu",content:o("8221")},{slug:"supervisor",content:o("0305")},{slug:"the-linux-command-line",content:o("f2a0")},{slug:"vim",content:o("473c")},{slug:"vs-code",content:o("e77f")},{slug:"vue",content:o("7905")}],X=Z,ee={postList:[],postDetails:{slug:"",name:"",isPublished:!0,coverImage:"",tags:[],relatedPosts:[],shortDescription:"",content:""},error:!1},te=Object(K["a"])({},Q["a"],(function(){return y.length})),oe=(U={},Object(K["a"])(U,J["b"],(function(e,t){return Object(V["a"])(regeneratorRuntime.mark((function o(){var n,a;return regeneratorRuntime.wrap((function(o){while(1)switch(o.prev=o.next){case 0:return e.commit,n=t.page,a=t.limit,o.abrupt("return",new Promise((function(e){var t=(n-1)*a,o=n*a,s=y.filter((function(e){return e.isPublished})).slice(t,o);e(s)})));case 3:case"end":return o.stop()}}),o)})))()})),Object(K["a"])(U,J["a"],(function(e,t){return Object(V["a"])(regeneratorRuntime.mark((function o(){var n;return regeneratorRuntime.wrap((function(o){while(1)switch(o.prev=o.next){case 0:return e.commit,n=t.slug,o.abrupt("return",new Promise((function(e){var t=y.find((function(e){return e.slug==n}))||null;if(t){var o=X.find((function(e){return e.slug==n}))||{content:""};e(Object(Y["a"])(Object(Y["a"])({},t),{},{content:o.content}))}e(null)})));case 3:case"end":return o.stop()}}),o)})))()})),U),ne={},ae={namespaced:!0,getters:te,actions:oe,mutations:ne,state:ee},se=ae;(function(){var e=new Set(y.map((function(e){return e.slug}))),t=new Set(X.map((function(e){return e.slug})));function o(e,t){var o,n=new Set(e),a=Object(G["a"])(t);try{for(a.s();!(o=a.n()).done;){var s=o.value;n.has(s)?n.delete(s):n.add(s)}}catch(r){a.e(r)}finally{a.f()}return n}var n=o(e,t);if(n.size)throw'List not match. "'.concat(Object(W["a"])(n).join(", "),'"')})(),n["default"].use(H["a"]);var re=new H["a"].Store({state:{projectName:"Nayan Portfolio"},mutations:{},actions:{},modules:{post:se}}),ie=o("866c"),le=o.n(ie);n["default"].use(le.a,{flavor:"github",options:{emoji:!1}}),n["default"].use(a["a"]),n["default"].use(s["a"]),n["default"].config.productionTip=!1,new n["default"]({router:z,store:re,render:function(e){return e(j)}}).$mount("#app")},d473:function(e,t){var o="<h1 id=dart>Dart</h1> <h2 id=install-dart>Install Dart</h2> <ol> <li><code>sudo apt-get update &amp;&amp; sudo apt-get install apt-transport-https</code></li> <li><code>sudo sh -c &#39;wget -qO- https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -&#39;</code></li> <li><code>sudo sh -c &#39;wget -qO- https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list &gt; /etc/apt/sources.list.d/dart_stable.list&#39;</code></li> <li><code>sudo apt-get update; sudo apt-get install dart</code></li> <li><code>export PATH=&quot;$PATH:/usr/lib/dart/bin&quot; &amp;&amp; echo &#39;export PATH=&quot;$PATH:/usr/lib/dart/bin&quot;&#39; &gt;&gt; ~/.profile</code></li> </ol> <ul> <li><code>dart filename.dart</code> <strong>Run</strong> dart.</li> </ul> <h2 id=data-type>Data type.</h2> <ul> <li><p><strong>Premitive Variable</strong></p> <pre><code class=language-dart>import &#39;dart:collection&#39;;\nint intNum = 10, resInt = 17 ~/ 5;\nString strStr = &quot;String&quot;;\ndouble douNum = 10;\nvar varNum = 11, varStr = &quot;varStr&quot;;\ndynamic dynVar = 100;\ndynVar = &quot;int to str&quot;;\n}</code></pre> </li> <li><p><strong>List</strong></p> <pre><code class=language-dart>var fixedList = new List(5);\nfixedList[0] = &quot;first&quot;;\nvar dynamicList = new List();\ndynamicList.add(&quot;first&quot;);\ndynamicList.addAll([&quot;second&quot;, &quot;third&quot;]);\ndynamicList.insert(1, &quot;insert&quot;);\ndynamicList.insertAll(0, [&quot;ins_first&quot;, &quot;ins_second&quot;]);\ndynamicList.remove(&quot;none&quot;);\ndynamicList.remove(&quot;second&quot;);\ndynamicList.removeAt(1);\ndynamicList.replaceRange(0, 2, [&quot;rep_one&quot;, &quot;rep_two&quot;]);\nfor (var each in dynamicList) print(each);</code></pre> </li> <li><p><strong>Map</strong></p> <pre><code class=language-dart>var firstMap = new Map();\nfirstMap[&quot;first&quot;] = &quot;test&quot;;\nvar tempMap = {&quot;one&quot;: &quot;one&quot;, &quot;two&quot;: 2, &quot;three&quot;: 3.0};\ntempMap[&quot;new&quot;] = &quot;new&quot;;\ntempMap.addAll({&quot;add1&quot;: &quot;add1&quot;, &quot;add2&quot;: &quot;add2&quot;});\ntempMap.remove(&quot;one&quot;);\ntempMap.remove(&quot;two&quot;);\ntempMap.clear();</code></pre> </li> <li><p><strong>Set</strong></p> <pre><code class=language-dart>var firstSet = new Set(), tempSet = new Set.from([1, 2, 3, 1, 2, 3]);\nfirstSet.add(100);\nfirstSet.add(101);\nfirstSet.add(100);\nfor (var each in tempSet) print(each);</code></pre> </li> <li><p><strong>HashMap</strong></p> <pre><code class=language-dart>var firstHashMap = new HashMap();\nfirstHashMap[&quot;first&quot;] = &quot;test&quot;;\nvar tempHashMap = new HashMap.from({&quot;one&quot;: &quot;one&quot;, &quot;two&quot;: 2, &quot;three&quot;: 3.0});\ntempHashMap[&quot;new&quot;] = &quot;new&quot;;\ntempHashMap.addAll({&quot;add1&quot;: &quot;add1&quot;, &quot;add2&quot;: &quot;add2&quot;});\ntempHashMap.remove(&quot;one&quot;);\ntempHashMap.remove(&quot;two&quot;);\ntempHashMap.clear();</code></pre> </li> <li><p><strong>HashMap</strong></p> <pre><code class=language-dart>\nvar firstHashSet = new HashSet(),\n    tempHashSet = new HashSet.from([1, 3, 1, 2, 3]);\nfirstHashSet.add(100);\nfirstHashSet.add(101);\nfirstHashSet.add(100);\nprint(firstHashSet);\nprint(tempHashSet);\nfor (var each in tempHashSet) print(each);</code></pre> </li> <li><p><strong>Generics</strong></p> <pre><code class=language-dart>var genMap = new Map&lt;String, int&gt;(); // This is only integer value.\ngenMap[&quot;first&quot;] = 10;\nvar genHashMap = new HashMap&lt;String, int&gt;(); // This is only integer value.\ngenHashMap[&quot;first&quot;] = 10;\n</code></pre> </li> </ul> <p>var genSet = new Set<int>(); // This is only integer value. genSet.add(10);</int></p> <p>var genHashSet = new HashSet<int>(); // This is only integer value. genHashSet.add(10);</int></p> <pre><code>\n## Function\n```dart\n// Regular function\nint hello_re(){\n    return &quot;Hello World&quot;;\n}\n\n// arrow function\nint hello() =&gt; &quot;Hello World&quot;;</code></pre><h2 id=oop>OOP</h2> <pre><code class=language-dart>// On Parent.dart file\nabstract class Box { // No one can create instance of this Box class becouse of abstract.\n  int height;\n  Box(height) {\n    this.height = height;\n  }\n  void area() {\n    print(this.height * height);\n  }\n}\n\n// On Child.dart file.\nimport &quot;Parent.dart&quot;;\n\nclass Square extends Box {\n  Square(height) : super(height);\n  @override\n  void area() {\n    print(Utils.pow(this.height));\n  }\n}\n\nclass Ractangle extends Box {\n  int width;\n  Ractangle(height, width)\n      : width = width,\n        super(height);\n  void set setWidth(int width) {\n    this.width = width;\n  }\n  int get getWidth {\n    return this.width;\n  }\n  @override\n  void area() {\n    print(this.height * this.width);\n  }\n}\n\nclass Utils {\n  static void Devided(int a, int b) {\n    try {\n      print(a ~/ b);\n    } catch (e) {\n      print(e);\n      throw new Exception(&quot;You are wrong!!!&quot;);\n    }\n  }\n  void checking() {\n    try {\n      Devided(17, 0);\n    } catch (e) {\n      print(e);\n    }\n  }\n  static int pow(int a) {\n    return a * a;\n  }\n}\n</code></pre> ";e.exports=o},e27a:function(e,t){var o="<h1 id=git>Git</h1> <h2 id=installation>Installation</h2> <pre><code class=language-bash>sudo apt update\nsudo apt install git\ngit --version</code></pre> <h2 id=generate-and-copy-ssh-key>generate and copy ssh-key</h2> <p><strong>For Linux</strong></p> <pre><code class=language-bash>ssh-keygen -t rsa -b 4096 -C &quot;nayan32biswas@gmail.com&quot;\ncat ~/.ssh/id_rsa.pub</code></pre> <p><strong>For Windows</strong></p> <ol> <li>Git bash -&gt; Run as Administrator</li> <li><code>ssh-keygen</code></li> <li>Open file <strong>id_rsa.pub</strong> from <code>C:\\Users\\&lt;&lt;PC User Name&gt;&gt;\\.ssh</code> and copy all data.</li> </ol> <p><strong>global setup</strong>.</p> <pre><code class=language-bash>git config --global user.name &quot;Nayan Biswas&quot;\ngit config --global user.email &quot;nayan32biswas@gmail.com&quot;</code></pre> <h2 id=set-repository>Set repository</h2> <p><strong>Create a new repository</strong>.</p> <pre><code class=language-bash>git clone git@gitlab.com:nayan32biswas/Demo.git\ncd Demo\ntouch README.md\ngit add README.md\ngit commit -m &quot;add README&quot;\ngit push -u origin &lt;master&gt;</code></pre> <p><strong>Push an existing folder</strong>.</p> <pre><code class=language-bash>cd existing_folder\ngit init\ngit remote add origin git@gitlab.com:nayan32biswas/Demo.git\ngit add .\ngit commit -m &quot;Initial commit&quot;\ngit push -u origin &lt;master&gt;</code></pre> <p><strong>Push an existing Git repository</strong>.</p> <pre><code class=language-bash>cd existing_repo\ngit remote rename origin old-origin\ngit remote add origin git@gitlab.com:nayan32biswas/Demo.git\ngit push -u origin --all\ngit push -u origin --tags</code></pre> <h2 id=multiple-git-account>Multiple Git Account</h2> <ul> <li>If service provider are different(github, gitlab, etc) then just add ssk to the ssh setting.</li> <li>If service provider are same like double account on gitlab the follow those rules.</li> </ul> <ol> <li><p><code>ssh-keygen -t rsa -b 4096 -C &quot;temp@gmail.com&quot; -f ~/.ssh/&lt;your-filename&gt;</code></p> </li> <li><p><code>vi ~/.ssh/config</code></p> <pre><code>Host gitlab.com\n HostName gitlab.com\n User git\n IdentityFile ~/.ssh/id_rsa\n\nHost &lt;gitlab.com-anyname&gt;\n HostName gitlab.com\n User git\n IdentityFile ~/.ssh/&lt;your-filename&gt;</code></pre></li> </ol> <ul> <li><code>git clone git@&lt;&lt;&lt;gitlab.com-anyname&gt;&gt;&gt;:yourrepo-username/project.git</code></li> </ul> <h2 id=branch>Branch</h2> <p><strong>Create Branch</strong>.</p> <pre><code class=language-bash>git checkout -b &lt;branch_name&gt;</code></pre> <p><strong>Delete branch</strong>.</p> <pre><code class=language-bash>git branch -d &lt;branch_name&gt;</code></pre> <h2 id=merge>merge</h2> <p><strong>Git merge two branch</strong>.</p> <ul> <li><code>git checkout &lt;master&gt;</code> you will switch to branch <code>&lt;master&gt;</code>.</li> <li><code>git merge &lt;common&gt;</code> this will merge all changes from branch <code>&lt;common&gt;</code> into branch <code>&lt;master&gt;</code>.</li> <li><code>git commit -a</code> this will commit your changes.</li> </ul> <p><strong>merge and replace branch master with branch common. common--&gt;master</strong>.</p> <pre><code class=language-bash>git checkout &lt;common&gt;\ngit merge -s ours &lt;master&gt;\ngit checkout &lt;master&gt;\ngit merge &lt;common&gt;</code></pre> <h2 id=rebase>Rebase</h2> <p>let say Here are two brance <code>&lt;master&gt;</code> and <code>&lt;common&gt;</code>. Now rebase or combain <code>&lt;common&gt;</code> into <code>&lt;master&gt;</code> though <code>&lt;master&gt;</code> is already changed.</p> <ul> <li><code>git checkout master</code></li> <li><code>git pull origin master</code></li> <li><code>git checkout common</code></li> <li><code>git rebase master</code> resolve conflict then</li> <li><code>git add .</code></li> <li><code>git rebase --continue</code> Continue this process until complete it.</li> </ul> <p><strong>Reset to specific commit</strong>.</p> <pre><code class=language-bash>git reset --hard &lt;cedc856&gt;\ngit push --force origin &lt;master&gt;</code></pre> <p><strong>You can undo git add before commit with</strong>.</p> <pre><code class=language-bash>git reset or git reset &lt;file&gt;</code></pre> <h2 id=git-lfs>Git LFS</h2> <ul> <li><code>git lfs install</code> Install</li> <li><code>git lfs track &quot;*.psd&quot;</code> it will create <strong>.gitattributes</strong> file</li> <li>Then continue with regular command.</li> <li><code>git-lfs --help</code> Read doc for extra feature.</li> </ul> <h2 id=tools>Tools</h2> <ul> <li><code>git ls-files | xargs wc -l</code> count number of line <strong>(loc)</strong> in a project.</li> <li><code>git log</code> To see comited.</li> </ul> <h2 id=remove-cache-file>Remove cache file</h2> <ul> <li><code>git rm --cached &lt;expression&gt;</code> Remove local cache. It&#39;s help gitignore to ignore some thing.</li> </ul> <h2 id=add-submobule>Add submobule</h2> <ul> <li><code>git submodule add &lt;url&gt; &lt;sub_module_folder&gt;</code></li> </ul> ";e.exports=o},e77f:function(e,t){var o="<h1 id=vs-code>VS Code</h1> <h3 id=vscodesettingjson><code>.vscode/setting.json</code></h3> <pre><code class=language-json>{\n  // Python\n  &quot;python.linting.pylintEnabled&quot;: false,\n  &quot;python.linting.flake8Enabled&quot;: true,\n  &quot;python.linting.enabled&quot;: true,\n  &quot;python.linting.flake8Args&quot;: [&quot;--max-line-length=120&quot;],\n  &quot;python.formatting.provider&quot;: &quot;black&quot;,\n  // VS Code\n  &quot;editor.fontSize&quot;: 16,\n  &quot;editor.renderWhitespace&quot;: &quot;all&quot;,\n  // VS Code Ligature\n  &quot;editor.fontFamily&quot;: &quot;&#39;Fira Code&#39;&quot;,\n  &quot;editor.fontLigatures&quot;: &quot;&#39;ss01&#39;, &#39;ss02&#39;, &#39;ss03&#39;, &#39;ss04&#39;, &#39;ss05&#39;, &#39;ss06&#39;, &#39;zero&#39;, &#39;onum&#39;&quot;,\n  &quot;python.pythonPath&quot;: &quot;/bin/python&quot;\n}</code></pre> <h3 id=common-extentions>Common Extentions</h3> <pre><code class=language-json>[\n    &quot;esbenp.prettier-vscode&quot;,\n    &quot;eamodio.gitlens&quot;,\n    &quot;redhat.vscode-yaml&quot;,\n    &quot;yzhang.markdown-all-in-one&quot;,\n    &quot;coenraads.bracket-pair-colorizer&quot;,\n    &quot;zhuangtongfa.material-theme&quot;,\n    &quot;visualstudioexptteam.vscodeintellicode&quot;,\n\n    &quot;ms-python.python&quot;,\n    &quot;ms-python.vscode-pylance&quot;,\n    &quot;magicstack.magicpython&quot;,\n\n    &quot;batisteo.vscode-django&quot;,\n    &quot;wholroyd.jinja&quot;,\n\n    &quot;christian-kohler.npm-intellisense&quot;,\n    &quot;dbaeumer.vscode-eslint&quot;,\n    &quot;eg2.vscode-npm-script&quot;,\n    &quot;formulahendry.auto-close-tag&quot;,\n    &quot;formulahendry.auto-rename-tag&quot;,\n\n    &quot;ishiyama.vue-autoimport&quot;,\n    &quot;octref.vetur&quot;,\n    &quot;xabikos.javascriptsnippets&quot;,\n    &quot;sdras.vue-vscode-snippets&quot;,\n    &quot;tombonnike.vscode-status-bar-format-toggle&quot;,\n\n    &quot;rbbit.typescript-hero&quot;,\n    &quot;stringham.move-ts&quot;,\n    &quot;pmneo.tsimporter&quot;\n]</code></pre> ";e.exports=o},eab4:function(e,t){var o="<h1 id=docker><a href=https://docs.docker.com/install/ >DOCKER</a></h1> <h2 id=installation-guid><a href=https://docs.docker.com/install/ >Installation Guid</a></h2> <h3 id=uninstall-old-versions>Uninstall old versions</h3> <pre><code class=language-bash>sudo apt-get remove docker docker-engine docker.io containerd runc</code></pre> <h3 id=install-using-the-repository>Install using the repository</h3> <pre><code class=language-bash>sudo apt-get update\nsudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo apt-key fingerprint 0EBFCD88\nsudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;</code></pre> <h3 id=install-using-the-convenience-script>Install using the convenience script</h3> <pre><code class=language-bash>curl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh</code></pre> <h3 id=install-docker-engine---community>INSTALL DOCKER ENGINE - COMMUNITY</h3> <pre><code class=language-bash>sudo apt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io\napt-cache madison docker-ce</code></pre> <h2 id=install-docker-compose>Install docker-compose</h2> <pre><code class=language-bash>sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose</code></pre> <h2 id=initial-checking>Initial Checking**</h2> <pre><code class=language-bash>sudo docker -v\ndocker pull hello-world\nsudo docker run hello-world\nsudo docker images</code></pre> <h2 id=login>Login</h2> <ul> <li><code>docker login</code> dockerhub login</li> <li><code>docker login registry.gitlab.com/&lt;registry&gt; -u &lt;git_ursername&gt;</code> registry login</li> </ul> <h2 id=most-common-command>Most common Command</h2> <ul> <li><code>docker-compose build</code> Build new container</li> <li><code>docker-compose up</code> Run Created container</li> <li><code>docker-compose run --rm &lt;service_name&gt; base</code> Enter inside of running service that&#39;s own&#39;t effect.</li> <li><code>docker rm &lt;container_id&gt;</code> Remove docker images.</li> <li><code>docker rmi &lt;image_id&gt;</code> Remove docker images.</li> <li><code>docker rm -f -v &lt;container_name&gt;; docker volume prune;</code> Remove data from specific container.</li> </ul> <h2 id=all-docker-command>All Docker command</h2> <ul> <li><p><code>docker build -t &lt;new_image_name&gt; -f Dockerfile .</code> Create new image and follow Dockerfile instractions.</p> </li> <li><p><code>docker run -it -p 8000:8000 &lt;image_name&gt;</code> Run your Container by port.</p> </li> <li><p><code>docker pull &lt;image_name&gt;</code> <strong>Pull</strong> image from docker hub.</p> </li> <li><p><code>docker build Dockerfile -t &lt;container_name&gt;</code> <strong>Create new image</strong> and follow Dockerfile instractions.</p> </li> <li><p><code>docker run &lt;image_name&gt;</code> This command run a image if exist otherwise it search or docker hub pull it and run it.</p> </li> <li><p><code>docker run &lt;image_name&gt;:1.0</code> Run specific version.</p> </li> <li><p><code>docker run &lt;image_name&gt; sleep 5</code> Run container and stope after 5 second.</p> </li> <li><p><code>docker run --cpus=.5 &lt;image_name&gt;</code> Run and limit the amount of processor container can use is 50%.</p> </li> <li><p><code>docker run --memory=100m &lt;image_name&gt;</code> Run and limit the amount of memory container can use is 100 MB.</p> </li> <li><p><code>docker run -i &lt;image_name&gt;</code> Run as interacive mode.</p> </li> <li><p><code>docker-compose exec server bash</code> Enter inside of running service, install and effect on action.</p> </li> <li><p><code>docker-compose exec server pipenv run bash</code> Enter inside of running service, install and effect on action also activate pipenv.</p> </li> <li><p><code>docker run -it &lt;image_name&gt;</code> Run as interacive mode and terminal.</p> </li> <li><p><code>docker run -p 80:5000 &lt;image_name&gt;</code> Run to specific port by using <code>-p</code> and port number and we can access on Run 80. We can run as many as same container by port maping.</p> </li> <li><p><code>docker run -d &lt;container_name&gt;</code> This is betach command. Container run into background process by using <code>-d</code>. It will return a long ID number.</p> </li> <li><p><code>docker attach &lt;ID_NUM&gt;</code> When we want to inter into background process run by <code>-d</code> then run this commend using <code>ID_NUM</code> get from batch command and assign firt few charecter of ID.</p> </li> <li><p><code>docker run -v /opt/datadir:/var/lib/&lt;container_name&gt; &lt;container_name&gt;</code> normaly docker have own file system and data stored on his file into <code>/var/liv/&lt;container_name&gt;</code> but after deleting container all file&#39;s and data was deleted. this command store data to <code>/opt/datadir</code> and though container is deleted but data is not delete inside of <code>/opt/datadir</code>.</p> </li> <li><p><code>docker run -e PASSWORD=DEMOPASSWORD &lt;container_name&gt;</code> set environment varibale and run the container.</p> </li> <li><p><code>docker run -e PASSWORD=DEMOPASSWORD &lt;registry.io&gt;/&lt;username&gt;/&lt;container_name&gt;</code> To run private registry.</p> </li> <li><p><code>docker run -v data_volume:/var/lib/&lt;container_name&gt; &lt;container_name&gt;</code> this line run created volume if not exists otherwise create and run.</p> </li> <li><p><code>docker run -v /data/mysql:/var/lib/&lt;container_name&gt; &lt;container_name&gt;</code> to derect specify container directory path</p> </li> <li><p><code>docker run --mount type=bind,source=/data/mysql,target=/var/lib/&lt;container_name&gt; &lt;container_name&gt;</code> same as upper and more details version.</p> </li> <li><p><code>docker exec &lt;container_name&gt; cat etc/hosts</code> here to execute someting we use <code>exec</code>.</p> </li> <li><p><code>docker ps</code> To <strong>see</strong> all running container&#39;s.</p> </li> <li><p><code>docker ps -a</code> <strong>See</strong> all running or stoped container&#39;s.</p> </li> <li><p><code>docker logs &lt;container_name&gt;</code> To see al log execute inside of this container in it is running into background process.</p> </li> <li><p><code>docker inspect &lt;container_name&gt;</code> To find all details of a container in a json formate. This also show environment variable.</p> </li> <li><p><code>docker stop &lt;image_name&gt;</code> To stope a running container.</p> </li> <li><p><code>docker rm &lt;CONTAINER_ID&gt;</code> <strong>Removeing</strong> container.</p> </li> <li><p><code>docker rmi &lt;image_id&gt;</code> <strong>Removeing</strong> image.</p> </li> <li><p><code>docker volume prune</code> Finally delete volume after removing container.</p> </li> <li><p><code>docker volume create data_volume</code> create volume to data voluem inside <strong>/var/lib/docker/volumes/data_volume</strong></p> </li> <li><p><code>docker save &lt;image_name&gt; &gt; &lt;new_file&gt;.tar</code> Save docker file.</p> </li> <li><p><code>docker exec -it &lt;container-id&gt; psql -U &lt;username&gt; -d &lt;db_name&gt; -c &quot;DROP DATABASE &lt;dbname&gt;;&quot;</code> action on postgres db</p> </li> <li><p><code>docker exec -it &lt;container_name&gt; psql -U postgres -d postgres</code> insert into database.</p> </li> </ul> <h2 id=docker-swarm><a href=https://docs.docker.com/engine/swarm/ >Docker Swarm</a></h2> <ul> <li>A <strong>swarm is a group of machines</strong> that are running Docker and joined into a cluster Docker Swarm is a tool for Container Orchestration</li> <li>Docker Swarm same as <strong>Kubernetes</strong>, <strong>Apache Mesos</strong>.</li> </ul> <h2 id=commands>Commands</h2> <p>Check machine created successfully</p> <pre><code class=language-bash>docker-machine ls\ndocker-machine ip &lt;manager1&gt;</code></pre> <ul> <li><code>docker-machine ssh &lt;manager&gt;</code> SSH (connect) to docker machine</li> <li><code>docker node ls</code> Initialize Docker Swarm docker swarm init --advertise-addr MANAGER_IP (this command will work only in swarm manager and not in worker).</li> <li><em>Join workers in the swarm Get command for joining as worker In manager node run command*</em>.</li> <li><code>docker swarm join-token worker</code> This will give command to join swarm as worker</li> <li><code>docker swarm join-token manager</code> This will give command to join swarm as manager.</li> <li><em>SSH into worker node (machine) and run command to join swarm as worker*</em>.</li> <li><code>docker node ls</code> In Manager Run command to verify worker is registered and is ready(Do this for all worker machines).</li> <li><em>On manager run standard docker commands*</em>.</li> <li><code>docker info</code> check the swarm section no of manager, nodes etc</li> <li><code>docker swarm</code> Now check docker swarm command options</li> <li><em>Run containers on Docker Swarm*</em>.</li> <li><code>docker service create --replicas 3 -p 80:80 --name &lt;serviceName&gt; &lt;nginx&gt;</code></li> <li><em>Check the status*</em>.</li> <li><code>docker service ls</code></li> <li><code>docker service ps &lt;serviceName&gt;</code> Check the service running on all nodes Check on the browser by giving ip for all nodes.</li> <li><em>Scale service up and down*</em>.</li> <li><code>docker service scale &lt;serviceName&gt;=2</code> On manager node.</li> <li><code>docker node update --availability drain &lt;worker1&gt;</code> Shutdown node</li> <li><em>Update service*</em>.</li> <li><code>docker service update --image imagename:version web</code></li> <li><code>docker service update --image nginx:1.14.0 &lt;serviceName&gt;</code></li> <li><code>docker service rm &lt;serviceName&gt;</code> Remove service</li> <li><code>docker swarm leave</code> to leave the swarm</li> <li><code>docker-machine stop machineName</code> to stop the machine</li> <li><code>docker-machine rm machineName</code> to remove the machine</li> </ul> <h2 id=problem--solution>Problem &amp; Solution</h2> <ol> <li><a href=https://stackoverflow.com/questions/48957195/how-to-fix-docker-got-permission-denied-issue>1 Problem</a> Got permission denied while trying to connect to the Docker daemon socket at <code>unix:///var/run/docker.sock:</code> Get <code>http://%2Fvar%2Frun%2Fdocker.sock/v1.40/images/json</code>: dial unix <code>/var/run/docker.sock:</code> connect: permission denied. <a href=https://docs.docker.com/install/linux/linux-postinstall/#manage-docker-as-a-non-root-user><strong>Solution 1</strong></a> Create the docker group if it does not exist</li> </ol> <ul> <li><code>sudo groupadd docker</code></li> <li><code>sudo usermod -aG docker $USER</code> Add your user to the docker group.</li> <li><code>newgrp docker</code> Run the following command or Logout and login again and run (that doesn&#39;t work you may need to reboot your machine first)</li> <li><code>docker images</code> Check if docker can be run without root</li> <li><em>Solution 2*</em>.</li> <li><code>sudo chmod 666 /var/run/docker.sock</code> Simple run this command.</li> </ul> <ol start=2> <li>Problem <strong>ERROR: Encountered errors while bringing up the project</strong>.</li> </ol> <p><strong>Solution</strong>.</p> <pre><code class=language-bash>docker-compose ps\ndocker-compose rm</code></pre> <ol start=3> <li>Problem</li> </ol> <p><strong>Pillow</strong> installation problem. <strong>Solution</strong>. python:<python_version>-alpine does not support pillow.</python_version></p> <ol start=4> <li>Problem ERROR: Couldn&#39;t connect to Docker daemon at http+docker://localhost - is it running?</li> </ol> <p><strong>Solution</strong>. Same as <strong>Promlem 1</strong>.</p> ";e.exports=o},ec0a:function(e,t,o){"use strict";o.d(t,"a",(function(){return n}));var n="totalPost"},f2a0:function(e,t){var o="<h1 id=terminal-command-line>Terminal Command Line</h1> <h2 id=1--what-is-the-shell>1 – What Is the Shell</h2> <p><code>date, cal, df, free, exit</code></p> <h2 id=2--navigation>2 – Navigation</h2> <p><code>pwd, cd, ls</code> <code>cd /usr/bin</code></p> <h2 id=3--exploring-the-system>3 – Exploring the System</h2> <pre><code class=language-bash>ls\nls /usr\nls ~ /usr\nls -l\nls -lt\nls -lt --reverse</code></pre> <p><strong>Option</strong>.</p> <p><code>-a, -A, -d, -F, -h, -l, -r, -s, -t</code></p> <pre><code class=language-bash>file picture.jpg\nless filename\nless /etc/passwd</code></pre> <p><strong>Less command</strong>.</p> <p><code>Page Up or b, Page Down or space, Up arrow, Down arrow, G, 1G or g, /characters, n, h, q</code></p> <p><strong>All Files</strong>.</p> <pre><code class=language-bash>/, /bin, /boot, /dev, /etc, /home, /lib, /lost+found, /media, /mnt, /opt, /proc, /root, /sbin, /tmp, /usr, /usr/bin, /usr/lib, /usr/local, /usr/sbin, /usr/share, /usr/share/doc, /var, /var/log</code></pre> <h2 id=4--manipulating-files-and-directories>4 – Manipulating Files and Directories</h2> <p><code>cp, mv, mkdir, rm, ln</code> <code>cp -u *.html destination</code></p> <p><strong>Wildcards</strong>.</p> <p><code>*, ?, [characters], [!characters], [[:class:]]</code></p> <p><strong>Character Class</strong>.</p> <p><code>[:alnum:], [:alpha:], [:digit:], [:lower:], [:upper:]</code></p> <p><strong>Pattern</strong>.</p> <p><code>*, g*, b*.txt, Data???, [abc]*, BACKUP.[0-9][0-9][0-9], [[:upper:]]*, [![:digit:]]*, *[[:lower:]123]</code></p> <pre><code class=language-bash>mkdir directory...\nmkdir dir1\nmkdir dir1 dir2 dir3\ncp item1 item2\ncp item... directory</code></pre> <p><strong>Options</strong>.</p> <p><code>-a, -i, -r, -u, -v</code></p> <pre><code class=language-bash>cp file1 file2\ncp -i file1 file2\ncp file1 file2 dir1\ncp dir1/* dir2\ncp -r dir1 dir2\nmv item1 item2\nmv item... directory</code></pre> <p><strong>Options</strong>.</p> <p><code>-i, -u, -v</code></p> <pre><code class=language-bash>mv file1 file2\nmv -i file1 file2\nmv file1 file2 dir1\nmv dir1 dir2\nrm item...</code></pre> <p><strong>Options</strong>.</p> <p><code>-i, -r, -f, -v</code></p> <pre><code class=language-bash>rm file1\nrm -i file1\nrm -r file1 dir1\nrm -rf file1 dir1</code></pre> <p>Be Careful with rm! Wrong: <code>rm * .html</code> Right: <code>rm *.html</code></p> <pre><code class=language-bash>ln file link\nln -s item link\nmkdir playground\ncd playground\nmkdir dir1 dir2\ncp /etc/passwd .\nls -l\ncp -v /etc/passwd .\ncp -i /etc/passwd .\nmv passwd fun\nmv fun dir1\nmv dir1/fun dir2\nmv dir2/fun .\nmv fun dir1\nmv dir1 dir2\nls -l dir2\nls -l dir2/dir1\nmv dir2/dir1 .\nmv dir1/fun .\nln fun fun-hard\nln fun dir1/fun-hard\nln fun dir2/fun-hard\nls -l\nls -li\nls -l dir1\nln -s /home/me/playground/fun dir1/fun-sym\nln -s dir1 dir1-sym\nls -l\nrm fun-hard\nls -l\nrm -i fun\nls -l\nless fun-sym\nrm fun-sym dir1-sym\nls -l\ncd\nrm -r playground</code></pre> <h2 id=5--working-with-commands>5 – Working with Commands</h2> <p><code>type, which, help, man, apropos, info, whatis, alias</code></p> <pre><code class=language-bash>type command\ntype type\ntype ls\ntype cp\nwhich ls\nwhich cd\nhelp cd\nmkdir --help\nman program\nman ls</code></pre> <p><strong>Section</strong>.</p> <p><code>1, 2, 3, 4, 5, 6, 7, 8</code></p> <pre><code class=language-bash>man section search_term\nman 5 passwd\napropos partiton\nwhatis ls</code></pre> <p><strong>Command</strong>. <code>?, PgUp or Backspace, PgDn or Space, n, p, u, Enter, q</code></p> <pre><code class=language-bash>info coreutils\ncommand1; command2; command3...\ncd /usr; ls; cd -\ntype test\ntype foo\nalias foo=&#39;cd /usr; ls; cd -&#39;\nalias name=&#39;string&#39;\nfoo\ntype foo\nunalias foo\ntype foo\ntype ls\nalias</code></pre> <h2 id=6--redirection>6 – Redirection</h2> <p><code>cat, sort, uniq, grep, wc, head, tail, tee</code></p> <pre><code class=language-bash>ls -l /usr/bin &gt; ls-output.txt\nls -l ls-output.txt\nless ls-output.txt\nls -l /bin/usr &gt; ls-output.txt\nls -l ls-output.txt\nls-output.txt\nls -l /usr/bin &gt;&gt; ls-output.txt\nls -l /usr/bin &gt;&gt; ls-output.txt\nls -l /usr/bin &gt;&gt; ls-output.txt\nls -l /usr/bin &gt;&gt; ls-output.txt\nls -l ls-output.txt\nls -l /bin/usr 2&gt; ls-error.txt\nls -l /bin/usr &gt; ls-output.txt 2&gt;&amp;1\nls -l /bin/usr &amp;&gt; ls-output.txt\nls -l /bin/usr &amp;&gt;&gt; ls-output.txt\nls -l /bin/usr 2&gt; /dev/null\ncat [file...]\ncat ls-output.txt\ncat movie.mpeg.0* &gt; movie.mpeg\ncat &gt; lazy_dog.txt\ncat lazy_dog.txt\ncat &lt; lazy_dog.txt\ncommand1 | command2\nls -l /usr/bin | less\nls /bin /usr/bin | sort | less\nls /bin /usr/bin | sort | uniq | less\nls /bin /usr/bin | sort | uniq -d | less\nwc ls-output.txt\nls /bin /usr/bin | sort | uniq | wc -l\ngrep pattern [file...]\nls /bin /usr/bin | sort | uniq | grep zip\nhead -n 5 ls-output.txt\ntail -n 5 ls-output.txt\nls /usr/bin | tail -n 5\ntail -f /var/log/messages\nls /usr/bin | tee ls.txt | grep zip</code></pre> <h2 id=7--seeing-the-world-as-the-shell-sees-it>7 – Seeing the World as the Shell Sees It</h2> <pre><code class=language-bash>echo this is a test\necho *\necho D*\necho *s\necho [[:upper:]]*\necho /usr/*/share\necho ~\necho ~foo\necho $((2 + 2))</code></pre> <h2 id=options>Options</h2> <p><code>+, -, *, /, %, **</code></p> <pre><code class=language-bash>echo $(($((5**2)) * 3))\necho $(((5**2) * 3))\necho Five divided by two equals $((5/2))\necho with $((5%2)) left over.\necho Front-{A,B,C}-Back\necho Number_{1..5}\necho {01..15}\necho {001..15}\necho {Z..A}\necho a{A{1,2},B{3,4}}b\nmkdir Photos\ncd Photos\nmkdir {2007..2009}-{01..12}\nls\necho $USER\nprintenv | less\necho $SUER\necho $(ls)\nls -l $(which cp)\nfile $(ls -d /usr/bin/* | grep zip)\nls -l `which cp`\necho this is a  test\necho The total is $100.00\nls -l two words.txt\nls -l &quot;two words.txt&quot;\nmv &quot;two words.txt&quot; two_words.txt\necho &quot;$USER $((2+2)) $(cal)&quot;\necho this is a  test\necho &quot;this is a test&quot;\necho $(cal)\necho &quot;$(cal)&quot;\necho text ~/*.txt {a,b} $(echo foo) $((2+2)) $USER\necho &quot;text ~/*.txt {a,b} $(echo foo) $((2+2)) $USER&quot;\necho &#39;text ~/*.txt {a,b} $(echo foo) $((2+2)) $USER&#39;\necho &quot;The balance for user $USER is: \\$5.00&quot;\nmv bad\\&amp;filename good_filename</code></pre> <p><strong>Escape Sequence</strong>.</p> <p><code>\\a, \\b, \\n, \\r, \\t</code></p> <pre><code class=language-bash>sleep 10; echo -e &quot;Time&#39;s up\\a&quot;\nsleep 10; echo &quot;Time&#39;s up&quot; $&#39;\\a&#39;</code></pre> <h2 id=8--advanced-keyboard-tricks>8 – Advanced Keyboard Tricks</h2> <p><code>clear, history</code></p> <p><strong>Key</strong>. <code>Ctrl-a, Ctrl-e, Ctrl-f, Ctrl-b, Alt-f, Alt-b, Alt-l</code></p> <p><strong>Key</strong>.</p> <p><code>Ctrl-d, Ctrl-t, Alt-t, Alt-l, Alt-u</code></p> <p><strong>Key</strong>.</p> <p><code>Ctrl-k, Ctrl-u, Alt-d, Alt-Backspace, Ctrl-y</code></p> <p><strong>Key</strong>.</p> <p><code>Alt-?, Alt-*</code></p> <pre><code class=language-bash>history | less\nhistory | grep /usr/bin\n!88</code></pre> <p><strong>Key inside history</strong>.</p> <p><code>Ctrl-p, Ctrl-n, Alt-&lt;, Alt-&gt;, Ctrl-r, Alt-p, Alt-n, Ctrl-o</code></p> <p><strong>Sequence</strong>.</p> <p><code>!!, !number, !string, !?string</code></p> <h2 id=9--permissions>9 – Permissions</h2> <p><code>id, chmod, umask, su, sudo, chown, chgrp, passwd</code></p> <pre><code class=language-bash>file /etc/shadow\nless /etc/shadow\n&gt; foo.txt\nls -l foo.txt</code></pre> <p><strong>Attribute</strong>.</p> <p>-, d, l, c, b rwx, rwx, rwx Owner, Group, World/Public -rwx------ -rw------- -rw-r--r-- -rwxr-xr-x -rw-rw---- lrwxrwxrwx drwxrwx--- drwxr-x---</p> <pre><code class=language-bash>&gt; foo.txt\nls -l foo.txt\nchmod 600 foo.txt\nls -l foo.txt</code></pre> <p><strong>Symbol</strong>.</p> <p><code>u, g, o, a</code></p> <p><strong>Notation</strong>.</p> <p><code>u+x, u-x, +x, o-rw, go=rw, u+x,go=rx</code></p> <pre><code class=language-bash>rm -f foo.txt\numask\n&gt; foo.txt\nls -l foo.txt\nrm foo.txt\numask 0000\n&gt; foo.txt\nls -l foo.txt\nrm foo.txt; umask 0002\nchmod u+s program\nchmod g+s dir\nchmod +t dir\nsu [-[l]] [user]\nsu -\nexit\nsu -c &#39;command&#39;\nsu -c &#39;ls -l /root/*&#39;\nsudo backup_script\nsudo -l\nchown [owner][:[group]] file...</code></pre> <p><strong>Argument</strong>.</p> <p><code>bob, bob:users, :admins, bob:</code></p> <pre><code class=language-bash>sudo cp myfile.txt ~tony\nsudo ls -l ~tony/myfile.txt\nsudo chown tony: ~tony/myfile.txt\nsudo ls -l ~tony/myfile.txt\nsudo mkdir /usr/local/share/Music\nls -ld /usr/local/share/Music\nsudo chown :music /usr/local/share/Music\nsudo chmod 775 /usr/local/share/Music\nls -ld /usr/local/share/Music\n&gt; /usr/local/share/Music/test_file\nls -l /usr/local/share/Music\nsudo chmod g+s /usr/local/share/Music\nls -ld /usr/local/share/Music\numask 0002\nrm /usr/local/share/Music/test_file\n&gt; /usr/local/share/Music/test_file\nmkdir /usr/local/share/Music/test_dir\nls -l /usr/local/share/Music\npasswd [user]\npasswd</code></pre> <h2 id=10--processes>10 – Processes</h2> <p><code>ps, top, jobs, bg, fg, kill, killall, shutdown, ps</code></p> <pre><code class=language-bash>ps x\nState:\nR, S, D, T, Z, &lt;, N\nps aux</code></pre> <p><strong>Header</strong>.</p> <p><code>USER, %CPU, %MEM, VSZ, RSS, START</code></p> <pre><code class=language-bash>top\nxlogo\nxlogo &amp;\nps\njobs\njobs\nfg %1\nxlogo\nbg %1\nxlogo &amp;\nkill 28401\nkill [-signal] PID...</code></pre> <p><strong>Number, Name</strong>.</p> <p><code>(1, HUP), (2, INT), (9, KILL), (15, TERM), (18, CONT), (19, STOP), (20, TSTP)</code></p> <pre><code class=language-bash>xlogo &amp;\nkill -1 13546\nxlogo &amp;\nkill -INT 13601\nxlogo &amp;\nkill -SIGINT 13608</code></pre> <p><strong>Number, Name</strong>.</p> <p><code>(3, QUIT), (11, SEGV), (28, WINCH)</code></p> <pre><code class=language-bash>kill -l\nkillall [-u user] [-signal] name...\nxlogo &amp;\nkillall xlogo\nsudo reboot\nsudo shutdown -h now\nsudo shutdown -r now</code></pre> <p><strong>Command</strong>.</p> <p><code>Pstree, vmstat, xload, tload</code></p> <h2 id=11--the-environment>11 – The Environment</h2> <p><code>printenv, set, export, alias</code></p> <pre><code class=language-bash>Printenv | less\nprintenv USER\nset | less\necho $HOME\nalias</code></pre> <p><strong>Variable</strong>.</p> <p><code>DISPLAY, EDITOR, SHELL, HOME, LANG, OLDPWD, PAGER, PATH, PS1, PWD, TERM, TZ, USER</code></p> <pre><code class=language-bash>/etc/profile\n~/.bash_profile\n~/.bash_login\n~/.profile\n/etc/bash.bashrc\n~/.bashrc\nfoo=&quot;This is some &quot;\necho $foo\nfoo=$foo&quot;text.&quot;\necho $foo\ngedit some_file\ncp .bashrc .bashrc.bak\nnano .bashrc\numask 0002\nexport HISTCONTROL=ignoredups\nexport HISTSIZE=1000\nalias l.=&#39;ls -d .* --color=auto&#39;\nalias ll=&#39;ls -l --color=auto&#39;\nsource ~/.bashrc\nll</code></pre> <h2 id=12--a-gentle-introduction-to-vi>12 – A Gentle Introduction to vi</h2> <p><code>vi</code></p> <p><code>rm -f foo.txt</code> <code>vi foo.txt</code></p> <p><strong>Then inside all in vi</strong>.</p> <p><code>:q, :q!, :w</code></p> <p><strong>Key</strong>.</p> <pre><code class=language-bash>l or right arrow,\nh or left arrow,\nj or down arrow,\nk or up arrow,\n0 (zero),\n^, $, w, W, b, B,\nCtrl-f or Page Down,\nCtrl-b or Page Up,\nnumberG,\nG</code></pre> <p><strong>Deleting Command</strong>.</p> <p><code>x, 3x, dd, 5dd, dW, d$, d0, d^, dG, d20G</code></p> <p><strong>Cutting, Copying, and Pasting Text</strong>.</p> <p><code>yy, 5yy, yW, y$, y0, y^, yG, y20G</code></p> <p><strong>Searching</strong>.</p> <pre><code class=language-bash>/charecter\nGlobal Search-and-Replace:\n:%s/Line/line/g</code></pre> <p><strong>Item</strong>.</p> <p><code>:, %, s, /Line/line/, g</code></p> <p><strong>Global Search-and-Replace</strong>.</p> <p><code>:%s/line/Line/gc</code></p> <p><strong>Key</strong>.</p> <p><code>y, n, a, q or Esc, l, Ctrl-e, Ctrl-y</code></p> <pre><code class=language-bash>vi file1 file2 file3...\nls -l /usr/bin &gt; ls-output.txt\nvi foo.txt ls-output.txt</code></pre> <p><strong>Switching Between Files:</strong>.</p> <p><code>:bn, :bp, :buffers, :buffers 2</code></p> <p><code>vi foo.txt</code></p> <p><strong>Inside editor</strong>.</p> <pre><code class=language-bash>:e ls-output.txt\n:buffers\n:buffers 1\n:buffer 2</code></pre> <p><code>vi ls-output.txt</code></p> <p><strong>Inside Editor</strong>.</p> <pre><code class=language-bash>:r foo.txt\nZZ\n:w foo1.txt</code></pre> <h2 id=13--customizing-the-prompt>13 – Customizing the Prompt</h2> <p><code>echo $PS1</code></p> <p><strong>Sequence</strong>.</p> <p><code>\\a, \\d, \\h, \\H, \\j, \\l, \\n, \\r, \\s, \\t, \\T, \\@, \\A, \\u, \\v, \\w, \\W, \\!, \\#, \\$, \\[, \\]</code></p> <pre><code class=language-bash>ps1_old=&quot;$PS1&quot;\necho $ps1_old\nPS1=&quot;$ps1_old&quot;\nPS1=\nPS1=&quot;\\[\\a\\]\\$ &quot;\nPS1=&quot;\\A \\h \\$ &quot;\nPS1=&quot;&lt;\\u@\\h \\W&gt;\\$ &quot;</code></pre> <p><strong>Sequence, Text Color</strong>.</p> <p><code>(\\033[0;30m, Black), (\\033[0;31m, Red), (\\033[0;32m, Green), ...........</code></p> <pre><code class=language-bash>PS1=&quot;\\[\\033[0;31m\\]&lt;\\u@\\h \\W&gt;\\$ &quot;\nPS1=&quot;\\[\\033[0;31m\\]&lt;\\u@\\h \\W&gt;\\$\\[\\033[0m\\] &quot;</code></pre> <p><strong>Sequence, Background Color</strong>.</p> <p><code>(\\033[0;40m, Black), (\\033[0;41m, Red), .................</code></p> <p><strong>Escape Code</strong>.</p> <p><code>\\033[l;cH, \\033[nA, \\033[nB, \\033[nC, .................</code></p> <p><code>PS1=&quot;\\[\\033[s\\033[0;0H\\033[0;41m\\033[K\\033[1;33m\\t\\033[0m\\033[u\\]&lt;\\u@\\h \\W&gt;\\$ &quot;</code></p> <p><strong>Saving the Prompt inside .bashrc</strong>.</p> <pre><code class=language-bash>PS1=&quot;\\[\\033[s\\033[0;0H\\033[0;41m\\033[K\\033[1;33m\\t\\033[0m\\033[u\\]&lt;\\u@\\h \\W&gt;\\$ &quot;\nexport PS1</code></pre> <h2 id=14--package-management>14 – Package Management</h2> <pre><code class=language-bash>apt-get update\napt-get install package_name\ndpkg -i package_file\napt-get remove package_name\napt-get update; apt-get upgrade\ndpkg -i package_file\ndpkg -l\ndpkg --status emacs\napt-cache show package_name</code></pre> <h2 id=15--storage-media>15 – Storage Media</h2> <p><strong>very dangerous</strong>.</p> <p><code>mount, umount, fsck, fdisk, mkfs, dd, genisoimage, wodim, md5sum</code></p> <pre><code class=language-bash>su -\numount /dev/sdc\nmkdir /mnt/cdrom\nmount -t iso9660 /dev/sdc /mnt/cdrom\ncd /mnt/cdrom\nls\numount /dev/sdc\ncd\numount /dev/sdc\nls /dev\nsudo tail -f /var/log/messages\nsudo mkdir /mnt/flash\nsudo mount /dev/sdb1 /mnt/flash\ndf\nsudo umount /dev/sdb1\nsudo fdisk /dev/sdb</code></pre> <p><strong>Command action</strong>.</p> <p><code>a, b, c, d, l, m, n, o, p, q, s, t, u, v, w, x.</code></p> <pre><code class=language-bash>sudo mkfs -t ext4 /dev/sdb1\nsudo mkfs -t vfat /dev/sdb1\nsudo fsck /dev/sdb1\ndd if=input_file of=output_file [bs=block_size [count=blocks]]\ndd if=/dev/sdb of=/dev/sdc\ndd if=/dev/cdrom of=ubuntu.iso\ngenisoimage -o cd-rom.iso -R -J ~/cd-rom-files\nwodim dev=/dev/cdrw blank=fast\nwodim dev=/dev/cdrw image.iso\nmd5sum image.iso\nmd5sum /dev/cdrom\nmd5sum dvd-image.iso; dd if=/dev/dvd bs=2048 count=$(( $(stat -c &quot;%s&quot;dvd-image.iso) / 2048 )) | md5sum</code></pre> <h2 id=16--networking>16 – Networking</h2> <p><code>ping, traceroute, ip, netstat, ftp, wget, ssh</code></p> <pre><code class=language-bash>ping linuxcommand.org\ntraceroute slashdot.org\nip a\nnetstat -ie\nnetstat -r</code></pre> <pre><code class=language-bash>wget http://linuxcommand.org/index.php\nssh remote-sys\nssh bob@remote-sys\nssh remote-sys free\nssh remote-sys &#39;ls *&#39; &gt; dirlist.txt\nssh remote-sys &#39;ls * &gt; dirlist.txt&#39;\nssh -X remote-sys\nxload\nscp remote-sys:document.txt .\nscp bob@remote-sys:document.txt .\nsftp remote-sys</code></pre> <p><strong>Into ftp mode</strong>.</p> <pre><code class=language-bash>lcd Desktop\nget ubuntu-8.04-desktop-i386.iso</code></pre> <h2 id=17--searching-for-files>17 – Searching for Files</h2> <p><code>locate, find, xargs, touch, stat</code></p> <pre><code class=language-bash>locate bin/zip\nlocate zip | grep bin\nfind ~\nfind ~ | wc -l\nfind ~ -type d | wc -l\nfind ~ -type f | wc -l</code></pre> <p><strong>File Type</strong>.</p> <p><code>b, c, d, f, l</code></p> <p><code>find ~ -type f -name &quot;*.JPG&quot; -size +1M | wc -l</code></p> <p><strong>Character size</strong>.</p> <p><code>b, c, w, k, M, G</code></p> <p><strong>Test</strong>.</p> <pre><code class=language-bash>-cmin n,\n-cnewer file,\n-ctime n,\n-empty,\n-group name,\n-iname pattern,\n-inum n,\n-mmin n,\n-mtime n,\n-name pattern,\n-newer file,\n-nouser,\n-nogroup,\n-perm mode,\n-samefile name,\n-size n\n-type c\n-user name</code></pre> <pre><code class=language-bash>find ~ \\( -type f -not -perm 0600 \\) -or \\( -type d -not -perm 0700 \\)\nfind . \\( -type f -not -perm 0600 \\) -or \\( -type d -not -perm 0700 \\)\nfind ~\nfind ~ -print\nfind ~ -type f -name &#39;*.bak&#39; -delete\nfind ~ -type f -name &#39;*.bak&#39; -print\nfind ~ -type f -and -name &#39;*.bak&#39; -and -print</code></pre> <p><strong>Test/Action</strong> <code>-print, -name ‘*.bak’, -type f</code></p> <pre><code class=language-bash>find ~ -print -and -type f -and -name &#39;*.bak&#39;\n-exec rm &#39;{}&#39; &#39;;&#39;\nfind ~ -type f -name &#39;foo*&#39; -ok ls -l &#39;{}&#39; &#39;;&#39;\nfind ~ -type f -name &#39;foo*&#39; -exec ls -l &#39;{}&#39; &#39;;&#39;\nfind ~ -type f -name &#39;foo*&#39; -exec ls -l &#39;{}&#39; +\nfind ~ -type f -name &#39;foo*&#39; -print | xargs ls -l\nfind ~ -iname &#39;*.jpg&#39; -print0 | xargs --null ls -l</code></pre> <pre><code class=language-bash>mkdir -p playground/dir-{001..100}\ntouch playground/dir-{001..100}/file-{A..Z}\nfind playground -type f -name &#39;file-A&#39;\nfind playground -type f -name &#39;file-A&#39; | wc -l\ntouch playground/timestamp\nstat playground/timestamp\ntouch playground/timestamp\nstat playground/timestamp\nfind playground -type f -name &#39;file-B&#39; -exec touch &#39;{}&#39; &#39;;&#39;\nfind playground \\( -type f -not -perm 0600 \\) -or \\( -type d -not -perm 0700 \\)\nfind playground \\( -type f -not -perm 0600 -exec chmod 0600 &#39;{}&#39; &#39;;&#39; \\) -or \\( -type d -not -perm 0700 -exec chmod 0700 &#39;{}&#39; &#39;;&#39; \\)</code></pre> <p><strong>Option</strong> <code>-depth, -maxdepth levels, -mindepth levels, -mount, -noleaf</code></p> <h2 id=18--archiving-and-backup>18 – Archiving and Backup</h2> <p><code>gzip, bzip2, tar, zip, rsync</code></p> <pre><code class=language-bash>ls -l /etc &gt; foo.txt\nls -l foo.*\ngzip foo.txt\nls -l foo.*\ngunzip foo.txt\nls -l foo.*</code></pre> <p><strong>Option</strong> <code>-c, -d, -f, -h, -l, -r, -t, -v , -number</code></p> <pre><code class=language-bash>gzip foo.txt\ngzip -tv foo.txt.gz\ngzip -d foo.txt.gz\nls -l /etc | gzip &gt; foo.txt.gz\ngunzip foo.txt\ngunzip -c foo.txt | less\nzcat foo.txt.gz | less</code></pre> <pre><code class=language-bash>ls -l /etc &gt; foo.txt\nls -l foo.txt\nbzip2 foo.txt\nls -l foo.txt.bz2\nbunzip2 foo.txt.bz2</code></pre> <p><strong>Mode</strong> <code>c, x, r, t</code></p> <pre><code class=language-bash>mkdir -p playground/dir-{001..100}\ntouch playground/dir-{001..100}/file-{A..Z}\ntar cf playground.tar playground</code></pre> <pre><code class=language-bash>tar tf playground.tar\ntar tvf playground.tar\nmkdir foo\ncd foo\ntar xf ../playground.tar\nls\ncd\ntar cf playground2.tar ~/playground\ncd foo\ntar xf ../playground2.tar\nls home\nls home/me\nsudo tar cf /media/BigDisk/home.tar /home\ncd /\nsudo tar xf /media/BigDisk/home.tar\ntar xf archive.tar pathname\ncd foo\ntar xf ../playground2.tar --wildcards &#39;home/me/playground/dir-*/file-A&#39;\nfind playground -name &#39;file-A&#39; -exec tar rf playground.tar &#39;{}&#39; &#39;+&#39;\nfind playground -name &#39;file-A&#39; | tar cf - --files-from=- | gzip &gt; playground.tgz\nfind playground -name &#39;file-A&#39; | tar czf playground.tgz -T -\nssh remote-sys &#39;tar cf - Documents&#39; | tar xf -</code></pre> <pre><code class=language-bash>zip -r playground.zip playground\ncd foo\nunzip ../playground.zip\nunzip -l playground.zip playground/dir-087/file-Z\ncd foo\nunzip ../playground.zip playground/dir-087/file-Z\nfind playground -name &quot;file-A&quot; | zip -@ file-A.zip\nls -l /etc/ | zip ls-etc.zip -\nunzip -p ls-etc.zip | less</code></pre> <pre><code class=language-bash>rm -rf foo/*\nrsync -av playground foo\nrsync source destination\nls destination\nrsync source/ destination\nls destination\nmkdir /media/BigDisk/backup\nsudo rsync -av --delete /etc /home /usr/local /media/BigDisk/backup</code></pre> <p><code>alias backup=&#39;sudo rsync -av --delete /etc /home /usr/local/media/BigDisk/backup&#39;</code></p> <pre><code class=language-bash>sudo rsync -av --delete --rsh=ssh /etc /home/usr/local remote-sys:/backup mkdir fedora-devel\nrsync -av –delete rsync://archive.linux.duke.edu/fedora/linux/development/rawhide/Everything/x86_64/os/ fedora-devel</code></pre> <h2 id=19--regular-expressions>19 – Regular Expressions</h2> <p><code>ls /usr/bin | grep zip</code></p> <p><strong>Option</strong>. <code>-i, -v, -c, -l, -L, -n, -h</code></p> <pre><code class=language-bash>/bin &gt; dirlist-bin.txt\n/usr/bin &gt; dirlist-usr-bin.txt\n/sbin &gt; dirlist-sbin.txt\n/usr/sbin &gt; dirlist-usr-sbin.txt\ndirlist*.txt\ngrep -l bzip dirlist*.txt\ngrep -L bzip dirlist*.txt\ngrep -h &#39;.zip&#39; dirlist*.txt\ngrep -h &#39;^zip&#39; dirlist*.txt\ngrep -h &#39;zip$&#39; dirlist*.txt\ngrep -h &#39;^zip$&#39; dirlist*.txt\ngrep -i &#39;^..j.r$&#39; /usr/share/dict/words\ngrep -h &#39;[bg]zip&#39; dirlist*.txt\ngrep -h &#39;[^bg]zip&#39; dirlist*.txt\ngrep -h &#39;^[ABCDEFGHIJKLMNOPQRSTUVWXZY]&#39; dirlist*.txt\ngrep -h &#39;^[A-Z]&#39; dirlist*.txt\ngrep -h &#39;[A-Z]&#39; dirlist*.txt\ngrep -h &#39;[-AZ]&#39; dirlist*.txt</code></pre> <pre><code class=language-bash>ls /usr/sbin/[ABCDEFGHIJKLMNOPQRSTUVWXYZ]*\nls /usr/sbin/[A-Z]*\necho $LANG</code></pre> <p><strong>Character Class</strong>. <code>[:alnum:], [:alnum:], [:word:], [:alpha:], [:blank:], [:cntrl:], [:digit:], [:graph:], [:lower:], [:punct:], [:print:], [:space:], [:upper:], [:xdigit:]</code></p> <pre><code class=language-bash>echo &quot;AAA&quot; | grep AAA\necho &quot;BBB&quot; | grep AAA\necho &quot;AAA&quot; | grep -E &#39;AAA|BBB&#39;\necho &quot;BBB&quot; | grep -E &#39;AAA|BBB&#39;\necho &quot;CCC&quot; | grep -E &#39;AAA|BBB&#39;\ngrep -Eh &#39;^(bz|gz|zip)&#39; dirlist*.txt\ngrep -Eh &#39;^bz|gz|zip&#39; dirlist*.txt</code></pre> <pre><code class=language-bash>echo &quot;(555) 123-4567&quot; | grep -E &#39;^\\(?[0-9][0-9][0-9]\\)? [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]$&#39;\necho &quot;555 123-4567&quot; | grep -E &#39;^\\(?[0-9][0-9][0-9]\\)? [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]$&#39;\necho &quot;AAA 123-4567&quot; | grep -E &#39;^\\(?[0-9][0-9][0-9]\\)? [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]$&#39;\necho &quot;This works.&quot; | grep -E &#39;[[:upper:]][[:upper:][:lower:] ]*\\.&#39;\necho &quot;This Works.&quot; | grep -E &#39;[[:upper:]][[:upper:][:lower:] ]*\\.&#39;\necho &quot;this does not&quot; | grep -E &#39;[[:upper:]][[:upper:][:lower:] ]*\\.&#39;\necho &quot;This that&quot; | grep -E &#39;^([[:alpha:]]+ ?)+$&#39;\necho &quot;a b c&quot; | grep -E &#39;^([[:alpha:]]+ ?)+$&#39;\necho &quot;a b 9&quot; | grep -E &#39;^([[:alpha:]]+ ?)+$&#39;\necho &quot;abc d&quot; | grep -E &#39;^([[:alpha:]]+ ?)+$&#39;</code></pre> <p><strong>Specifier</strong>. <code>{n}, {n,m}, {n,} {,m}</code></p> <pre><code class=language-bash>echo &quot;(555) 123-4567&quot; | grep -E &#39;^\\(?[0-9]{3}\\)? [0-9]{3}-[0-9]{4}$&#39;\necho &quot;555 123-4567&quot; | grep -E &#39;^\\(?[0-9]{3}\\)? [0-9]{3}-[0-9]{4}$&#39;\necho &quot;5555 123-4567&quot; | grep -E &#39;^\\(?[0-9]{3}\\)? [0-9]{3}-[0-9]{4}$&#39;\nfor i in {1..10}; do echo &quot;(${RANDOM:0:3}) ${RANDOM:0:3}-${RANDOM:0:4}&quot; &gt;&gt; phonelist.txt; done\ngrep -Ev &#39;^\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}$&#39; phonelist.txt</code></pre> <pre><code class=language-bash>find . -regex &#39;.*[^-_./0-9a-zA-Z].*&#39;\nlocate --regex &#39;bin/(bz|gz|zip)&#39;</code></pre> <p><strong>inside less or vim</strong> <code>/^\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}$</code></p> ";e.exports=o}});